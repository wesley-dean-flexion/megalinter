{
    "actionlint": [
        "Usage: actionlint [FLAGS] [FILES...] [-]",
        "",
        "  actionlint is a linter for GitHub Actions workflow files.",
        "",
        "  To check all YAML files in current repository, just run actionlint without",
        "  arguments. It automatically finds the nearest '.github/workflows' directory:",
        "",
        "    $ actionlint",
        "",
        "  To check specific files, pass the file paths as arguments:",
        "",
        "    $ actionlint file1.yaml file2.yaml",
        "",
        "  To check content which is not saved in file yet (e.g. output from some",
        "  command), pass - argument. It reads stdin and checks it as workflow file:",
        "",
        "    $ actionlint -",
        "",
        "  To serialize errors into JSON, use -format option. It allows to format error",
        "  messages flexibly with Go template syntax.",
        "",
        "    $ actionlint -format '{{json .}}'",
        "",
        "Documents:",
        "",
        "  https://github.com/rhysd/actionlint/tree/main/docs",
        "",
        "Flags:",
        "  -color",
        "      Always enable colorful output. This is useful to force colorful outputs",
        "  -config-file string",
        "      File path to config file",
        "  -debug",
        "      Enable debug output (for development)",
        "  -format string",
        "      Custom template to format error messages in Go template syntax. See https://github.com/rhysd/actionlint/tree/main/docs/usage.md#format",
        "  -ignore value",
        "      Regular expression matching to error messages you want to ignore. This flag is repeatable",
        "  -init-config",
        "      Generate default config file at .github/actionlint.yaml in current project",
        "  -no-color",
        "      Disable colorful output",
        "  -oneline",
        "      Use one line per one error. Useful for reading error messages from programs",
        "  -pyflakes string",
        "      Command name or file path of \"pyflakes\" external command (default \"pyflakes\")",
        "  -shellcheck string",
        "      Command name or file path of \"shellcheck\" external command (default \"shellcheck\")",
        "  -stdin-filename string",
        "      File name when reading input from stdin",
        "  -verbose",
        "      Enable verbose output",
        "  -version",
        "      Show version and how this binary was installed"
    ],
    "ansible-lint": [
        "usage: ansible-lint [-h] [-L]",
        "                    [-f {rich,plain,rst,json,codeclimate,quiet,pep8}] [-q]",
        "                    [-p] [--progressive] [--project-dir PROJECT_DIR]",
        "                    [-r RULESDIR] [-R] [--write] [--show-relpath] [-t TAGS]",
        "                    [-T] [-v] [-x SKIP_LIST] [-w WARN_LIST]",
        "                    [--enable-list ENABLE_LIST] [--nocolor] [--force-color]",
        "                    [--exclude EXCLUDE_PATHS] [-c CONFIG_FILE] [--offline]",
        "                    [--version]",
        "                    [lintables ...]",
        "",
        "positional arguments:",
        "  lintables             One or more files or paths. When missing it will",
        "                        enable auto-detection mode.",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -L                    list all the rules",
        "  -f {rich,plain,rst,json,codeclimate,quiet,pep8}",
        "                        stdout formatting, json being an alias for",
        "                        codeclimate. (default: rich)",
        "  -q                    quieter, reduce verbosity, can be specified twice.",
        "  -p                    parseable output, same as '-f pep8'",
        "  --progressive         Return success if it detects a reduction in number of",
        "                        violations compared with previous git commit. This",
        "                        feature works only in git repositories.",
        "  --project-dir PROJECT_DIR",
        "                        Location of project/repository, autodetected based on",
        "                        location of configuration file.",
        "  -r RULESDIR           Specify custom rule directories. Add -R to keep using",
        "                        embedded rules from /usr/local/lib/python3.10/site-",
        "                        packages/ansiblelint/rules",
        "  -R                    Keep default rules when using -r",
        "  --write               Reformat YAML files to standardize spacing, quotes,",
        "                        etc. Future versions will expand this option so it",
        "                        fixes more issues.",
        "  --show-relpath        Display path relative to CWD",
        "  -t TAGS               only check rules whose id/tags match these values",
        "  -T                    list all the tags",
        "  -v                    Increase verbosity level (-vv for more)",
        "  -x SKIP_LIST          only check rules whose id/tags do not match these",
        "                        values",
        "  -w WARN_LIST          only warn about these rules, unless overridden in",
        "                        config file defaults to 'experimental'",
        "  --enable-list ENABLE_LIST",
        "                        activate optional rules by their tag name",
        "  --nocolor             disable colored output, same as NO_COLOR=1",
        "  --force-color         Force colored output, same as FORCE_COLOR=1",
        "  --exclude EXCLUDE_PATHS",
        "                        path to directories or files to skip. This option is",
        "                        repeatable.",
        "  -c CONFIG_FILE        Specify configuration file to use. By default it will",
        "                        look for '.ansible-lint' or '.config/ansible-lint.yml'",
        "  --offline             Disable installation of requirements.yml",
        "  --version"
    ],
    "arm-ttk": [
        "\u001b[91mTest-AzTemplate:",
        "\u001b[96mLine |",
        "\u001b[96m   2 | \u001b[0m $TAZ_V = (Test-AzTemplate \u001b[96m-help\u001b[0m);",
        "\u001b[96m     | \u001b[91m                           ~~~~~",
        "\u001b[91m\u001b[96m     | \u001b[91mA parameter cannot be found that matches parameter name 'help'.\u001b[0m"
    ],
    "bandit": [
        "usage: bandit [-h] [-r] [-a {file,vuln}] [-n CONTEXT_LINES] [-c CONFIG_FILE]",
        "              [-p PROFILE] [-t TESTS] [-s SKIPS]",
        "              [-l | --severity-level {all,low,medium,high}]",
        "              [-i | --confidence-level {all,low,medium,high}]",
        "              [-f {csv,custom,html,json,sarif,screen,txt,xml,yaml}]",
        "              [--msg-template MSG_TEMPLATE] [-o [OUTPUT_FILE]] [-v] [-d] [-q]",
        "              [--ignore-nosec] [-x EXCLUDED_PATHS] [-b BASELINE]",
        "              [--ini INI_PATH] [--exit-zero] [--version]",
        "              [targets ...]",
        "",
        "Bandit - a Python source code security analyzer",
        "",
        "positional arguments:",
        "  targets               source file(s) or directory(s) to be tested",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -r, --recursive       find and process files in subdirectories",
        "  -a {file,vuln}, --aggregate {file,vuln}",
        "                        aggregate output by vulnerability (default) or by",
        "                        filename",
        "  -n CONTEXT_LINES, --number CONTEXT_LINES",
        "                        maximum number of code lines to output for each issue",
        "  -c CONFIG_FILE, --configfile CONFIG_FILE",
        "                        optional config file to use for selecting plugins and",
        "                        overriding defaults",
        "  -p PROFILE, --profile PROFILE",
        "                        profile to use (defaults to executing all tests)",
        "  -t TESTS, --tests TESTS",
        "                        comma-separated list of test IDs to run",
        "  -s SKIPS, --skip SKIPS",
        "                        comma-separated list of test IDs to skip",
        "  -l, --level           report only issues of a given severity level or higher",
        "                        (-l for LOW, -ll for MEDIUM, -lll for HIGH)",
        "  --severity-level {all,low,medium,high}",
        "                        report only issues of a given severity level or",
        "                        higher. \"all\" and \"low\" are likely to produce the same",
        "                        results, but it is possible for rules to be undefined",
        "                        which will not be listed in \"low\".",
        "  -i, --confidence      report only issues of a given confidence level or",
        "                        higher (-i for LOW, -ii for MEDIUM, -iii for HIGH)",
        "  --confidence-level {all,low,medium,high}",
        "                        report only issues of a given confidence level or",
        "                        higher. \"all\" and \"low\" are likely to produce the same",
        "                        results, but it is possible for rules to be undefined",
        "                        which will not be listed in \"low\".",
        "  -f {csv,custom,html,json,sarif,screen,txt,xml,yaml}, --format {csv,custom,html,json,sarif,screen,txt,xml,yaml}",
        "                        specify output format",
        "  --msg-template MSG_TEMPLATE",
        "                        specify output message template (only usable with",
        "                        --format custom), see CUSTOM FORMAT section for list",
        "                        of available values",
        "  -o [OUTPUT_FILE], --output [OUTPUT_FILE]",
        "                        write report to filename",
        "  -v, --verbose         output extra information like excluded and included",
        "                        files",
        "  -d, --debug           turn on debug mode",
        "  -q, --quiet, --silent",
        "                        only show output in the case of an error",
        "  --ignore-nosec        do not skip lines with # nosec comments",
        "  -x EXCLUDED_PATHS, --exclude EXCLUDED_PATHS",
        "                        comma-separated list of paths (glob patterns",
        "                        supported) to exclude from scan (note that these are",
        "                        in addition to the excluded paths provided in the",
        "                        config file) (default:",
        "                        .svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.eggs,*.egg)",
        "  -b BASELINE, --baseline BASELINE",
        "                        path of a baseline report to compare against (only",
        "                        JSON-formatted files are accepted)",
        "  --ini INI_PATH        path to a .bandit file that supplies command line",
        "                        arguments",
        "  --exit-zero           exit with 0, even with results found",
        "  --version             show program's version number and exit",
        "",
        "CUSTOM FORMATTING",
        "-----------------",
        "",
        "Available tags:",
        "",
        "    {abspath}, {relpath}, {line}, {col}, {test_id},",
        "    {severity}, {msg}, {confidence}, {range}",
        "",
        "Example usage:",
        "",
        "    Default template:",
        "    bandit -r examples/ --format custom --msg-template \\",
        "    \"{abspath}:{line}: {test_id}[bandit]: {severity}: {msg}\"",
        "",
        "    Provides same output as:",
        "    bandit -r examples/ --format custom",
        "",
        "    Tags can also be formatted in python string.format() style:",
        "    bandit -r examples/ --format custom --msg-template \\",
        "    \"{relpath:20.20s}: {line:03}: {test_id:^8}: DEFECT: {msg:>20}\"",
        "",
        "    See python documentation for more information about formatting style:",
        "    https://docs.python.org/3/library/string.html",
        "",
        "The following tests were discovered and loaded:",
        "-----------------------------------------------",
        "  B101  assert_used",
        "  B102  exec_used",
        "  B103  set_bad_file_permissions",
        "  B104  hardcoded_bind_all_interfaces",
        "  B105  hardcoded_password_string",
        "  B106  hardcoded_password_funcarg",
        "  B107  hardcoded_password_default",
        "  B108  hardcoded_tmp_directory",
        "  B110  try_except_pass",
        "  B112  try_except_continue",
        "  B201  flask_debug_true",
        "  B301  pickle",
        "  B302  marshal",
        "  B303  md5",
        "  B304  ciphers",
        "  B305  cipher_modes",
        "  B306  mktemp_q",
        "  B307  eval",
        "  B308  mark_safe",
        "  B309  httpsconnection",
        "  B310  urllib_urlopen",
        "  B311  random",
        "  B312  telnetlib",
        "  B313  xml_bad_cElementTree",
        "  B314  xml_bad_ElementTree",
        "  B315  xml_bad_expatreader",
        "  B316  xml_bad_expatbuilder",
        "  B317  xml_bad_sax",
        "  B318  xml_bad_minidom",
        "  B319  xml_bad_pulldom",
        "  B320  xml_bad_etree",
        "  B321  ftplib",
        "  B323  unverified_context",
        "  B324  hashlib_insecure_functions",
        "  B325  tempnam",
        "  B401  import_telnetlib",
        "  B402  import_ftplib",
        "  B403  import_pickle",
        "  B404  import_subprocess",
        "  B405  import_xml_etree",
        "  B406  import_xml_sax",
        "  B407  import_xml_expat",
        "  B408  import_xml_minidom",
        "  B409  import_xml_pulldom",
        "  B410  import_lxml",
        "  B411  import_xmlrpclib",
        "  B412  import_httpoxy",
        "  B413  import_pycrypto",
        "  B415  import_pyghmi",
        "  B501  request_with_no_cert_validation",
        "  B502  ssl_with_bad_version",
        "  B503  ssl_with_bad_defaults",
        "  B504  ssl_with_no_version",
        "  B505  weak_cryptographic_key",
        "  B506  yaml_load",
        "  B507  ssh_no_host_key_verification",
        "  B508  snmp_insecure_version",
        "  B509  snmp_weak_cryptography",
        "  B601  paramiko_calls",
        "  B602  subprocess_popen_with_shell_equals_true",
        "  B603  subprocess_without_shell_equals_true",
        "  B604  any_other_function_with_shell_equals_true",
        "  B605  start_process_with_a_shell",
        "  B606  start_process_with_no_shell",
        "  B607  start_process_with_partial_path",
        "  B608  hardcoded_sql_expressions",
        "  B609  linux_commands_wildcard_injection",
        "  B610  django_extra_used",
        "  B611  django_rawsql_used",
        "  B701  jinja2_autoescape_false",
        "  B702  use_of_mako_templates",
        "  B703  django_mark_safe"
    ],
    "bash-exec": [
        "GNU bash, version 5.1.16(1)-release-(x86_64-alpine-linux-musl)",
        "Usage:  bash [GNU long option] [option] ...",
        "  bash [GNU long option] [option] script-file ...",
        "GNU long options:",
        "  --debug",
        "  --debugger",
        "  --dump-po-strings",
        "  --dump-strings",
        "  --help",
        "  --init-file",
        "  --login",
        "  --noediting",
        "  --noprofile",
        "  --norc",
        "  --posix",
        "  --pretty-print",
        "  --rcfile",
        "  --restricted",
        "  --verbose",
        "  --version",
        "Shell options:",
        "  -ilrsD or -c command or -O shopt_option    (invocation only)",
        "  -abefhkmnptuvxBCHP or -o option",
        "Type `bash -c \"help set\"' for more information about shell options.",
        "Type `bash -c help' for more information about shell builtin commands.",
        "Use the `bashbug' command to report bugs.",
        "",
        "bash home page: <http://www.gnu.org/software/bash>",
        "General help using GNU software: <http://www.gnu.org/gethelp/>"
    ],
    "black": [
        "Usage: black [OPTIONS] SRC ...",
        "",
        "  The uncompromising code formatter.",
        "",
        "Options:",
        "  -c, --code TEXT                 Format the code passed in as a string.",
        "  -l, --line-length INTEGER       How many characters per line to allow.",
        "                                  [default: 88]",
        "  -t, --target-version [py33|py34|py35|py36|py37|py38|py39|py310|py311]",
        "                                  Python versions that should be supported by",
        "                                  Black's output. [default: per-file auto-",
        "                                  detection]",
        "  --pyi                           Format all input files like typing stubs",
        "                                  regardless of file extension (useful when",
        "                                  piping source on standard input).",
        "  --ipynb                         Format all input files like Jupyter",
        "                                  Notebooks regardless of file extension",
        "                                  (useful when piping source on standard",
        "                                  input).",
        "  --python-cell-magics TEXT       When processing Jupyter Notebooks, add the",
        "                                  given magic to the list of known python-",
        "                                  magics (prun, pypy, capture, python3, time,",
        "                                  python, timeit). Useful for formatting cells",
        "                                  with custom python magics.",
        "  -S, --skip-string-normalization",
        "                                  Don't normalize string quotes or prefixes.",
        "  -C, --skip-magic-trailing-comma",
        "                                  Don't use trailing commas as a reason to",
        "                                  split lines.",
        "  --preview                       Enable potentially disruptive style changes",
        "                                  that may be added to Black's main",
        "                                  functionality in the next major release.",
        "  --check                         Don't write the files back, just return the",
        "                                  status. Return code 0 means nothing would",
        "                                  change. Return code 1 means some files would",
        "                                  be reformatted. Return code 123 means there",
        "                                  was an internal error.",
        "  --diff                          Don't write the files back, just output a",
        "                                  diff for each file on stdout.",
        "  --color / --no-color            Show colored diff. Only applies when",
        "                                  `--diff` is given.",
        "  --fast / --safe                 If --fast given, skip temporary sanity",
        "                                  checks. [default: --safe]",
        "  --required-version TEXT         Require a specific version of Black to be",
        "                                  running (useful for unifying results across",
        "                                  many environments e.g. with a pyproject.toml",
        "                                  file). It can be either a major version",
        "                                  number or an exact version.",
        "  --include TEXT                  A regular expression that matches files and",
        "                                  directories that should be included on",
        "                                  recursive searches. An empty value means all",
        "                                  files are included regardless of the name.",
        "                                  Use forward slashes for directories on all",
        "                                  platforms (Windows, too). Exclusions are",
        "                                  calculated first, inclusions later.",
        "                                  [default: (\\.pyi?|\\.ipynb)$]",
        "  --exclude TEXT                  A regular expression that matches files and",
        "                                  directories that should be excluded on",
        "                                  recursive searches. An empty value means no",
        "                                  paths are excluded. Use forward slashes for",
        "                                  directories on all platforms (Windows, too).",
        "                                  Exclusions are calculated first, inclusions",
        "                                  later. [default: /(\\.direnv|\\.eggs|\\.git|\\.h",
        "                                  g|\\.mypy_cache|\\.nox|\\.tox|\\.venv|venv|\\.svn",
        "                                  |_build|buck-",
        "                                  out|build|dist|__pypackages__)/]",
        "  --extend-exclude TEXT           Like --exclude, but adds additional files",
        "                                  and directories on top of the excluded ones.",
        "                                  (Useful if you simply want to add to the",
        "                                  default)",
        "  --force-exclude TEXT            Like --exclude, but files and directories",
        "                                  matching this regex will be excluded even",
        "                                  when they are passed explicitly as",
        "                                  arguments.",
        "  --stdin-filename TEXT           The name of the file when passing it through",
        "                                  stdin. Useful to make sure Black will",
        "                                  respect --force-exclude option on some",
        "                                  editors that rely on using stdin.",
        "  -W, --workers INTEGER RANGE     Number of parallel workers  [default: 2;",
        "                                  x>=1]",
        "  -q, --quiet                     Don't emit non-error messages to stderr.",
        "                                  Errors are still emitted; silence those with",
        "                                  2>/dev/null.",
        "  -v, --verbose                   Also emit messages to stderr about files",
        "                                  that were not changed or were ignored due to",
        "                                  exclusion patterns.",
        "  --version                       Show the version and exit.",
        "  --config FILE                   Read configuration from FILE path.",
        "  -h, --help                      Show this message and exit."
    ],
    "cfn-lint": [
        "usage:",
        "Basic: cfn-lint test.yaml",
        "Ignore a rule: cfn-lint -i E3012 -- test.yaml",
        "Configure a rule: cfn-lint -x E3012:strict=false -t test.yaml",
        "Lint all yaml files in a folder: cfn-lint dir/**/*.yaml",
        "",
        "CloudFormation Linter",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "",
        "Standard:",
        "  TEMPLATE              The CloudFormation template to be linted",
        "  -t TEMPLATE [TEMPLATE ...], --template TEMPLATE [TEMPLATE ...]",
        "                        The CloudFormation template to be linted",
        "  -b, --ignore-bad-template",
        "                        Ignore failures with Bad template",
        "  --ignore-templates IGNORE_TEMPLATES [IGNORE_TEMPLATES ...]",
        "                        Ignore templates",
        "  -f {quiet,parseable,json,junit,pretty,sarif}, --format {quiet,parseable,json,junit,pretty,sarif}",
        "                        Output Format",
        "  -l, --list-rules      list all the rules",
        "  -r REGIONS [REGIONS ...], --regions REGIONS [REGIONS ...]",
        "                        list the regions to validate against.",
        "  -i IGNORE_CHECKS [IGNORE_CHECKS ...], --ignore-checks IGNORE_CHECKS [IGNORE_CHECKS ...]",
        "                        only check rules whose id do not match these values",
        "  -c INCLUDE_CHECKS [INCLUDE_CHECKS ...], --include-checks INCLUDE_CHECKS [INCLUDE_CHECKS ...]",
        "                        include rules whose id match these values",
        "  -m MANDATORY_CHECKS [MANDATORY_CHECKS ...], --mandatory-checks MANDATORY_CHECKS [MANDATORY_CHECKS ...]",
        "                        always check rules whose id match these values,",
        "                        regardless of template exclusions",
        "  -e, --include-experimental",
        "                        Include experimental rules",
        "  -x CONFIGURE_RULES [CONFIGURE_RULES ...], --configure-rule CONFIGURE_RULES [CONFIGURE_RULES ...]",
        "                        Provide configuration for a rule. Format",
        "                        RuleId:key=value. Example: E3012:strict=false",
        "  --config-file CONFIG_FILE",
        "                        Specify the cfnlintrc file to use",
        "  -z CUSTOM_RULES, --custom-rules CUSTOM_RULES",
        "                        Allows specification of a custom rule file.",
        "  -v, --version         Version of cfn-lint",
        "  --output-file OUTPUT_FILE",
        "                        Writes the output to the specified file, ideal for",
        "                        producing reports",
        "  --merge-configs       Merges lists between configuration layers",
        "",
        "Advanced / Debugging:",
        "  -D, --debug           Enable debug logging",
        "  -I, --info            Enable information logging",
        "  -a APPEND_RULES [APPEND_RULES ...], --append-rules APPEND_RULES [APPEND_RULES ...]",
        "                        specify one or more rules directories using one or",
        "                        more --append-rules arguments.",
        "  -o OVERRIDE_SPEC, --override-spec OVERRIDE_SPEC",
        "                        A CloudFormation Spec override file that allows",
        "                        customization",
        "  -g, --build-graph     Creates a file in the same directory as the template",
        "                        that models the template's resources in DOT format",
        "  -s REGISTRY_SCHEMAS [REGISTRY_SCHEMAS ...], --registry-schemas REGISTRY_SCHEMAS [REGISTRY_SCHEMAS ...]",
        "                        one or more directories of CloudFormation Registry",
        "                        Schemas",
        "  -u, --update-specs    Update the CloudFormation Specs"
    ],
    "checkmake": [
        "checkmake.",
        "",
        "  Usage:",
        "  checkmake [options] <makefile>",
        "  checkmake -h | --help",
        "  checkmake --version",
        "  checkmake --list-rules",
        "",
        "  Options:",
        "  -h --help               Show this screen.",
        "  --version               Show version.",
        "  --debug                 Enable debug mode",
        "  --config=<configPath>   Configuration file to read",
        "  --format=<format>       Output format as a Golang text/template template",
        "  --list-rules            List registered rules"
    ],
    "checkov": [
        "usage: checkov [-h] [-v] [-d DIRECTORY] [--add-check] [-f FILE]",
        "               [--skip-path SKIP_PATH]",
        "               [--external-checks-dir EXTERNAL_CHECKS_DIR]",
        "               [--external-checks-git EXTERNAL_CHECKS_GIT] [-l]",
        "               [-o {cli,cyclonedx,json,junitxml,github_failed_only,sarif,csv}]",
        "               [--output-file-path OUTPUT_FILE_PATH] [--output-bc-ids]",
        "               [--include-all-checkov-policies] [--quiet] [--compact]",
        "               [--framework {bitbucket_pipelines,circleci_pipelines,argo_workflows,arm,bicep,cloudformation,dockerfile,github_configuration,github_actions,gitlab_configuration,gitlab_ci,bitbucket_configuration,helm,json,yaml,kubernetes,kustomize,openapi,sca_package,sca_image,secrets,serverless,terraform,terraform_plan,all} [{bitbucket_pipelines,circleci_pipelines,argo_workflows,arm,bicep,cloudformation,dockerfile,github_configuration,github_actions,gitlab_configuration,gitlab_ci,bitbucket_configuration,helm,json,yaml,kubernetes,kustomize,openapi,sca_package,sca_image,secrets,serverless,terraform,terraform_plan,all} ...]]",
        "               [--skip-framework {bitbucket_pipelines,circleci_pipelines,argo_workflows,arm,bicep,cloudformation,dockerfile,github_configuration,github_actions,gitlab_configuration,gitlab_ci,bitbucket_configuration,helm,json,yaml,kubernetes,kustomize,openapi,sca_package,sca_image,secrets,serverless,terraform,terraform_plan} [{bitbucket_pipelines,circleci_pipelines,argo_workflows,arm,bicep,cloudformation,dockerfile,github_configuration,github_actions,gitlab_configuration,gitlab_ci,bitbucket_configuration,helm,json,yaml,kubernetes,kustomize,openapi,sca_package,sca_image,secrets,serverless,terraform,terraform_plan} ...]]",
        "               [-c CHECK] [--skip-check SKIP_CHECK]",
        "               [--run-all-external-checks] [-s] [--soft-fail-on SOFT_FAIL_ON]",
        "               [--hard-fail-on HARD_FAIL_ON] [--bc-api-key BC_API_KEY]",
        "               [--prisma-api-url PRISMA_API_URL] [--docker-image DOCKER_IMAGE]",
        "               [--dockerfile-path DOCKERFILE_PATH] [--repo-id REPO_ID]",
        "               [-b BRANCH] [--skip-download] [--no-guide]",
        "               [--skip-suppressions] [--skip-policy-download] [--skip-fixes]",
        "               [--download-external-modules DOWNLOAD_EXTERNAL_MODULES]",
        "               [--var-file VAR_FILE]",
        "               [--external-modules-download-path EXTERNAL_MODULES_DOWNLOAD_PATH]",
        "               [--evaluate-variables EVALUATE_VARIABLES] [-ca CA_CERTIFICATE]",
        "               [--repo-root-for-plan-enrichment REPO_ROOT_FOR_PLAN_ENRICHMENT]",
        "               [--config-file CONFIG_FILE] [--create-config CREATE_CONFIG]",
        "               [--show-config] [--create-baseline] [--baseline BASELINE]",
        "               [--output-baseline-as-skipped]",
        "               [--skip-cve-package SKIP_CVE_PACKAGE]",
        "               [--policy-metadata-filter POLICY_METADATA_FILTER]",
        "               [--secrets-scan-file-type SECRETS_SCAN_FILE_TYPE]",
        "",
        "Infrastructure as code static analysis",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -v, --version         version",
        "  -d DIRECTORY, --directory DIRECTORY",
        "                        IaC root directory (can not be used together with",
        "                        --file).",
        "  --add-check           Generate a new check via CLI prompt",
        "  -f FILE, --file FILE  File to scan (can not be used together with",
        "                        --directory). With this option, Checkov will attempt",
        "                        to filter the runners based on the file type. For",
        "                        example, if you specify a \".tf\" file, only the",
        "                        terraform and secrets frameworks will be included. You",
        "                        can further limit this (e.g., skip secrets) by using",
        "                        the --skip-framework argument.",
        "  --skip-path SKIP_PATH",
        "                        Path (file or directory) to skip, using regular",
        "                        expression logic, relative to current working",
        "                        directory. Word boundaries are not implicit; i.e.,",
        "                        specifying \"dir1\" will skip any directory or",
        "                        subdirectory named \"dir1\". Ignored with -f. Can be",
        "                        specified multiple times.",
        "  --external-checks-dir EXTERNAL_CHECKS_DIR",
        "                        Directory for custom checks to be loaded. Can be",
        "                        repeated",
        "  --external-checks-git EXTERNAL_CHECKS_GIT",
        "                        Github url of external checks to be added. you can",
        "                        specify a subdirectory after a double-slash //. cannot",
        "                        be used together with --external-checks-dir",
        "  -l, --list            List checks",
        "  -o {cli,cyclonedx,json,junitxml,github_failed_only,sarif,csv}, --output {cli,cyclonedx,json,junitxml,github_failed_only,sarif,csv}",
        "                        Report output format. Add multiple outputs by using",
        "                        the flag multiple times (-o sarif -o cli)",
        "  --output-file-path OUTPUT_FILE_PATH",
        "                        Name for output file. The first selected output via",
        "                        output flag will be saved to the file (default output",
        "                        is cli)",
        "  --output-bc-ids       Print Bridgecrew platform IDs (BC...) instead of",
        "                        Checkov IDs (CKV...), if the check exists in the",
        "                        platform",
        "  --include-all-checkov-policies",
        "                        When running with an API key, Checkov will omit any",
        "                        policies that do not exist in the Bridgecrew or Prisma",
        "                        Cloud platform, except for local custom policies",
        "                        loaded with the --external-check flags. Use this key",
        "                        to include policies that only exist in Checkov in the",
        "                        scan. Note that this will make the local CLI results",
        "                        different from the results you see in the platform.",
        "                        Has no effect if you are not using an API key. Use the",
        "                        --check option to explicitly include checks by ID even",
        "                        if they are not in the platform, without using this",
        "                        flag.",
        "  --quiet               in case of CLI output, display only failed checks.",
        "                        Also disables progress bars",
        "  --compact             in case of CLI output, do not display code blocks",
        "  --framework {bitbucket_pipelines,circleci_pipelines,argo_workflows,arm,bicep,cloudformation,dockerfile,github_configuration,github_actions,gitlab_configuration,gitlab_ci,bitbucket_configuration,helm,json,yaml,kubernetes,kustomize,openapi,sca_package,sca_image,secrets,serverless,terraform,terraform_plan,all} [{bitbucket_pipelines,circleci_pipelines,argo_workflows,arm,bicep,cloudformation,dockerfile,github_configuration,github_actions,gitlab_configuration,gitlab_ci,bitbucket_configuration,helm,json,yaml,kubernetes,kustomize,openapi,sca_package,sca_image,secrets,serverless,terraform,terraform_plan,all} ...]",
        "                        Filter scan to run only on specific infrastructure",
        "                        code frameworks [env var: CKV_FRAMEWORK]",
        "  --skip-framework {bitbucket_pipelines,circleci_pipelines,argo_workflows,arm,bicep,cloudformation,dockerfile,github_configuration,github_actions,gitlab_configuration,gitlab_ci,bitbucket_configuration,helm,json,yaml,kubernetes,kustomize,openapi,sca_package,sca_image,secrets,serverless,terraform,terraform_plan} [{bitbucket_pipelines,circleci_pipelines,argo_workflows,arm,bicep,cloudformation,dockerfile,github_configuration,github_actions,gitlab_configuration,gitlab_ci,bitbucket_configuration,helm,json,yaml,kubernetes,kustomize,openapi,sca_package,sca_image,secrets,serverless,terraform,terraform_plan} ...]",
        "                        Filter scan to skip specific infrastructure code",
        "                        frameworks. will be included automatically for some",
        "                        frameworks if system dependencies are missing.",
        "  -c CHECK, --check CHECK",
        "                        Checks to run; any other checks will be skipped. Enter",
        "                        one or more items separated by commas. Each item may",
        "                        be either a Checkov check ID (CKV_AWS_123), a BC check",
        "                        ID (BC_AWS_GENERAL_123), or a severity (LOW, MEDIUM,",
        "                        HIGH, CRITICAL). If you use a severity, then all",
        "                        checks equal to or above the lowest severity in the",
        "                        list will be included. This option can be combined",
        "                        with --skip-check. If it is, priority is given to",
        "                        checks explicitly listed by ID or wildcard over checks",
        "                        listed by severity. For example, if you use --check",
        "                        CKV_123 and --skip-check LOW, then CKV_123 will run",
        "                        even if it is a LOW severity. In the case of a tie",
        "                        (e.g., --check MEDIUM and --skip-check HIGH for a",
        "                        medium severity check), then the check will be",
        "                        skipped. If you use a check ID here along with an API",
        "                        key, and the check is not part of the BC / PC",
        "                        platform, then the check will still be run (see",
        "                        --include-all-checkov-policies for more info). [env",
        "                        var: CKV_CHECK]",
        "  --skip-check SKIP_CHECK",
        "                        Checks to skip; any other checks will not be run.",
        "                        Enter one or more items separated by commas. Each item",
        "                        may be either a Checkov check ID (CKV_AWS_123), a BC",
        "                        check ID (BC_AWS_GENERAL_123), or a severity (LOW,",
        "                        MEDIUM, HIGH, CRITICAL). If you use a severity, then",
        "                        all checks equal to or below the highest severity in",
        "                        the list will be skipped. This option can be combined",
        "                        with --check. If it is, priority is given to checks",
        "                        explicitly listed by ID or wildcard over checks listed",
        "                        by severity. For example, if you use --skip-check",
        "                        CKV_123 and --check HIGH, then CKV_123 will be skipped",
        "                        even if it is a HIGH severity. In the case of a tie",
        "                        (e.g., --check MEDIUM and --skip-check HIGH for a",
        "                        medium severity check), then the check will be",
        "                        skipped. [env var: CKV_SKIP_CHECK]",
        "  --run-all-external-checks",
        "                        Run all external checks (loaded via --external-checks",
        "                        options) even if the checks are not present in the",
        "                        --check list. This allows you to always ensure that",
        "                        new checks present in the external source are used. If",
        "                        an external check is included in --skip-check, it will",
        "                        still be skipped.",
        "  -s, --soft-fail       Runs checks but always returns a 0 exit code. Using",
        "                        either --soft-fail-on and / or --hard-fail-on",
        "                        overrides this option, except for the case when a",
        "                        result does not match either of the soft fail or hard",
        "                        fail criteria, in which case this flag determines the",
        "                        result.",
        "  --soft-fail-on SOFT_FAIL_ON",
        "                        Exits with a 0 exit code if only the specified items",
        "                        fail. Enter one or more items separated by commas.",
        "                        Each item may be either a Checkov check ID",
        "                        (CKV_AWS_123), a BC check ID (BC_AWS_GENERAL_123), or",
        "                        a severity (LOW, MEDIUM, HIGH, CRITICAL). If you use a",
        "                        severity, then any severity equal to or less than the",
        "                        highest severity in the list will result in a soft",
        "                        fail. This option may be used with --hard-fail-on,",
        "                        using the same priority logic described in --check and",
        "                        --skip-check options above, with --hard-fail-on taking",
        "                        precedence in a tie. If a given result does not meet",
        "                        the --soft-fail-on nor the --hard-fail-on criteria,",
        "                        then the default is to hard fail",
        "  --hard-fail-on HARD_FAIL_ON",
        "                        Exits with a non-zero exit code for specified checks.",
        "                        Enter one or more items separated by commas. Each item",
        "                        may be either a Checkov check ID (CKV_AWS_123), a BC",
        "                        check ID (BC_AWS_GENERAL_123), or a severity (LOW,",
        "                        MEDIUM, HIGH, CRITICAL). If you use a severity, then",
        "                        any severity equal to or greater than the lowest",
        "                        severity in the list will result in a hard fail. This",
        "                        option can be used with --soft-fail-on, using the same",
        "                        priority logic described in --check and --skip-check",
        "                        options above, with --hard-fail-on taking precedence",
        "                        in a tie.",
        "  --bc-api-key BC_API_KEY",
        "                        Bridgecrew API key or Prisma Cloud Access Key (see",
        "                        --prisma-api-url) [env var: BC_API_KEY]",
        "  --prisma-api-url PRISMA_API_URL",
        "                        The Prisma Cloud API URL (see:",
        "                        https://prisma.pan.dev/api/cloud/api-urls). Requires",
        "                        --bc-api-key to be a Prisma Cloud Access Key in the",
        "                        following format: <access_key_id>::<secret_key> [env",
        "                        var: PRISMA_API_URL]",
        "  --docker-image DOCKER_IMAGE",
        "                        Scan docker images by name or ID. Only works with",
        "                        --bc-api-key flag",
        "  --dockerfile-path DOCKERFILE_PATH",
        "                        Path to the Dockerfile of the scanned docker image",
        "  --repo-id REPO_ID     Identity string of the repository, with form",
        "                        <repo_owner>/<repo_name>",
        "  -b BRANCH, --branch BRANCH",
        "                        Selected branch of the persisted repository. Only has",
        "                        effect when using the --bc-api-key flag",
        "  --skip-download       Do not download any data from Bridgecrew. This will",
        "                        omit doc links, severities, etc., as well as custom",
        "                        policies and suppressions if using an API token. Note:",
        "                        it will prevent BC platform IDs from being available",
        "                        in Checkov.",
        "  --no-guide            Deprecated - use --skip-download",
        "  --skip-suppressions   Deprecated - use --skip-download",
        "  --skip-policy-download",
        "                        Deprecated - use --skip-download",
        "  --skip-fixes          Do not download fixed resource templates from",
        "                        Bridgecrew. Only has effect when using the API key.",
        "  --download-external-modules DOWNLOAD_EXTERNAL_MODULES",
        "                        download external terraform modules from public git",
        "                        repositories and terraform registry [env var:",
        "                        DOWNLOAD_EXTERNAL_MODULES]",
        "  --var-file VAR_FILE   Variable files to load in addition to the default",
        "                        files (see https://www.terraform.io/docs/language/valu",
        "                        es/variables.html#variable-definitions-tfvars-",
        "                        files).Currently only supported for source Terraform",
        "                        (.tf file), and Helm chart scans.Requires using",
        "                        --directory, not --file.",
        "  --external-modules-download-path EXTERNAL_MODULES_DOWNLOAD_PATH",
        "                        set the path for the download external terraform",
        "                        modules [env var: EXTERNAL_MODULES_DIR]",
        "  --evaluate-variables EVALUATE_VARIABLES",
        "                        evaluate the values of variables and locals [env var:",
        "                        CKV_EVAL_VARS]",
        "  -ca CA_CERTIFICATE, --ca-certificate CA_CERTIFICATE",
        "                        Custom CA certificate (bundle) file [env var:",
        "                        BC_CA_BUNDLE]",
        "  --repo-root-for-plan-enrichment REPO_ROOT_FOR_PLAN_ENRICHMENT",
        "                        Directory containing the hcl code used to generate a",
        "                        given plan file. Use with -f.",
        "  --config-file CONFIG_FILE",
        "                        path to the Checkov configuration YAML file",
        "  --create-config CREATE_CONFIG",
        "                        takes the current command line args and writes them",
        "                        out to a config file at the given path",
        "  --show-config         prints all args and config settings and where they",
        "                        came from (eg. commandline, config file, environment",
        "                        variable or default)",
        "  --create-baseline     Alongside outputting the findings, save all results to",
        "                        .checkov.baseline file so future runs will not re-flag",
        "                        the same noise. Works only with `--directory` flag",
        "  --baseline BASELINE   Use a .checkov.baseline file to compare current",
        "                        results with a known baseline. Report will include",
        "                        only failed checks that are new with respect to the",
        "                        provided baseline",
        "  --output-baseline-as-skipped",
        "                        output checks that are skipped due to baseline file",
        "                        presence",
        "  --skip-cve-package SKIP_CVE_PACKAGE",
        "                        filter scan to run on all packages but a specific",
        "                        package identifier (denylist), You can specify this",
        "                        argument multiple times to skip multiple packages",
        "  --policy-metadata-filter POLICY_METADATA_FILTER",
        "                        comma separated key:value string to filter policies",
        "                        based on Prisma Cloud policy metadata. See https://pri",
        "                        sma.pan.dev/api/cloud/cspm/policy#operation/get-",
        "                        policy-filters-and-options for information on allowed",
        "                        filters. Format: policy.label=test,cloud.type=aws",
        "  --secrets-scan-file-type SECRETS_SCAN_FILE_TYPE",
        "                        add scan secret for requested files. You can specify",
        "                        this argument multiple times to add multiple file",
        "                        types. To scan all types (\".tf\", \".yml\", \".yaml\",",
        "                        \".json\", \".template\", \".py\", \".js\", \".properties\",",
        "                        \".pem\", \".php\", \".xml\", \".ts\", \".env\", \"Dockerfile\",",
        "                        \".java\", \".rb\", \".go\", \".cs\", \".txt\") specify the",
        "                        argument with `--secrets-scan-file-type all`. default",
        "                        scan will be for \".tf\", \".yml\", \".yaml\", \".json\",",
        "                        \".template\" and exclude \"Pipfile.lock\", \"yarn.lock\",",
        "                        \"package-lock.json\", \"requirements.txt\" [env var:",
        "                        CKV_SECRETS_SCAN_FILE_TYPE]",
        "",
        "Args that start with '--' (eg. -v) can also be set in a config file",
        "(/.checkov.yaml or /.checkov.yml or /root/.checkov.yaml or /root/.checkov.yml",
        "or specified via --config-file). The config file uses YAML syntax and must",
        "represent a YAML 'mapping' (for details, see",
        "http://learn.getgrav.org/advanced/yaml). If an arg is specified in more than",
        "one place, then commandline values override environment variables which",
        "override config file values which override defaults."
    ],
    "checkstyle": [
        "Usage: java [options] <mainclass> [args...]",
        "           (to execute a class)",
        "   or  java [options] -jar <jarfile> [args...]",
        "           (to execute a jar file)",
        "   or  java [options] -m <module>[/<mainclass>] [args...]",
        "       java [options] --module <module>[/<mainclass>] [args...]",
        "           (to execute the main class in a module)",
        "   or  java [options] <sourcefile> [args]",
        "           (to execute a single source-file program)",
        "",
        " Arguments following the main class, source file, -jar <jarfile>,",
        " -m or --module <module>/<mainclass> are passed as the arguments to",
        " main class.",
        "",
        " where options include:",
        "",
        "    -cp <class search path of directories and zip/jar files>",
        "    -classpath <class search path of directories and zip/jar files>",
        "    --class-path <class search path of directories and zip/jar files>",
        "                  A : separated list of directories, JAR archives,",
        "                  and ZIP archives to search for class files.",
        "    -p <module path>",
        "    --module-path <module path>...",
        "                  A : separated list of directories, each directory",
        "                  is a directory of modules.",
        "    --upgrade-module-path <module path>...",
        "                  A : separated list of directories, each directory",
        "                  is a directory of modules that replace upgradeable",
        "                  modules in the runtime image",
        "    --add-modules <module name>[,<module name>...]",
        "                  root modules to resolve in addition to the initial module.",
        "                  <module name> can also be ALL-DEFAULT, ALL-SYSTEM,",
        "                  ALL-MODULE-PATH.",
        "    --list-modules",
        "                  list observable modules and exit",
        "    -d <module name>",
        "    --describe-module <module name>",
        "                  describe a module and exit",
        "    --dry-run     create VM and load main class but do not execute main method.",
        "                  The --dry-run option may be useful for validating the",
        "                  command-line options such as the module system configuration.",
        "    --validate-modules",
        "                  validate all modules and exit",
        "                  The --validate-modules option may be useful for finding",
        "                  conflicts and other errors with modules on the module path.",
        "    -D<name>=<value>",
        "                  set a system property",
        "    -verbose:[class|module|gc|jni]",
        "                  enable verbose output",
        "    -version      print product version to the error stream and exit",
        "    --version     print product version to the output stream and exit",
        "    -showversion  print product version to the error stream and continue",
        "    --show-version",
        "                  print product version to the output stream and continue",
        "    --show-module-resolution",
        "                  show module resolution output during startup",
        "    -? -h -help",
        "                  print this help message to the error stream",
        "    --help        print this help message to the output stream",
        "    -X            print help on extra options to the error stream",
        "    --help-extra  print help on extra options to the output stream",
        "    -ea[:<packagename>...|:<classname>]",
        "    -enableassertions[:<packagename>...|:<classname>]",
        "                  enable assertions with specified granularity",
        "    -da[:<packagename>...|:<classname>]",
        "    -disableassertions[:<packagename>...|:<classname>]",
        "                  disable assertions with specified granularity",
        "    -esa | -enablesystemassertions",
        "                  enable system assertions",
        "    -dsa | -disablesystemassertions",
        "                  disable system assertions",
        "    -agentlib:<libname>[=<options>]",
        "                  load native agent library <libname>, e.g. -agentlib:jdwp",
        "                  see also -agentlib:jdwp=help",
        "    -agentpath:<pathname>[=<options>]",
        "                  load native agent library by full pathname",
        "    -javaagent:<jarpath>[=<options>]",
        "                  load Java programming language agent, see java.lang.instrument",
        "    -splash:<imagepath>",
        "                  show splash screen with specified image",
        "                  HiDPI scaled images are automatically supported and used",
        "                  if available. The unscaled image filename, e.g. image.ext,",
        "                  should always be passed as the argument to the -splash option.",
        "                  The most appropriate scaled image provided will be picked up",
        "                  automatically.",
        "                  See the SplashScreen API documentation for more information",
        "    @argument files",
        "                  one or more argument files containing options",
        "    -disable-@files",
        "                  prevent further argument file expansion",
        "    --enable-preview",
        "                  allow classes to depend on preview features of this release",
        "To specify an argument for a long option, you can use --<name>=<value> or",
        "--<name> <value>.",
        ""
    ],
    "chktex": [
        "ChkTeX v1.7.6 - Copyright 1995-96 Jens T. Berger Thielemann.",
        "Compiled with POSIX extended regex support.",
        "ChkTeX comes with ABSOLUTELY NO WARRANTY; details on this and",
        "distribution conditions in the GNU General Public License file.",
        "Type \"ChkTeX -h\" for help, \"ChkTeX -i\" for distribution info.",
        "Author: Jens Berger.",
        "Bug reports: https://savannah.nongnu.org/bugs/?group=chktex",
        "             or darthandrus@gmail.com",
        "Press Ctrl-D to terminate stdin input.",
        "",
        "",
        "                         Usage of ChkTeX v1.7.6",
        "                         ~~~~~~~~~~~~~~~~~~~~~~",
        "",
        "                               Template",
        "                               ~~~~~~~~",
        "chktex [-hiqrW] [-v[0-...]] [-l <rcfile>] [-[wemn] <[1-42]|all>]",
        "       [-d[0-...]] [-p <name>] [-o <outfile>] [-[btxgI][0|1]]",
        "       file1 file2 ...",
        "",
        "----------------------------------------------------------------------",
        "                       Description of options:",
        "                       ~~~~~~~~~~~~~~~~~~~~~~~",
        "Misc. options",
        "~~~~~~~~~~~~~",
        "    -h  --help      : This text.",
        "    -i  --license   : Show distribution information",
        "    -l  --localrc   : Read local .chktexrc formatted file.",
        "    -d  --debug     : Debug information. Give it a number.",
        "    -r  --reset     : Reset settings to default.",
        "",
        "Muting warning messages:",
        "~~~~~~~~~~~~~~~~~~~~~~~~",
        "    -w  --warnon    : Makes msg # given a warning and turns it on.",
        "    -e  --erroron   : Makes msg # given an error and turns it on.",
        "    -m  --msgon     : Makes msg # given a message and turns it on.",
        "    -n  --nowarn    : Mutes msg # given.",
        "    -L  --nolinesupp: Disables per-line suppressions.",
        "",
        "Output control flags:",
        "~~~~~~~~~~~~~~~~~~~~~",
        "    -v  --verbosity : How errors are displayed.",
        "                      Default 1, 0=Less, 2=Fancy, 3=lacheck.",
        "    -V  --pipeverb  : How errors are displayed when stdout != tty.",
        "                      Defaults to the same as -v.",
        "    -s  --splitchar : String used to split fields when doing -v0",
        "    -o  --output    : Redirect error report to a file.",
        "    -q  --quiet     : Shuts up about version information.",
        "    -p  --pseudoname: Input file-name when reporting.",
        "    -f  --format    : Format to use for output",
        "",
        "Boolean switches (1 -> enables / 0 -> disables):",
        "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "    -b  --backup    : Backup output file.",
        "    -x  --wipeverb  : Ignore contents of `\\verb' commands.",
        "    -g  --globalrc  : Read global .chktexrc file.",
        "    -I  --inputfiles: Execute \\input statements.",
        "    -H  --headererr : Show errors found in front of \\begin{document}",
        "",
        "Miscellaneous switches:",
        "~~~~~~~~~~~~~~~~~~~~~~~",
        "    -W  --version   : Version information",
        "",
        "----------------------------------------------------------------------",
        "If no LaTeX files are specified on the command line, we will read from",
        "stdin.   For explanation of warning/error messages, please consult the",
        "main documentation ChkTeX.dvi, ChkTeX.ps or ChkTeX.pdf:",
        "  http://www.nongnu.org/chktex/ChkTeX.pdf",
        "",
        "Any of the above arguments can be made permanent by setting them in the",
        "chktexrc file (~/.chktexrc)."
    ],
    "clippy": [
        "Rust's package manager",
        "",
        "USAGE:",
        "    cargo [+toolchain] [OPTIONS] [SUBCOMMAND]",
        "",
        "OPTIONS:",
        "    -V, --version               Print version info and exit",
        "        --list                  List installed commands",
        "        --explain <CODE>        Run `rustc --explain CODE`",
        "    -v, --verbose               Use verbose output (-vv very verbose/build.rs output)",
        "    -q, --quiet                 Do not print cargo log messages",
        "        --color <WHEN>          Coloring: auto, always, never",
        "        --frozen                Require Cargo.lock and cache are up to date",
        "        --locked                Require Cargo.lock is up to date",
        "        --offline               Run without accessing the network",
        "        --config <KEY=VALUE>    Override a configuration value (unstable)",
        "    -Z <FLAG>                   Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for",
        "                                details",
        "    -h, --help                  Print help information",
        "",
        "Some common cargo commands are (see all commands with --list):",
        "    build, b    Compile the current package",
        "    check, c    Analyze the current package and report errors, but don't build object files",
        "    clean       Remove the target directory",
        "    doc, d      Build this package's and its dependencies' documentation",
        "    new         Create a new cargo package",
        "    init        Create a new cargo package in an existing directory",
        "    add         Add dependencies to a manifest file",
        "    run, r      Run a binary or example of the local package",
        "    test, t     Run the tests",
        "    bench       Run the benchmarks",
        "    update      Update dependencies listed in Cargo.lock",
        "    search      Search registry for crates",
        "    publish     Package and upload this package to the registry",
        "    install     Install a Rust binary. Default location is $HOME/.cargo/bin",
        "    uninstall   Uninstall a Rust binary",
        "",
        "See 'cargo help <command>' for more information on a specific command.",
        ""
    ],
    "clj-kondo": [
        "clj-kondo v2022.08.03",
        "",
        "",
        "Options:",
        "",
        "  --lint <file>: a file can either be a normal file, directory or classpath. In the",
        "    case of a directory or classpath, only .clj, .cljs and .cljc will be",
        "    processed. Use - as filename for reading from stdin.",
        "",
        "  --lang <lang>: if lang cannot be derived from the file extension this option will be",
        "    used. Supported values: clj, cljs, cljc.",
        "",
        "  --filename <file>: in case stdin is used for linting, use this to set the",
        "    reported filename.",
        "",
        "  --cache-dir: when this option is provided, the cache will be resolved to this",
        "    directory. If --cache is false, this option will be ignored.",
        "",
        "  --cache: if false, won't use cache. Otherwise, will try to resolve cache",
        "  using `--cache-dir`. If `--cache-dir` is not set, cache is resolved using the",
        "  nearest `.clj-kondo` directory in the current and parent directories.",
        "",
        "  --config <config>: config may be a file or an EDN expression. See",
        "    https://cljdoc.org/d/clj-kondo/clj-kondo/2022.08.03/doc/configuration",
        "",
        "  --config-dir <config-dir>: use this config directory instead of auto-detected",
        "    .clj-kondo dir.",
        "",
        "  --parallel: lint sources in parallel.",
        "",
        "  --dependencies: don't report any findings. Useful for populating cache while linting dependencies.",
        "",
        "  --copy-configs: copy configs from dependencies while linting.",
        "",
        "  --skip-lint: skip lint/analysis, still check for other tasks like copy-configs.",
        "",
        "  --fail-level <level>: minimum severity for exit with error code.  Supported values:",
        "    warning, error.  The default level if unspecified is warning.",
        "",
        "  --debug: print debug information.",
        ""
    ],
    "coffeelint": [
        "Usage: coffeelint [options] source [...]",
        "",
        "Options:",
        "  -f, --file          Specify a custom configuration file.",
        "      --rules         Specify a custom rule or directory of rules.",
        "      --makeconfig    Prints a default config file                     [boolean]",
        "      --trimconfig    Compares your config with the default and prints a minimal",
        "                      configuration                                    [boolean]",
        "      --noconfig      Ignores any config file.                         [boolean]",
        "  -h, --help          Show help                                        [boolean]",
        "  -v, --version       Show version number                              [boolean]",
        "  -r                  (not used, but left for backward compatibility)  [boolean]",
        "      --reporter      built in reporter (default, csv, jslint, checkstyle, raw),",
        "                      or module, or path to reporter file.",
        "      --csv           [deprecated] use --reporter csv                  [boolean]",
        "      --jslint        [deprecated] use --reporter jslint               [boolean]",
        "      --nocolor       [deprecated] use --color=never                   [boolean]",
        "      --checkstyle    [deprecated] use --reporter checkstyle           [boolean]",
        "      --color=<when>  When to colorize the output. <when> can be one of always,",
        "                      never , or auto.",
        "  -s, --stdin         Lint the source from stdin                       [boolean]",
        "  -q, --quiet         Only print errors.                               [boolean]",
        "      --literate      Used with --stdin to process as Literate CoffeeScript",
        "                                                                       [boolean]",
        "  -c, --cache         Cache linting results                            [boolean]",
        "      --ext           Specify an additional file extension, separated by comma."
    ],
    "cpplint": [
        "",
        "Syntax: cpplint.py [--verbose=#] [--output=emacs|eclipse|vs7|junit|sed|gsed]",
        "                   [--filter=-x,+y,...]",
        "                   [--counting=total|toplevel|detailed] [--root=subdir]",
        "                   [--repository=path]",
        "                   [--linelength=digits] [--headers=x,y,...]",
        "                   [--recursive]",
        "                   [--exclude=path]",
        "                   [--extensions=hpp,cpp,...]",
        "                   [--includeorder=default|standardcfirst]",
        "                   [--quiet]",
        "                   [--version]",
        "        <file> [file] ...",
        "",
        "  Style checker for C/C++ source files.",
        "  This is a fork of the Google style checker with minor extensions.",
        "",
        "  The style guidelines this tries to follow are those in",
        "    https://google.github.io/styleguide/cppguide.html",
        "",
        "  Every problem is given a confidence score from 1-5, with 5 meaning we are",
        "  certain of the problem, and 1 meaning it could be a legitimate construct.",
        "  This will miss some errors, and is not a substitute for a code review.",
        "",
        "  To suppress false-positive errors of a certain category, add a",
        "  'NOLINT(category)' comment to the line.  NOLINT or NOLINT(*)",
        "  suppresses errors of all categories on that line.",
        "",
        "  The files passed in will be linted; at least one file must be provided.",
        "  Default linted extensions are ['c', 'c++', 'cc', 'cpp', 'cu', 'cuh', 'cxx', 'h', 'h++', 'hh', 'hpp', 'hxx'].",
        "  Other file types will be ignored.",
        "  Change the extensions with the --extensions flag.",
        "",
        "  Flags:",
        "",
        "    output=emacs|eclipse|vs7|junit|sed|gsed",
        "      By default, the output is formatted to ease emacs parsing.  Visual Studio",
        "      compatible output (vs7) may also be used.  Further support exists for",
        "      eclipse (eclipse), and JUnit (junit). XML parsers such as those used",
        "      in Jenkins and Bamboo may also be used.",
        "      The sed format outputs sed commands that should fix some of the errors.",
        "      Note that this requires gnu sed. If that is installed as gsed on your",
        "      system (common e.g. on macOS with homebrew) you can use the gsed output",
        "      format. Sed commands are written to stdout, not stderr, so you should be",
        "      able to pipe output straight to a shell to run the fixes.",
        "",
        "    verbose=#",
        "      Specify a number 0-5 to restrict errors to certain verbosity levels.",
        "      Errors with lower verbosity levels have lower confidence and are more",
        "      likely to be false positives.",
        "",
        "    quiet",
        "      Don't print anything if no errors are found.",
        "",
        "    filter=-x,+y,...",
        "      Specify a comma-separated list of category-filters to apply: only",
        "      error messages whose category names pass the filters will be printed.",
        "      (Category names are printed with the message and look like",
        "      \"[whitespace/indent]\".)  Filters are evaluated left to right.",
        "      \"-FOO\" means \"do not print categories that start with FOO\".",
        "      \"+FOO\" means \"do print categories that start with FOO\".",
        "",
        "      Examples: --filter=-whitespace,+whitespace/braces",
        "                --filter=-whitespace,-runtime/printf,+runtime/printf_format",
        "                --filter=-,+build/include_what_you_use",
        "",
        "      To see a list of all the categories used in cpplint, pass no arg:",
        "         --filter=",
        "",
        "    counting=total|toplevel|detailed",
        "      The total number of errors found is always printed. If",
        "      'toplevel' is provided, then the count of errors in each of",
        "      the top-level categories like 'build' and 'whitespace' will",
        "      also be printed. If 'detailed' is provided, then a count",
        "      is provided for each category like 'build/class'.",
        "",
        "    repository=path",
        "      The top level directory of the repository, used to derive the header",
        "      guard CPP variable. By default, this is determined by searching for a",
        "      path that contains .git, .hg, or .svn. When this flag is specified, the",
        "      given path is used instead. This option allows the header guard CPP",
        "      variable to remain consistent even if members of a team have different",
        "      repository root directories (such as when checking out a subdirectory",
        "      with SVN). In addition, users of non-mainstream version control systems",
        "      can use this flag to ensure readable header guard CPP variables.",
        "",
        "      Examples:",
        "        Assuming that Alice checks out ProjectName and Bob checks out",
        "        ProjectName/trunk and trunk contains src/chrome/ui/browser.h, then",
        "        with no --repository flag, the header guard CPP variable will be:",
        "",
        "        Alice => TRUNK_SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "        Bob   => SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "",
        "        If Alice uses the --repository=trunk flag and Bob omits the flag or",
        "        uses --repository=. then the header guard CPP variable will be:",
        "",
        "        Alice => SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "        Bob   => SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "",
        "    root=subdir",
        "      The root directory used for deriving header guard CPP variable.",
        "      This directory is relative to the top level directory of the repository",
        "      which by default is determined by searching for a directory that contains",
        "      .git, .hg, or .svn but can also be controlled with the --repository flag.",
        "      If the specified directory does not exist, this flag is ignored.",
        "",
        "      Examples:",
        "        Assuming that src is the top level directory of the repository (and",
        "        cwd=top/src), the header guard CPP variables for",
        "        src/chrome/browser/ui/browser.h are:",
        "",
        "        No flag => CHROME_BROWSER_UI_BROWSER_H_",
        "        --root=chrome => BROWSER_UI_BROWSER_H_",
        "        --root=chrome/browser => UI_BROWSER_H_",
        "        --root=.. => SRC_CHROME_BROWSER_UI_BROWSER_H_",
        "",
        "    linelength=digits",
        "      This is the allowed line length for the project. The default value is",
        "      80 characters.",
        "",
        "      Examples:",
        "        --linelength=120",
        "",
        "    recursive",
        "      Search for files to lint recursively. Each directory given in the list",
        "      of files to be linted is replaced by all files that descend from that",
        "      directory. Files with extensions not in the valid extensions list are",
        "      excluded.",
        "",
        "    exclude=path",
        "      Exclude the given path from the list of files to be linted. Relative",
        "      paths are evaluated relative to the current directory and shell globbing",
        "      is performed. This flag can be provided multiple times to exclude",
        "      multiple files.",
        "",
        "      Examples:",
        "        --exclude=one.cc",
        "        --exclude=src/*.cc",
        "        --exclude=src/*.cc --exclude=test/*.cc",
        "",
        "    extensions=extension,extension,...",
        "      The allowed file extensions that cpplint will check",
        "",
        "      Examples:",
        "        --extensions=c,c++,cc,cpp,cu,cuh,cxx,h,h++,hh,hpp,hxx",
        "",
        "    includeorder=default|standardcfirst",
        "      For the build/include_order rule, the default is to blindly assume angle",
        "      bracket includes with file extension are c-system-headers (default),",
        "      even knowing this will have false classifications.",
        "      The default is established at google.",
        "      standardcfirst means to instead use an allow-list of known c headers and",
        "      treat all others as separate group of \"other system headers\". The C headers",
        "      included are those of the C-standard lib and closely related ones.",
        "",
        "    headers=x,y,...",
        "      The header extensions that cpplint will treat as .h in checks. Values are",
        "      automatically added to --extensions list.",
        "     (by default, only files with extensions ['cuh', 'h', 'h++', 'hh', 'hpp', 'hxx'] will be assumed to be headers)",
        "",
        "      Examples:",
        "        --headers=cuh,h,h++,hh,hpp,hxx",
        "        --headers=hpp,hxx",
        "        --headers=hpp",
        "",
        "    cpplint.py supports per-directory configurations specified in CPPLINT.cfg",
        "    files. CPPLINT.cfg file can contain a number of key=value pairs.",
        "    Currently the following options are supported:",
        "",
        "      set noparent",
        "      filter=+filter1,-filter2,...",
        "      exclude_files=regex",
        "      linelength=80",
        "      root=subdir",
        "      headers=x,y,...",
        "",
        "    \"set noparent\" option prevents cpplint from traversing directory tree",
        "    upwards looking for more .cfg files in parent directories. This option",
        "    is usually placed in the top-level project directory.",
        "",
        "    The \"filter\" option is similar in function to --filter flag. It specifies",
        "    message filters in addition to the |_DEFAULT_FILTERS| and those specified",
        "    through --filter command-line flag.",
        "",
        "    \"exclude_files\" allows to specify a regular expression to be matched against",
        "    a file name. If the expression matches, the file is skipped and not run",
        "    through the linter.",
        "",
        "    \"linelength\" allows to specify the allowed line length for the project.",
        "",
        "    The \"root\" option is similar in function to the --root flag (see example",
        "    above). Paths are relative to the directory of the CPPLINT.cfg.",
        "",
        "    The \"headers\" option is similar in function to the --headers flag",
        "    (see example above).",
        "",
        "    CPPLINT.cfg has an effect on files in the same directory and all",
        "    sub-directories, unless overridden by a nested configuration file.",
        "",
        "      Example file:",
        "        filter=-build/include_order,+build/include_alpha",
        "        exclude_files=.*\\.cc",
        "",
        "    The above example disables build/include_order warning and enables",
        "    build/include_alpha as well as excludes all .cc from being",
        "    processed by linter, in the current directory (where the .cfg",
        "    file is located) and all sub-directories."
    ],
    "cspell": [
        "Usage: cspell [options] [command]",
        "",
        "Spelling Checker for Code",
        "",
        "Options:",
        "  -V, --version                         output the version number",
        "  -h, --help                            display help for command",
        "",
        "Commands:",
        "  lint [options] [globs...]             Check spelling",
        "  trace [options] [words...]            Trace words -- Search for words in the",
        "                                        configuration and dictionaries.",
        "  check [options] <files...>            Spell check file(s) and display the",
        "                                        result. The full file is displayed in",
        "                                        color.",
        "  link                                  Link dictionaries and other settings to",
        "                                        the cspell global config.",
        "  suggestions|sug [options] [words...]  Spelling Suggestions for words.",
        "  help [command]                        display help for command"
    ],
    "dartanalyzer": [
        "Usage: dartanalyzer [options...] <directory or list of files>",
        "",
        "    --dart-sdk                    The path to the Dart SDK.",
        "    --options                     Path to an analysis options file.",
        "    --package-root                The path to a package root directory (deprecated). This option cannot be used with --packages.",
        "    --[no-]declaration-casts      Disable declaration casts in strong mode (https://goo.gl/cTLz40)",
        "                                  This option is now ignored and will be removed in a future release.",
        "    --[no-]implicit-casts         Disable implicit casts in strong mode (https://goo.gl/cTLz40).",
        "    --no-implicit-dynamic         Disable implicit dynamic (https://goo.gl/m0UgXD).",
        "    --packages                    The path to the package resolution configuration file, which supplies a mapping of package names",
        "                                  to paths. This option cannot be used with --package-root.",
        "    --[no-]lints                  Show lint results.",
        "    --format                      Specifies the format in which errors are displayed; the only currently allowed value is 'machine'.",
        "    --version                     Print the analyzer version.",
        "    --enable-experiment           Enable one or more experimental features. If multiple features are being added, they should be comma separated.",
        "    --no-hints                    Do not show hint results.",
        "    --fatal-infos                 Treat infos as fatal.",
        "    --fatal-warnings              Treat non-type warnings as fatal.",
        "-h, --help                        Display this help message. Add --verbose to show hidden options.",
        "-v, --verbose                     Verbose output.",
        "    --default-language-version    The default language version when it is not specified via other ways (internal, tests only).",
        "",
        "Run \"dartanalyzer -h -v\" for verbose help output, including less commonly used options.",
        "For more information, see https://www.dartlang.org/tools/analyzer.",
        ""
    ],
    "devskim": [
        "Microsoft DevSkim Command Line Interface 0.6.9+456d78fa02",
        "",
        "Usage: devskim [options] [command]",
        "",
        "Options:",
        "  -?|-h|--help  Show help information",
        "  -v|--version  Show version information",
        "",
        "Commands:",
        "  analyze    Analyze source code",
        "  catalogue  Create csv file catalogue of rules",
        "  pack       Pack rules into a single file",
        "  test       Run tests for rules",
        "  verify     Verify integrity and syntax of rules",
        "",
        "Use \"devskim [command] --help\" for more information about a command.",
        ""
    ],
    "djlint": [
        "Usage: djlint [OPTIONS] SRC ...",
        "",
        "  djLint \u00b7 HTML template linter and formatter.",
        "",
        "Options:",
        "  --version                 Show the version and exit.",
        "  -e, --extension TEXT      File extension to check [default: html]",
        "  -i, --ignore TEXT         Codes to ignore. ex: \"H014,H017\"",
        "  --reformat                Reformat the file(s).",
        "  --check                   Check formatting on the file(s).",
        "  --indent INTEGER          Indent spacing. [default: 4]",
        "  --quiet                   Do not print diff when reformatting.",
        "  --profile TEXT            Enable defaults by template language. ops: django,",
        "                            jinja, nunjucks, handlebars, golang, angular, html",
        "                            [default: html]",
        "  --require-pragma          Only format or lint files that starts with a",
        "                            comment with the text 'djlint:on'",
        "  --lint                    Lint for common issues. [default option]",
        "  --use-gitignore           Use .gitignore file to extend excludes.",
        "  --warn                    Return errors as warnings.",
        "  --preserve-leading-space  Attempt to preserve leading space on text.",
        "  --preserve-blank-lines    Attempt to preserve blank lines.",
        "  --format-css              Also format contents of <style> tags.",
        "  --format-js               Also format contents of <script> tags.",
        "  -h, --help                Show this message and exit."
    ],
    "dockerfilelint": [
        "Usage: dockerfilelint [files | content..] [options]",
        "",
        "Options:",
        "  -o, --output   Specify the format to use for output of linting results. Valid values",
        "                 are `json` or `cli` (default).                               [string]",
        "  -j, --json     Output linting results as JSON, equivalent to `-o json`.    [boolean]",
        "  -c, --config   Path for .dockerfilelintrc configuration file                [string]",
        "  -v, --version  Show version number                                         [boolean]",
        "  -h, --help     Show help                                                   [boolean]",
        "",
        "Examples:",
        "  dockerfilelint Dockerfile         Lint a Dockerfile in the current working directory",
        "",
        "  dockerfilelint test/example/* -j  Lint all files in the test/example directory and",
        "                                    output results in JSON",
        "",
        "  dockerfilelint 'FROM latest'      Lint the contents given as a string on the command",
        "                                    line",
        "",
        "  dockerfilelint < Dockerfile       Lint the contents of Dockerfile via stdin"
    ],
    "dotenv-linter": [
        "dotenv-linter 3.2.0",
        "Mikhail Grachev <work@mgrachev.com>",
        "Lightning-fast linter for .env files",
        "",
        "USAGE:",
        "    dotenv-linter [FLAGS] [OPTIONS] <input>... [SUBCOMMAND]",
        "",
        "FLAGS:",
        "    -h, --help                 Prints help information",
        "        --no-color             Turns off the colored output",
        "        --not-check-updates    Doesn't check for updates",
        "    -q, --quiet                Doesn't display additional information",
        "    -r, --recursive            Recursively searches and checks .env files",
        "    -v, --version              Prints version information",
        "",
        "OPTIONS:",
        "    -e, --exclude <FILE_NAME>...    Excludes files from check",
        "    -s, --skip <CHECK_NAME>...      Skips checks",
        "",
        "ARGS:",
        "    <input>...    files or paths [default: /]",
        "",
        "SUBCOMMANDS:",
        "    compare    Compares if files have the same keys [aliases: c]",
        "    fix        Automatically fixes warnings [aliases: f]",
        "    list       Shows list of available checks [aliases: l]"
    ],
    "dotnet-format": [
        "dotnet-format",
        "  dotnet-format",
        "",
        "Usage:",
        "  dotnet-format [options] [<workspace>]",
        "",
        "Arguments:",
        "  <workspace>  A path to a solution file, a project file, or a folder containing a solution or project file. If a path is not specified then the current directory is used. [default: ]",
        "",
        "Options:",
        "  --no-restore                                                             Doesn't execute an implicit restore before formatting.",
        "  -f, --folder                                                             Whether to treat the `<workspace>` argument as a simple folder of files.",
        "  -w, --fix-whitespace                                                     Run whitespace formatting. Run by default when not applying fixes.",
        "  -s, --fix-style <error|info|warn>                                        Run code style analyzers and apply fixes.",
        "  -a, --fix-analyzers <error|info|warn>                                    Run 3rd party analyzers and apply fixes.",
        "  --diagnostics <diagnostics>                                              A space separated list of diagnostic ids to use as a filter when fixing code style or 3rd party issues. [default: ]",
        "  --include <include>                                                      A list of relative file or folder paths to include in formatting. All files are formatted if empty. [default: ]",
        "  --exclude <exclude>                                                      A list of relative file or folder paths to exclude from formatting. [default: ]",
        "  --check                                                                  Formats files without saving changes to disk. Terminates with a non-zero exit code if any files were formatted.",
        "  --report <report-path>                                                   Accepts a file path, which if provided, will produce a json report in the given directory.",
        "  -v, --verbosity <d|detailed|diag|diagnostic|m|minimal|n|normal|q|quiet>  Set the verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]",
        "  --binarylog <binary-log-path>                                            Log all project or solution load information to a binary log file.",
        "  --version                                                                Show version information",
        "  -?, -h, --help                                                           Show help and usage information",
        ""
    ],
    "dustilock": [
        "usage: DustiLock [-h|--help] [-r|--recursive] [-a|--audit] [-p|--path",
        "                 \"<value>\"]",
        "",
        "                 a tool to find which of your dependencies is susceptible to",
        "                 Dependency Confusion attack",
        "",
        "Arguments:",
        "",
        "  -h  --help       Print help information",
        "  -r  --recursive  scan all files recursively",
        "  -a  --audit      audit only mode",
        "  -p  --path       the path to scan. default is cwd",
        "",
        ""
    ],
    "editorconfig-checker": [
        "USAGE:",
        "  -config string",
        "      config",
        "  -debug",
        "      print debugging information",
        "  -disable-end-of-line",
        "      disables the trailing whitespace check",
        "  -disable-indent-size",
        "      disables only the indent-size check",
        "  -disable-indentation",
        "      disables the indentation check",
        "  -disable-insert-final-newline",
        "      disables the final newline check",
        "  -disable-max-line-length",
        "      disables only the max-line-length check",
        "  -disable-trim-trailing-whitespace",
        "      disables the trailing whitespace check",
        "  -dry-run",
        "      show which files would be checked",
        "  -exclude string",
        "      a regex which files should be excluded from checking - needs to be a valid regular expression",
        "  -h  print the help",
        "  -help",
        "      print the help",
        "  -ignore-defaults",
        "      ignore default excludes",
        "  -init",
        "      creates an initial configuration",
        "  -no-color",
        "      dont print colors",
        "  -v  print debugging information",
        "  -verbose",
        "      print debugging information",
        "  -version",
        "      print the version number"
    ],
    "eslint": [
        "eslint [options] file.js [file.js] [dir]",
        "",
        "Basic configuration:",
        "  --no-eslintrc                   Disable use of configuration from .eslintrc.*",
        "  -c, --config path::String       Use this configuration, overriding .eslintrc.* config options if present",
        "  --env [String]                  Specify environments",
        "  --ext [String]                  Specify JavaScript file extensions",
        "  --global [String]               Define global variables",
        "  --parser String                 Specify the parser to be used",
        "  --parser-options Object         Specify parser options",
        "  --resolve-plugins-relative-to path::String  A folder where plugins should be resolved from, CWD by default",
        "",
        "Specifying rules and plugins:",
        "  --plugin [String]               Specify plugins",
        "  --rule Object                   Specify rules",
        "  --rulesdir [path::String]       Load additional rules from this directory. Deprecated: Use rules from plugins",
        "",
        "Fixing problems:",
        "  --fix                           Automatically fix problems",
        "  --fix-dry-run                   Automatically fix problems without saving the changes to the file system",
        "  --fix-type Array                Specify the types of fixes to apply (directive, problem, suggestion, layout)",
        "",
        "Ignoring files:",
        "  --ignore-path path::String      Specify path of ignore file",
        "  --no-ignore                     Disable use of ignore files and patterns",
        "  --ignore-pattern [String]       Pattern of files to ignore (in addition to those in .eslintignore)",
        "",
        "Using stdin:",
        "  --stdin                         Lint code provided on <STDIN> - default: false",
        "  --stdin-filename String         Specify filename to process STDIN as",
        "",
        "Handling warnings:",
        "  --quiet                         Report errors only - default: false",
        "  --max-warnings Int              Number of warnings to trigger nonzero exit code - default: -1",
        "",
        "Output:",
        "  -o, --output-file path::String  Specify file to write report to",
        "  -f, --format String             Use a specific output format - default: stylish",
        "  --color, --no-color             Force enabling/disabling of color",
        "",
        "Inline configuration comments:",
        "  --no-inline-config              Prevent comments from changing config or rules",
        "  --report-unused-disable-directives  Adds reported errors for unused eslint-disable directives",
        "",
        "Caching:",
        "  --cache                         Only check changed files - default: false",
        "  --cache-file path::String       Path to the cache file. Deprecated: use --cache-location - default: .eslintcache",
        "  --cache-location path::String   Path to the cache file or directory",
        "  --cache-strategy String         Strategy to use for detecting changed files in the cache - either: metadata or content - default: metadata",
        "",
        "Miscellaneous:",
        "  --init                          Run config initialization wizard - default: false",
        "  --env-info                      Output execution environment information - default: false",
        "  --no-error-on-unmatched-pattern  Prevent errors when pattern is unmatched",
        "  --exit-on-fatal-error           Exit with exit code 2 in case of fatal error - default: false",
        "  --debug                         Output debugging information",
        "  -h, --help                      Show help",
        "  -v, --version                   Output the version number",
        "  --print-config path::String     Print the configuration for the given file"
    ],
    "eslint-plugin-jsonc": [
        "eslint [options] file.js [file.js] [dir]",
        "",
        "Basic configuration:",
        "  --no-eslintrc                   Disable use of configuration from .eslintrc.*",
        "  -c, --config path::String       Use this configuration, overriding .eslintrc.* config options if present",
        "  --env [String]                  Specify environments",
        "  --ext [String]                  Specify JavaScript file extensions",
        "  --global [String]               Define global variables",
        "  --parser String                 Specify the parser to be used",
        "  --parser-options Object         Specify parser options",
        "  --resolve-plugins-relative-to path::String  A folder where plugins should be resolved from, CWD by default",
        "",
        "Specifying rules and plugins:",
        "  --plugin [String]               Specify plugins",
        "  --rule Object                   Specify rules",
        "  --rulesdir [path::String]       Load additional rules from this directory. Deprecated: Use rules from plugins",
        "",
        "Fixing problems:",
        "  --fix                           Automatically fix problems",
        "  --fix-dry-run                   Automatically fix problems without saving the changes to the file system",
        "  --fix-type Array                Specify the types of fixes to apply (directive, problem, suggestion, layout)",
        "",
        "Ignoring files:",
        "  --ignore-path path::String      Specify path of ignore file",
        "  --no-ignore                     Disable use of ignore files and patterns",
        "  --ignore-pattern [String]       Pattern of files to ignore (in addition to those in .eslintignore)",
        "",
        "Using stdin:",
        "  --stdin                         Lint code provided on <STDIN> - default: false",
        "  --stdin-filename String         Specify filename to process STDIN as",
        "",
        "Handling warnings:",
        "  --quiet                         Report errors only - default: false",
        "  --max-warnings Int              Number of warnings to trigger nonzero exit code - default: -1",
        "",
        "Output:",
        "  -o, --output-file path::String  Specify file to write report to",
        "  -f, --format String             Use a specific output format - default: stylish",
        "  --color, --no-color             Force enabling/disabling of color",
        "",
        "Inline configuration comments:",
        "  --no-inline-config              Prevent comments from changing config or rules",
        "  --report-unused-disable-directives  Adds reported errors for unused eslint-disable directives",
        "",
        "Caching:",
        "  --cache                         Only check changed files - default: false",
        "  --cache-file path::String       Path to the cache file. Deprecated: use --cache-location - default: .eslintcache",
        "  --cache-location path::String   Path to the cache file or directory",
        "  --cache-strategy String         Strategy to use for detecting changed files in the cache - either: metadata or content - default: metadata",
        "",
        "Miscellaneous:",
        "  --init                          Run config initialization wizard - default: false",
        "  --env-info                      Output execution environment information - default: false",
        "  --no-error-on-unmatched-pattern  Prevent errors when pattern is unmatched",
        "  --exit-on-fatal-error           Exit with exit code 2 in case of fatal error - default: false",
        "  --debug                         Output debugging information",
        "  -h, --help                      Show help",
        "  -v, --version                   Output the version number",
        "  --print-config path::String     Print the configuration for the given file"
    ],
    "flake8": [
        "usage: flake8 [options] file file ...",
        "",
        "positional arguments:",
        "  filename",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -v, --verbose         Print more information about what is happening in",
        "                        flake8. This option is repeatable and will increase",
        "                        verbosity each time it is repeated.",
        "  --output-file OUTPUT_FILE",
        "                        Redirect report to a file.",
        "  --append-config APPEND_CONFIG",
        "                        Provide extra config files to parse in addition to the",
        "                        files found by Flake8 by default. These files are the",
        "                        last ones read and so they take the highest precedence",
        "                        when multiple files provide the same option.",
        "  --config CONFIG       Path to the config file that will be the authoritative",
        "                        config source. This will cause Flake8 to ignore all",
        "                        other configuration files.",
        "  --isolated            Ignore all configuration files.",
        "  --enable-extensions ENABLE_EXTENSIONS",
        "                        Enable plugins and extensions that are otherwise",
        "                        disabled by default",
        "  --require-plugins REQUIRE_PLUGINS",
        "                        Require specific plugins to be installed before",
        "                        running",
        "  --version             show program's version number and exit",
        "  -q, --quiet           Report only file names, or nothing. This option is",
        "                        repeatable.",
        "  --color {auto,always,never}",
        "                        Whether to use color in output. Defaults to `auto`.",
        "  --count               Print total number of errors to standard output and",
        "                        set the exit code to 1 if total is not empty.",
        "  --diff                (DEPRECATED) Report changes only within line number",
        "                        ranges in the unified diff provided on standard in by",
        "                        the user.",
        "  --exclude patterns    Comma-separated list of files or directories to",
        "                        exclude. (Default: ['.svn', 'CVS', '.bzr', '.hg',",
        "                        '.git', '__pycache__', '.tox', '.nox', '.eggs',",
        "                        '*.egg'])",
        "  --extend-exclude patterns",
        "                        Comma-separated list of files or directories to add to",
        "                        the list of excluded ones.",
        "  --filename patterns   Only check for filenames matching the patterns in this",
        "                        comma-separated list. (Default: ['*.py'])",
        "  --stdin-display-name STDIN_DISPLAY_NAME",
        "                        The name used when reporting errors from code passed",
        "                        via stdin. This is useful for editors piping the file",
        "                        contents to flake8. (Default: stdin)",
        "  --format format       Format errors according to the chosen formatter.",
        "  --hang-closing        Hang closing bracket instead of matching indentation",
        "                        of opening bracket's line.",
        "  --ignore errors       Comma-separated list of error codes to ignore (or",
        "                        skip). For example, ``--ignore=E4,E51,W234``.",
        "                        (Default: E121,E123,E126,E226,E24,E704,W503,W504)",
        "  --extend-ignore errors",
        "                        Comma-separated list of error codes to add to the list",
        "                        of ignored ones. For example, ``--extend-",
        "                        ignore=E4,E51,W234``.",
        "  --per-file-ignores PER_FILE_IGNORES",
        "                        A pairing of filenames and violation codes that",
        "                        defines which violations to ignore in a particular",
        "                        file. The filenames can be specified in a manner",
        "                        similar to the ``--exclude`` option and the violations",
        "                        work similarly to the ``--ignore`` and ``--select``",
        "                        options.",
        "  --max-line-length n   Maximum allowed line length for the entirety of this",
        "                        run. (Default: 79)",
        "  --max-doc-length n    Maximum allowed doc line length for the entirety of",
        "                        this run. (Default: None)",
        "  --indent-size n       Number of spaces used for indentation (Default: 4)",
        "  --select errors       Comma-separated list of error codes to enable. For",
        "                        example, ``--select=E4,E51,W234``. (Default:",
        "                        E,F,W,C90)",
        "  --extend-select errors",
        "                        Comma-separated list of error codes to add to the list",
        "                        of selected ones. For example, ``--extend-",
        "                        select=E4,E51,W234``.",
        "  --disable-noqa        Disable the effect of \"# noqa\". This will report",
        "                        errors on lines with \"# noqa\" at the end.",
        "  --show-source         Show the source generate each error or warning.",
        "  --no-show-source      Negate --show-source",
        "  --statistics          Count errors.",
        "  --exit-zero           Exit with status code \"0\" even if there are errors.",
        "  -j JOBS, --jobs JOBS  Number of subprocesses to use to run checks in",
        "                        parallel. This is ignored on Windows. The default,",
        "                        \"auto\", will auto-detect the number of processors",
        "                        available to use. (Default: auto)",
        "  --tee                 Write to stdout and output-file.",
        "  --benchmark           Print benchmark information about this run of Flake8",
        "  --bug-report          Print information necessary when preparing a bug",
        "                        report",
        "",
        "mccabe:",
        "  --max-complexity MAX_COMPLEXITY",
        "                        McCabe complexity threshold",
        "",
        "pyflakes:",
        "  --builtins BUILTINS   define more built-ins, comma separated",
        "  --doctests            also check syntax of the doctests",
        "  --include-in-doctest INCLUDE_IN_DOCTEST",
        "                        Run doctests only on these files",
        "  --exclude-from-doctest EXCLUDE_FROM_DOCTEST",
        "                        Skip these files when running doctests",
        "",
        "Installed plugins: mccabe: 0.7.0, pycodestyle: 2.9.1, pyflakes: 2.5.0"
    ],
    "gherkin-lint": [
        "Usage: gherkin-lint [options] <feature-files>",
        "",
        "Options:",
        "  -f, --format [format]  output format. Possible values: json, stylish, xunit.",
        "                         Defaults to stylish",
        "  -i, --ignore <...>     comma seperated list of files/glob patterns that the",
        "                         linter should ignore, overrides .gherkin-lintignore",
        "                         file",
        "  -c, --config [config]  configuration file, defaults to .gherkin-lintrc",
        "  -r, --rulesdir <...>   additional rule directories (default: [])",
        "  -h, --help             display help for command"
    ],
    "git_diff": [
        "usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]",
        "           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]",
        "           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]",
        "           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]",
        "           [--super-prefix=<path>] [--config-env=<name>=<envvar>]",
        "           <command> [<args>]",
        "",
        "These are common Git commands used in various situations:",
        "",
        "start a working area (see also: git help tutorial)",
        "   clone     Clone a repository into a new directory",
        "   init      Create an empty Git repository or reinitialize an existing one",
        "",
        "work on the current change (see also: git help everyday)",
        "   add       Add file contents to the index",
        "   mv        Move or rename a file, a directory, or a symlink",
        "   restore   Restore working tree files",
        "   rm        Remove files from the working tree and from the index",
        "",
        "examine the history and state (see also: git help revisions)",
        "   bisect    Use binary search to find the commit that introduced a bug",
        "   diff      Show changes between commits, commit and working tree, etc",
        "   grep      Print lines matching a pattern",
        "   log       Show commit logs",
        "   show      Show various types of objects",
        "   status    Show the working tree status",
        "",
        "grow, mark and tweak your common history",
        "   branch    List, create, or delete branches",
        "   commit    Record changes to the repository",
        "   merge     Join two or more development histories together",
        "   rebase    Reapply commits on top of another base tip",
        "   reset     Reset current HEAD to the specified state",
        "   switch    Switch branches",
        "   tag       Create, list, delete or verify a tag object signed with GPG",
        "",
        "collaborate (see also: git help workflows)",
        "   fetch     Download objects and refs from another repository",
        "   pull      Fetch from and integrate with another repository or a local branch",
        "   push      Update remote refs along with associated objects",
        "",
        "'git help -a' and 'git help -g' list available subcommands and some",
        "concept guides. See 'git help <command>' or 'git help <concept>'",
        "to read about a specific subcommand or concept.",
        "See 'git help git' for an overview of the system."
    ],
    "gitleaks": [
        "Gitleaks scans code, past or present, for secrets",
        "",
        "Usage:",
        "  gitleaks [command]",
        "",
        "Available Commands:",
        "  completion  generate the autocompletion script for the specified shell",
        "  detect      detect secrets in code",
        "  help        Help about any command",
        "  protect     protect secrets in code",
        "  version     display gitleaks version",
        "",
        "Flags:",
        "  -c, --config string          config file path",
        "                               order of precedence:",
        "                               1. --config/-c",
        "                               2. env var GITLEAKS_CONFIG",
        "                               3. (--source/-s)/.gitleaks.toml",
        "                               If none of the three options are used, then gitleaks will use the default config",
        "      --exit-code int          exit code when leaks have been encountered (default 1)",
        "  -h, --help                   help for gitleaks",
        "  -l, --log-level string       log level (trace, debug, info, warn, error, fatal) (default \"info\")",
        "      --redact                 redact secrets from logs and stdout",
        "  -f, --report-format string   output format (json, csv, sarif) (default \"json\")",
        "  -r, --report-path string     report file",
        "  -s, --source string          path to source (default: $PWD) (default \".\")",
        "  -v, --verbose                show verbose output from scan",
        "",
        "Use \"gitleaks [command] --help\" for more information about a command."
    ],
    "golangci-lint": [
        "Smart, fast linters runner. Run it in cloud for every GitHub pull request on https://golangci.com",
        "",
        "Usage:",
        "  golangci-lint [flags]",
        "  golangci-lint [command]",
        "",
        "Available Commands:",
        "  cache       Cache control and information",
        "  completion  Generate the autocompletion script for the specified shell",
        "  config      Config",
        "  help        Help",
        "  linters     List current linters configuration",
        "  run         Run the linters",
        "  version     Version",
        "",
        "Flags:",
        "      --color string              Use color when printing; can be 'always', 'auto', or 'never' (default \"auto\")",
        "  -j, --concurrency int           Concurrency (default NumCPU) (default 2)",
        "      --cpu-profile-path string   Path to CPU profile output file",
        "  -h, --help                      help for golangci-lint",
        "      --mem-profile-path string   Path to memory profile output file",
        "      --trace-path string         Path to trace output file",
        "  -v, --verbose                   verbose output",
        "      --version                   Print version",
        "",
        "Use \"golangci-lint [command] --help\" for more information about a command."
    ],
    "goodcheck": [
        "Usage: goodcheck <command> [options] [args...]",
        "",
        "Commands:",
        "  goodcheck init  Generate a sample configuration file",
        "  goodcheck check  Run check with a configuration",
        "  goodcheck test  Test your configuration",
        "  goodcheck pattern  Print regexp for rules",
        "  goodcheck version  Print version",
        "  goodcheck help  Show help and quit"
    ],
    "graphql-schema-linter": [
        "Usage: graphql-schema-linter [options] [schema.graphql ...]",
        "",
        "Options:",
        "  -r, --rules <rules>                 only the rules specified will be used to validate the schema. Example: fields-have-descriptions,types-have-descriptions",
        "  -o, --rules-options <rulesOptions>  configure the specified rules with the passed in configuration options. example: {\"enum-values-sorted-alphabetically\":{\"sortOrder\":\"lexicographical\"}}",
        "  -i, --ignore <ignore list>          ignore errors for specific schema members, example: {'fields-have-descriptions':['Obvious','Query.obvious','Query.something.obvious']}",
        "  -f, --format <format>               choose the output format of the report. Possible values: json, text, compact",
        "  -s, --stdin                         schema definition will be read from STDIN instead of specified file.",
        "  -c, --config-directory <path>       path to begin searching for config files.",
        "  -p, --custom-rule-paths <paths>     path to additional custom rules to be loaded. Example: rules/*.js",
        "  --comment-descriptions              use old way of defining descriptions in GraphQL SDL",
        "  --old-implements-syntax             use old way of defining implemented interfaces in GraphQL SDL",
        "  -o, --only <rules>                  This option is DEPRECATED. Use `--rules` instead.",
        "  -e, --except <rules>                This option is DEPRECATED. Use `--rules` instead.",
        "  --version                           output the version number",
        "  -h, --help                          output usage information"
    ],
    "hadolint": [
        "hadolint - Dockerfile Linter written in Haskell",
        "",
        "Usage: hadolint [-v|--version] [-c|--config FILENAME] [DOCKERFILE...]",
        "                [--file-path-in-report FILEPATHINREPORT] [--no-fail]",
        "                [--no-color] [-V|--verbose] [-f|--format ARG] [--error RULECODE]",
        "                [--warning RULECODE] [--info RULECODE] [--style RULECODE]",
        "                [--ignore RULECODE]",
        "                [--trusted-registry REGISTRY (e.g. docker.io)]",
        "                [--require-label LABELSCHEMA (e.g. maintainer:text)]",
        "                [--strict-labels] [--disable-ignore-pragma]",
        "                [-t|--failure-threshold THRESHOLD]",
        "  Lint Dockerfile for errors and best practices",
        "",
        "Available options:",
        "  -h,--help                Show this help text",
        "  -v,--version             Show version",
        "  -c,--config FILENAME     Path to the configuration file",
        "  --file-path-in-report FILEPATHINREPORT",
        "                           The file path referenced in the generated report.",
        "                           This only applies for the 'checkstyle' format and is",
        "                           useful when running Hadolint with Docker to set the",
        "                           correct file path.",
        "  --no-fail                Don't exit with a failure status code when any rule",
        "                           is violated",
        "  --no-color               Don't colorize output",
        "  -V,--verbose             Enables verbose logging of hadolint's output to",
        "                           stderr",
        "  -f,--format ARG          The output format for the results [tty | json |",
        "                           checkstyle | codeclimate | gitlab_codeclimate | gnu |",
        "                           codacy | sonarqube | sarif] (default: tty)",
        "  --error RULECODE         Make the rule `RULECODE` have the level `error`",
        "  --warning RULECODE       Make the rule `RULECODE` have the level `warning`",
        "  --info RULECODE          Make the rule `RULECODE` have the level `info`",
        "  --style RULECODE         Make the rule `RULECODE` have the level `style`",
        "  --ignore RULECODE        A rule to ignore. If present, the ignore list in the",
        "                           config file is ignored",
        "  --trusted-registry REGISTRY (e.g. docker.io)",
        "                           A docker registry to allow to appear in FROM",
        "                           instructions",
        "  --require-label LABELSCHEMA (e.g. maintainer:text)",
        "                           The option --require-label=label:format makes",
        "                           Hadolint check that the label `label` conforms to",
        "                           format requirement `format`",
        "  --strict-labels          Do not permit labels other than specified in",
        "                           `label-schema`",
        "  --disable-ignore-pragma  Disable inline ignore pragmas `# hadolint",
        "                           ignore=DLxxxx`",
        "  -t,--failure-threshold THRESHOLD",
        "                           Exit with failure code only when rules with a",
        "                           severity equal to or above THRESHOLD are violated.",
        "                           Accepted values: [error | warning | info | style |",
        "                           ignore | none] (default: info)"
    ],
    "htmlhint": [
        "Usage: htmlhint <file|folder|pattern|stdin|url ...> [options]",
        "",
        "Options:",
        "  -V, --version                                                    output the version number",
        "  -l, --list                                                       show all of the rules available",
        "  -c, --config <file>                                              custom configuration file",
        "  -r, --rules <ruleid, ruleid=value ...>                           set all of the rules available",
        "  -R, --rulesdir <file|folder>                                     load custom rules from file or folder",
        "  -f, --format <checkstyle|compact|html|json|junit|markdown|unix>  output messages as custom format",
        "  -i, --ignore <pattern, pattern ...>                              add pattern to exclude matches",
        "  --nocolor                                                        disable color",
        "  --warn                                                           Warn only, exit with 0",
        "  -h, --help                                                       display help for command",
        "  Examples:",
        "",
        "    htmlhint",
        "    htmlhint www",
        "    htmlhint www/test.html",
        "    htmlhint www/**/*.xhtml",
        "    htmlhint www/**/*.{htm,html}",
        "    htmlhint http://www.alibaba.com/",
        "    cat test.html | htmlhint stdin",
        "    htmlhint --list",
        "    htmlhint --rules tag-pair,id-class-value=underline test.html",
        "    htmlhint --config .htmlhintrc test.html",
        "    htmlhint --ignore **/build/**,**/test/**",
        "    htmlhint --rulesdir ./rules/",
        ""
    ],
    "isort": [
        "usage: isort [-h] [-V] [--vn] [-v] [--only-modified] [--dedup-headings] [-q]",
        "             [-d] [--overwrite-in-place] [--show-config] [--show-files] [--df]",
        "             [-c] [--ws] [--sp SETTINGS_PATH] [--cr CONFIG_ROOT]",
        "             [--resolve-all-configs] [--profile PROFILE] [--old-finders]",
        "             [-j [JOBS]] [--ac] [--interactive] [--format-error FORMAT_ERROR]",
        "             [--format-success FORMAT_SUCCESS] [--filter-files] [-s SKIP]",
        "             [--extend-skip EXTEND_SKIP] [--sg SKIP_GLOB]",
        "             [--extend-skip-glob EXTEND_SKIP_GLOB] [--gitignore]",
        "             [--ext SUPPORTED_EXTENSIONS]",
        "             [--blocked-extension BLOCKED_EXTENSIONS] [--dont-follow-links]",
        "             [--filename FILENAME] [--allow-root] [-a ADD_IMPORTS] [--append]",
        "             [--af] [--rm REMOVE_IMPORTS] [--float-to-top]",
        "             [--dont-float-to-top] [--ca] [--cs] [-e] [--ff]",
        "             [--fgw [FORCE_GRID_WRAP]] [-i INDENT]",
        "             [--lbi LINES_BEFORE_IMPORTS] [--lai LINES_AFTER_IMPORTS]",
        "             [--lbt LINES_BETWEEN_TYPES] [--le LINE_ENDING] [--ls] [--lss]",
        "             [-m {GRID,VERTICAL,HANGING_INDENT,VERTICAL_HANGING_INDENT,VERTICAL_GRID,VERTICAL_GRID_GROUPED,VERTICAL_GRID_GROUPED_NO_COMMA,NOQA,VERTICAL_HANGING_INDENT_BRACKET,VERTICAL_PREFIX_FROM_MODULE_IMPORT,HANGING_INDENT_WITH_PARENTHESES,BACKSLASH_GRID,0,1,2,3,4,5,6,7,8,9,10,11}]",
        "             [-n] [--nis] [--ot] [--dt] [--rr] [--reverse-sort]",
        "             [--sort-order SORT_ORDER] [--sl] [--nsl SINGLE_LINE_EXCLUSIONS]",
        "             [--tc] [--up] [-l LINE_LENGTH] [--wl WRAP_LENGTH]",
        "             [--case-sensitive] [--remove-redundant-aliases] [--honor-noqa]",
        "             [--treat-comment-as-code TREAT_COMMENTS_AS_CODE]",
        "             [--treat-all-comment-as-code] [--formatter FORMATTER] [--color]",
        "             [--ext-format EXT_FORMAT] [--star-first] [--sd DEFAULT_SECTION]",
        "             [--only-sections] [--ds] [--fas] [--fss] [--hcss] [--srss]",
        "             [--fass] [-t FORCE_TO_TOP] [--combine-straight-imports]",
        "             [--nlb NO_LINES_BEFORE] [--src SRC_PATHS]",
        "             [-b KNOWN_STANDARD_LIBRARY]",
        "             [--extra-builtin EXTRA_STANDARD_LIBRARY]",
        "             [-f KNOWN_FUTURE_LIBRARY] [-o KNOWN_THIRD_PARTY]",
        "             [-p KNOWN_FIRST_PARTY] [--known-local-folder KNOWN_LOCAL_FOLDER]",
        "             [--virtual-env VIRTUAL_ENV] [--conda-env CONDA_ENV]",
        "             [--py {all,2,27,3,310,35,36,37,38,39,auto}]",
        "             [files ...]",
        "",
        "Sort Python import definitions alphabetically within logical sections. Run",
        "with no arguments to see a quick start guide, otherwise, one or more",
        "files/directories/stdin must be provided. Use `-` as the first argument to",
        "represent stdin. Use --interactive to use the pre 5.0.0 interactive behavior.",
        "If you've used isort 4 but are new to isort 5, see the upgrading guide:",
        "https://pycqa.github.io/isort/docs/upgrade_guides/5.0.0.html",
        "",
        "general options:",
        "  -h, --help            show this help message and exit",
        "  -V, --version         Displays the currently installed version of isort.",
        "  --vn, --version-number",
        "                        Returns just the current version number without the",
        "                        logo",
        "  -v, --verbose         Shows verbose output, such as when files are skipped",
        "                        or when a check is successful.",
        "  --only-modified, --om",
        "                        Suppresses verbose output for non-modified files.",
        "  --dedup-headings      Tells isort to only show an identical custom import",
        "                        heading comment once, even if there are multiple",
        "                        sections with the comment set.",
        "  -q, --quiet           Shows extra quiet output, only errors are outputted.",
        "  -d, --stdout          Force resulting output to stdout, instead of in-place.",
        "  --overwrite-in-place  Tells isort to overwrite in place using the same file",
        "                        handle. Comes at a performance and memory usage",
        "                        penalty over its standard approach but ensures all",
        "                        file flags and modes stay unchanged.",
        "  --show-config         See isort's determined config, as well as sources of",
        "                        config options.",
        "  --show-files          See the files isort will be run against with the",
        "                        current config options.",
        "  --df, --diff          Prints a diff of all the changes isort would make to a",
        "                        file, instead of changing it in place",
        "  -c, --check-only, --check",
        "                        Checks the file for unsorted / unformatted imports and",
        "                        prints them to the command line without modifying the",
        "                        file. Returns 0 when nothing would change and returns",
        "                        1 when the file would be reformatted.",
        "  --ws, --ignore-whitespace",
        "                        Tells isort to ignore whitespace differences when",
        "                        --check-only is being used.",
        "  --sp SETTINGS_PATH, --settings-path SETTINGS_PATH, --settings-file SETTINGS_PATH, --settings SETTINGS_PATH",
        "                        Explicitly set the settings path or file instead of",
        "                        auto determining based on file location.",
        "  --cr CONFIG_ROOT, --config-root CONFIG_ROOT",
        "                        Explicitly set the config root for resolving all",
        "                        configs. When used with the --resolve-all-configs",
        "                        flag, isort will look at all sub-folders in this",
        "                        config root to resolve config files and sort files",
        "                        based on the closest available config(if any)",
        "  --resolve-all-configs",
        "                        Tells isort to resolve the configs for all sub-",
        "                        directories and sort files in terms of its closest",
        "                        config files.",
        "  --profile PROFILE     Base profile type to use for configuration. Profiles",
        "                        include: black, django, pycharm, google, open_stack,",
        "                        plone, attrs, hug, wemake, appnexus. As well as any",
        "                        shared profiles.",
        "  --old-finders, --magic-placement",
        "                        Use the old deprecated finder logic that relies on",
        "                        environment introspection magic.",
        "  -j [JOBS], --jobs [JOBS]",
        "                        Number of files to process in parallel.",
        "  --ac, --atomic        Ensures the output doesn't save if the resulting file",
        "                        contains syntax errors.",
        "  --interactive         Tells isort to apply changes interactively.",
        "  --format-error FORMAT_ERROR",
        "                        Override the format used to print errors.",
        "  --format-success FORMAT_SUCCESS",
        "                        Override the format used to print success.",
        "",
        "target options:",
        "  files                 One or more Python source files that need their",
        "                        imports sorted.",
        "  --filter-files        Tells isort to filter files even when they are",
        "                        explicitly passed in as part of the CLI command.",
        "  -s SKIP, --skip SKIP  Files that isort should skip over. If you want to skip",
        "                        multiple files you should specify twice: --skip file1",
        "                        --skip file2. Values can be file names, directory",
        "                        names or file paths. To skip all files in a nested",
        "                        path use --skip-glob.",
        "  --extend-skip EXTEND_SKIP",
        "                        Extends --skip to add additional files that isort",
        "                        should skip over. If you want to skip multiple files",
        "                        you should specify twice: --skip file1 --skip file2.",
        "                        Values can be file names, directory names or file",
        "                        paths. To skip all files in a nested path use --skip-",
        "                        glob.",
        "  --sg SKIP_GLOB, --skip-glob SKIP_GLOB",
        "                        Files that isort should skip over.",
        "  --extend-skip-glob EXTEND_SKIP_GLOB",
        "                        Additional files that isort should skip over",
        "                        (extending --skip-glob).",
        "  --gitignore, --skip-gitignore",
        "                        Treat project as a git repository and ignore files",
        "                        listed in .gitignore. NOTE: This requires git to be",
        "                        installed and accessible from the same shell as isort.",
        "  --ext SUPPORTED_EXTENSIONS, --extension SUPPORTED_EXTENSIONS, --supported-extension SUPPORTED_EXTENSIONS",
        "                        Specifies what extensions isort can be run against.",
        "  --blocked-extension BLOCKED_EXTENSIONS",
        "                        Specifies what extensions isort can never be run",
        "                        against.",
        "  --dont-follow-links   Tells isort not to follow symlinks that are",
        "                        encountered when running recursively.",
        "  --filename FILENAME   Provide the filename associated with a stream.",
        "  --allow-root          Tells isort not to treat / specially, allowing it to",
        "                        be run against the root dir.",
        "",
        "general output options:",
        "  -a ADD_IMPORTS, --add-import ADD_IMPORTS",
        "                        Adds the specified import line to all files,",
        "                        automatically determining correct placement.",
        "  --append, --append-only",
        "                        Only adds the imports specified in --add-import if the",
        "                        file contains existing imports.",
        "  --af, --force-adds    Forces import adds even if the original file is empty.",
        "  --rm REMOVE_IMPORTS, --remove-import REMOVE_IMPORTS",
        "                        Removes the specified import from all files.",
        "  --float-to-top        Causes all non-indented imports to float to the top of",
        "                        the file having its imports sorted (immediately below",
        "                        the top of file comment). This can be an excellent",
        "                        shortcut for collecting imports every once in a while",
        "                        when you place them in the middle of a file to avoid",
        "                        context switching. *NOTE*: It currently doesn't work",
        "                        with cimports and introduces some extra over-head and",
        "                        a performance penalty.",
        "  --dont-float-to-top   Forces --float-to-top setting off. See --float-to-top",
        "                        for more information.",
        "  --ca, --combine-as    Combines as imports on the same line.",
        "  --cs, --combine-star  Ensures that if a star import is present, nothing else",
        "                        is imported from that namespace.",
        "  -e, --balanced        Balances wrapping to produce the most consistent line",
        "                        length possible",
        "  --ff, --from-first    Switches the typical ordering preference, showing from",
        "                        imports first then straight ones.",
        "  --fgw [FORCE_GRID_WRAP], --force-grid-wrap [FORCE_GRID_WRAP]",
        "                        Force number of from imports (defaults to 2 when",
        "                        passed as CLI flag without value) to be grid wrapped",
        "                        regardless of line length. If 0 is passed in (the",
        "                        global default) only line length is considered.",
        "  -i INDENT, --indent INDENT",
        "                        String to place for indents defaults to \" \" (4",
        "                        spaces).",
        "  --lbi LINES_BEFORE_IMPORTS, --lines-before-imports LINES_BEFORE_IMPORTS",
        "  --lai LINES_AFTER_IMPORTS, --lines-after-imports LINES_AFTER_IMPORTS",
        "  --lbt LINES_BETWEEN_TYPES, --lines-between-types LINES_BETWEEN_TYPES",
        "  --le LINE_ENDING, --line-ending LINE_ENDING",
        "                        Forces line endings to the specified value. If not",
        "                        set, values will be guessed per-file.",
        "  --ls, --length-sort   Sort imports by their string length.",
        "  --lss, --length-sort-straight",
        "                        Sort straight imports by their string length. Similar",
        "                        to `length_sort` but applies only to straight imports",
        "                        and doesn't affect from imports.",
        "  -m {GRID,VERTICAL,HANGING_INDENT,VERTICAL_HANGING_INDENT,VERTICAL_GRID,VERTICAL_GRID_GROUPED,VERTICAL_GRID_GROUPED_NO_COMMA,NOQA,VERTICAL_HANGING_INDENT_BRACKET,VERTICAL_PREFIX_FROM_MODULE_IMPORT,HANGING_INDENT_WITH_PARENTHESES,BACKSLASH_GRID,0,1,2,3,4,5,6,7,8,9,10,11}, --multi-line {GRID,VERTICAL,HANGING_INDENT,VERTICAL_HANGING_INDENT,VERTICAL_GRID,VERTICAL_GRID_GROUPED,VERTICAL_GRID_GROUPED_NO_COMMA,NOQA,VERTICAL_HANGING_INDENT_BRACKET,VERTICAL_PREFIX_FROM_MODULE_IMPORT,HANGING_INDENT_WITH_PARENTHESES,BACKSLASH_GRID,0,1,2,3,4,5,6,7,8,9,10,11}",
        "                        Multi line output (0-grid, 1-vertical, 2-hanging,",
        "                        3-vert-hanging, 4-vert-grid, 5-vert-grid-grouped,",
        "                        6-deprecated-alias-for-5, 7-noqa, 8-vertical-hanging-",
        "                        indent-bracket, 9-vertical-prefix-from-module-import,",
        "                        10-hanging-indent-with-parentheses).",
        "  -n, --ensure-newline-before-comments",
        "                        Inserts a blank line before a comment following an",
        "                        import.",
        "  --nis, --no-inline-sort",
        "                        Leaves `from` imports with multiple imports 'as-is'",
        "                        (e.g. `from foo import a, c ,b`).",
        "  --ot, --order-by-type",
        "                        Order imports by type, which is determined by case, in",
        "                        addition to alphabetically. **NOTE**: type here refers",
        "                        to the implied type from the import name",
        "                        capitalization. isort does not do type introspection",
        "                        for the imports. These \"types\" are simply:",
        "                        CONSTANT_VARIABLE, CamelCaseClass,",
        "                        variable_or_function. If your project follows PEP8 or",
        "                        a related coding standard and has many imports this is",
        "                        a good default, otherwise you likely will want to turn",
        "                        it off. From the CLI the `--dont-order-by-type` option",
        "                        will turn this off.",
        "  --dt, --dont-order-by-type",
        "                        Don't order imports by type, which is determined by",
        "                        case, in addition to alphabetically. **NOTE**: type",
        "                        here refers to the implied type from the import name",
        "                        capitalization. isort does not do type introspection",
        "                        for the imports. These \"types\" are simply:",
        "                        CONSTANT_VARIABLE, CamelCaseClass,",
        "                        variable_or_function. If your project follows PEP8 or",
        "                        a related coding standard and has many imports this is",
        "                        a good default. You can turn this on from the CLI",
        "                        using `--order-by-type`.",
        "  --rr, --reverse-relative",
        "                        Reverse order of relative imports.",
        "  --reverse-sort        Reverses the ordering of imports.",
        "  --sort-order SORT_ORDER",
        "                        Specify sorting function. Can be built in",
        "                        (natural[default] = force numbers to be sequential,",
        "                        native = Python's built-in sorted function) or an",
        "                        installable plugin.",
        "  --sl, --force-single-line-imports",
        "                        Forces all from imports to appear on their own line",
        "  --nsl SINGLE_LINE_EXCLUSIONS, --single-line-exclusions SINGLE_LINE_EXCLUSIONS",
        "                        One or more modules to exclude from the single line",
        "                        rule.",
        "  --tc, --trailing-comma",
        "                        Includes a trailing comma on multi line imports that",
        "                        include parentheses.",
        "  --up, --use-parentheses",
        "                        Use parentheses for line continuation on length limit",
        "                        instead of slashes. **NOTE**: This is separate from",
        "                        wrap modes, and only affects how individual lines that",
        "                        are too long get continued, not sections of multiple",
        "                        imports.",
        "  -l LINE_LENGTH, -w LINE_LENGTH, --line-length LINE_LENGTH, --line-width LINE_LENGTH",
        "                        The max length of an import line (used for wrapping",
        "                        long imports).",
        "  --wl WRAP_LENGTH, --wrap-length WRAP_LENGTH",
        "                        Specifies how long lines that are wrapped should be,",
        "                        if not set line_length is used. NOTE: wrap_length must",
        "                        be LOWER than or equal to line_length.",
        "  --case-sensitive      Tells isort to include casing when sorting module",
        "                        names",
        "  --remove-redundant-aliases",
        "                        Tells isort to remove redundant aliases from imports,",
        "                        such as `import os as os`. This defaults to `False`",
        "                        simply because some projects use these seemingly",
        "                        useless aliases to signify intent and change",
        "                        behaviour.",
        "  --honor-noqa          Tells isort to honor noqa comments to enforce skipping",
        "                        those comments.",
        "  --treat-comment-as-code TREAT_COMMENTS_AS_CODE",
        "                        Tells isort to treat the specified single line",
        "                        comment(s) as if they are code.",
        "  --treat-all-comment-as-code",
        "                        Tells isort to treat all single line comments as if",
        "                        they are code.",
        "  --formatter FORMATTER",
        "                        Specifies the name of a formatting plugin to use when",
        "                        producing output.",
        "  --color               Tells isort to use color in terminal output.",
        "  --ext-format EXT_FORMAT",
        "                        Tells isort to format the given files according to an",
        "                        extensions formatting rules.",
        "  --star-first          Forces star imports above others to avoid overriding",
        "                        directly imported variables.",
        "",
        "section output options:",
        "  --sd DEFAULT_SECTION, --section-default DEFAULT_SECTION",
        "                        Sets the default section for import options:",
        "                        ('FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY',",
        "                        'LOCALFOLDER')",
        "  --only-sections, --os",
        "                        Causes imports to be sorted based on their sections",
        "                        like STDLIB, THIRDPARTY, etc. Within sections, the",
        "                        imports are ordered by their import style and the",
        "                        imports with the same style maintain their relative",
        "                        positions.",
        "  --ds, --no-sections   Put all imports into the same section bucket",
        "  --fas, --force-alphabetical-sort",
        "                        Force all imports to be sorted as a single section",
        "  --fss, --force-sort-within-sections",
        "                        Don't sort straight-style imports (like import sys)",
        "                        before from-style imports (like from itertools import",
        "                        groupby). Instead, sort the imports by module,",
        "                        independent of import style.",
        "  --hcss, --honor-case-in-force-sorted-sections",
        "                        Honor `--case-sensitive` when `--force-sort-within-",
        "                        sections` is being used. Without this option set,",
        "                        `--order-by-type` decides module name ordering too.",
        "  --srss, --sort-relative-in-force-sorted-sections",
        "                        When using `--force-sort-within-sections`, sort",
        "                        relative imports the same way as they are sorted when",
        "                        not using that setting.",
        "  --fass, --force-alphabetical-sort-within-sections",
        "                        Force all imports to be sorted alphabetically within a",
        "                        section",
        "  -t FORCE_TO_TOP, --top FORCE_TO_TOP",
        "                        Force specific imports to the top of their appropriate",
        "                        section.",
        "  --combine-straight-imports, --csi",
        "                        Combines all the bare straight imports of the same",
        "                        section in a single line. Won't work with sections",
        "                        which have 'as' imports",
        "  --nlb NO_LINES_BEFORE, --no-lines-before NO_LINES_BEFORE",
        "                        Sections which should not be split with previous by",
        "                        empty lines",
        "  --src SRC_PATHS, --src-path SRC_PATHS",
        "                        Add an explicitly defined source path (modules within",
        "                        src paths have their imports automatically categorized",
        "                        as first_party). Glob expansion (`*` and `**`) is",
        "                        supported for this option.",
        "  -b KNOWN_STANDARD_LIBRARY, --builtin KNOWN_STANDARD_LIBRARY",
        "                        Force isort to recognize a module as part of Python's",
        "                        standard library.",
        "  --extra-builtin EXTRA_STANDARD_LIBRARY",
        "                        Extra modules to be included in the list of ones in",
        "                        Python's standard library.",
        "  -f KNOWN_FUTURE_LIBRARY, --future KNOWN_FUTURE_LIBRARY",
        "                        Force isort to recognize a module as part of Python's",
        "                        internal future compatibility libraries. WARNING: this",
        "                        overrides the behavior of __future__ handling and",
        "                        therefore can result in code that can't execute. If",
        "                        you're looking to add dependencies such as six, a",
        "                        better option is to create another section below",
        "                        --future using custom sections. See:",
        "                        https://github.com/PyCQA/isort#custom-sections-and-",
        "                        ordering and the discussion here:",
        "                        https://github.com/PyCQA/isort/issues/1463.",
        "  -o KNOWN_THIRD_PARTY, --thirdparty KNOWN_THIRD_PARTY",
        "                        Force isort to recognize a module as being part of a",
        "                        third party library.",
        "  -p KNOWN_FIRST_PARTY, --project KNOWN_FIRST_PARTY",
        "                        Force isort to recognize a module as being part of the",
        "                        current python project.",
        "  --known-local-folder KNOWN_LOCAL_FOLDER",
        "                        Force isort to recognize a module as being a local",
        "                        folder. Generally, this is reserved for relative",
        "                        imports (from . import module).",
        "  --virtual-env VIRTUAL_ENV",
        "                        Virtual environment to use for determining whether a",
        "                        package is third-party",
        "  --conda-env CONDA_ENV",
        "                        Conda environment to use for determining whether a",
        "                        package is third-party",
        "  --py {all,2,27,3,310,35,36,37,38,39,auto}, --python-version {all,2,27,3,310,35,36,37,38,39,auto}",
        "                        Tells isort to set the known standard library based on",
        "                        the specified Python version. Default is to assume any",
        "                        Python 3 version could be the target, and use a union",
        "                        of all stdlib modules across versions. If auto is",
        "                        specified, the version of the interpreter used to run",
        "                        isort (currently: 310) will be used."
    ],
    "jscpd": [
        "Usage: jscpd [options] <path ...>",
        "",
        "detector of copy/paste in files",
        "",
        "Options:",
        "  -V, --version              output the version number",
        "  -l, --min-lines [number]   min size of duplication in code lines (Default is",
        "                             5)",
        "  -k, --min-tokens [number]  min size of duplication in code tokens (Default is",
        "                             50)",
        "  -x, --max-lines [number]   max size of source in lines (Default is 1000)",
        "  -z, --max-size [string]    max size of source in bytes, examples: 1kb, 1mb,",
        "                             120kb (Default is 100kb)",
        "  -t, --threshold [number]   threshold for duplication, in case duplications >=",
        "                             threshold jscpd will exit with error",
        "  -c, --config [string]      path to config file (Default is .jscpd.json in",
        "                             <path>)",
        "  -i, --ignore [string]      glob pattern for files what should be excluded",
        "                             from duplication detection",
        "  -r, --reporters [string]   reporters or list of reporters separated with",
        "                             comma to use (Default is time,console)",
        "  -o, --output [string]      reporters to use (Default is ./report/)",
        "  -m, --mode [string]        mode of quality of search, can be \"strict\", \"mild\" and \"weak\" (Default is \"function mild(token) {",
        "      return strict(token) && token.type !== 'empty' && token.type !== 'new_line';",
        "  }\")",
        "  -f, --format [string]      format or formats separated by comma (Example",
        "                             php,javascript,python)",
        "  -p, --pattern [string]     glob pattern to file search (Example **/*.txt)",
        "  -b, --blame                blame authors of duplications (get information",
        "                             about authors from git)",
        "  -s, --silent               do not write detection progress and result to a",
        "                             console",
        "  --store [string]           use for define custom store (e.g. --store leveldb",
        "                             used for big codebase)",
        "  -a, --absolute             use absolute path in reports",
        "  -n, --noSymlinks           dont use symlinks for detection in files",
        "  --ignoreCase               ignore case of symbols in code (experimental)",
        "  -g, --gitignore            ignore all files from .gitignore file",
        "  --formats-exts [string]    list of formats with file extensions",
        "                             (javascript:es,es6;dart:dt)",
        "  -d, --debug                show debug information, not run detection",
        "                             process(options list and selected files)",
        "  -v, --verbose              show full information during detection process",
        "  --list                     show list of total supported formats",
        "  --skipLocal                skip duplicates in local folders, just detect",
        "                             cross folders duplications",
        "  -h, --help                 display help for command"
    ],
    "jsonlint": [
        "Usage: jsonlint [options] [<file, directory, pattern> ...]",
        "",
        "JSON/CJSON/JSON5 parser, syntax and schema validator and pretty-printer.",
        "",
        "Options:",
        "  -f, --config [file]          read options from a custom configuration file",
        "  -F, --no-config              disable searching for configuration files",
        "  -s, --sort-keys              sort object keys (not when prettifying)",
        "  -E, --extensions [ext]       file extensions to process for directory walk",
        "                               (default: [\"json\",\"JSON\"])",
        "  -i, --in-place               overwrite the input files",
        "  -j, --diff                   print difference instead of writing the output",
        "  -k, --check                  check that the input is equal to the output",
        "  -t, --indent [num|char]      number of spaces or specific characters to use",
        "                               for indentation (default: 2)",
        "  -c, --compact                compact error display",
        "  -M, --mode [mode]            set other parsing flags according to a format",
        "                               type (default: \"json\")",
        "  -C, --comments               recognize and ignore JavaScript-style comments",
        "  -S, --single-quoted-strings  support single quotes as string delimiters",
        "  -T, --trailing-commas        ignore trailing commas in objects and arrays",
        "  -D, --no-duplicate-keys      report duplicate object keys as an error",
        "  -V, --validate [file]        JSON schema file to use for validation",
        "  -e, --environment [env]      which specification of JSON Schema the",
        "                               validation file uses",
        "  -x, --context [num]          line count used as the diff context (default: 3)",
        "  -l, --log-files              print only the parsed file names to stdout",
        "  -q, --quiet                  do not print the parsed json to stdout",
        "  -n, --continue               continue with other files if an error occurs",
        "  -p, --pretty-print           prettify the input instead of stringifying the",
        "                               parsed object",
        "  -P, --pretty-print-invalid   force pretty-printing even for invalid input",
        "  -r, --trailing-newline       ensure a line break at the end of the output",
        "  -R, --no-trailing-newline    ensure no line break at the end of the output",
        "  --prune-comments             omit comments from the prettified output",
        "  --strip-object-keys          strip quotes from object keys if possible",
        "                               (JSON5)",
        "  --enforce-double-quotes      surrounds all strings with double quotes",
        "  --enforce-single-quotes      surrounds all strings with single quotes (JSON5)",
        "  --trim-trailing-commas       omit trailing commas from objects and arrays",
        "                               (JSON5)",
        "  -v, --version                output the version number",
        "  -h, --help                   display help for command",
        "",
        "You can use BASH patterns for including and excluding files (only files).",
        "Patterns are case-sensitive and have to use slashes as a path separators.",
        "A pattern to exclude from processing starts with \"!\".",
        "",
        "Parsing mode can be \"cjson\" or \"json5\" to enable other flags automatically.",
        "If no files or directories are specified, stdin will be parsed. Environments",
        "for JSON schema validation are \"json-schema-draft-04\", \"json-schema-draft-06\"",
        "or \"json-schema-draft-07\". If not specified, it will be auto-detected."
    ],
    "kics": [
        "Keeping Infrastructure as Code Secure",
        "",
        "Usage:",
        "  kics [command]",
        "",
        "Available Commands:",
        "  generate-id    Generates uuid for query",
        "  help           Help about any command",
        "  list-platforms List supported platforms",
        "  remediate      Auto remediates the project",
        "  scan           Executes a scan analysis",
        "  version        Displays the current version",
        "",
        "Flags:",
        "      --ci                  display only log messages to CLI output (mutually exclusive with silent)",
        "  -h, --help                help for kics",
        "  -f, --log-format string   determines log format (pretty,json) (default \"pretty\")",
        "      --log-level string    determines log level (TRACE,DEBUG,INFO,WARN,ERROR,FATAL) (default \"INFO\")",
        "      --log-path string     path to generate log file (info.log)",
        "      --no-color            disable CLI color output",
        "      --profiling string    enables performance profiler that prints resource consumption metrics in the logs during the execution (CPU, MEM)",
        "  -s, --silent              silence stdout messages (mutually exclusive with verbose and ci)",
        "  -v, --verbose             write logs to stdout too (mutually exclusive with silent)",
        "",
        "Use \"kics [command] --help\" for more information about a command."
    ],
    "ktlint": [
        "",
        "An anti-bikeshedding Kotlin linter with built-in formatter.",
        "(https://github.com/pinterest/ktlint).",
        "",
        "Usage:",
        "  ktlint <flags> [patterns]",
        "  java -jar ktlint.jar <flags> [patterns]",
        "",
        "Examples:",
        "  # Check the style of all Kotlin files (ending with '.kt' or '.kts') inside",
        "the current dir (recursively).",
        "  #",
        "  # Hidden folders will be skipped.",
        "  ktlint",
        "",
        "  # Check only certain locations starting from the current directory.",
        "  #",
        "  # Prepend ! to negate the pattern, KtLint uses .gitignore pattern style",
        "syntax.",
        "  # Globs are applied starting from the last one.",
        "  #",
        "  # Hidden folders will be skipped.",
        "  # Check all '.kt' files in 'src/' directory, but ignore files ending with",
        "'Test.kt':",
        "  ktlint \"src/**/*.kt\" \"!src/**/*Test.kt\"",
        "  # Check all '.kt' files in 'src/' directory, but ignore 'generated' directory",
        "and its subdirectories:",
        "  ktlint \"src/**/*.kt\" \"!src/**/generated/**\"",
        "",
        "  # Auto-correct style violations.",
        "  ktlint -F \"src/**/*.kt\"",
        "",
        "  # Using custom reporter jar and overriding report location",
        "  ktlint --reporter=csv,artifact=/path/to/reporter/csv.jar,",
        "output=my-custom-report.csv",
        "Flags:",
        "",
        "  -a, --android         Turn on Android Kotlin Style Guide compatibility",
        "      --color           Make output colorful",
        "      --color-name=<colorName>",
        "                        Customize the output color",
        "      --debug           Turn on debug output",
        "      --trace           Turn on trace output",
        "      --disabled_rules=<disabledRules>",
        "                        Comma-separated list of rules to globally disable. To",
        "                          disable standard ktlint rule-set use",
        "                          --disabled_rules=standard",
        "  -F, --format          Fix any deviations from the code style",
        "      --limit=<limit>   Maximum number of errors to show (default: show all)",
        "      --relative        Print files relative to the working directory (e.g.",
        "                          dir/file.kt instead of /home/user/project/dir/file.kt)",
        "      --reporter=<reporters>",
        "                        A reporter to use (built-in: plain (default), plain?",
        "                          group_by_file, json, sarif, checkstyle, html). To use",
        "                          a third-party reporter specify a path to a JAR file",
        "                          on the filesystem via ',artifact=' option. To",
        "                          override reporter output, use ',output=' option.",
        "  -R, --ruleset=<rulesetJarFiles>",
        "                        A path to a JAR file containing additional ruleset(s)",
        "      --stdin           Read file from stdin",
        "  -v, --verbose         Show error codes",
        "      --editorconfig=<editorConfigPath>",
        "                        Path to .editorconfig",
        "      --experimental    Enabled experimental rules (ktlint-ruleset-experimental)",
        "      --baseline=<baseline>",
        "                        Defines a baseline file to check against",
        "  -h, --help            Show this help message and exit.",
        "  -V, --version         Print version information and exit.",
        "Commands:",
        "  installGitPreCommitHook, --install-git-pre-commit-hook  Install git hook to",
        "                                                            automatically check",
        "                                                            files for style",
        "                                                            violations on commit",
        "  installGitPrePushHook, --install-git-pre-push-hook      Install git hook to",
        "                                                            automatically check",
        "                                                            files for style",
        "                                                            violations before",
        "                                                            push",
        "  printAST, --print-ast                                   Print AST (useful",
        "                                                            when",
        "                                                            writing/debugging",
        "                                                            rules)",
        "  applyToIDEA, --apply-to-idea                            Update Intellij IDEA",
        "                                                            Kotlin codestyle",
        "                                                            settings (global)",
        "  applyToIDEAProject, --apply-to-idea-project             Update Intellij IDEA",
        "                                                            project settings",
        "  generateEditorConfig                                    EXPERIMENTAL!!!",
        "                                                            Generate kotlin",
        "                                                            style section for '.",
        "                                                            editorconfig' file."
    ],
    "kubeconform": [
        "Usage: kubeconform [OPTION]... [FILE OR FOLDER]...",
        "  -cache string",
        "      cache schemas downloaded via HTTP to this folder",
        "  -cpu-prof string",
        "      debug - log CPU profiling to file",
        "  -exit-on-error",
        "      immediately stop execution when the first error is encountered",
        "  -h  show help information",
        "  -ignore-filename-pattern value",
        "      regular expression specifying paths to ignore (can be specified multiple times)",
        "  -ignore-missing-schemas",
        "      skip files with missing schemas instead of failing",
        "  -insecure-skip-tls-verify",
        "      disable verification of the server's SSL certificate. This will make your HTTPS connections insecure",
        "  -kubernetes-version string",
        "      version of Kubernetes to validate against, e.g.: 1.18.0 (default \"master\")",
        "  -n int",
        "      number of goroutines to run concurrently (default 4)",
        "  -output string",
        "      output format - json, junit, tap, text (default \"text\")",
        "  -reject string",
        "      comma-separated list of kinds to reject",
        "  -schema-location value",
        "      override schemas location search path (can be specified multiple times)",
        "  -skip string",
        "      comma-separated list of kinds to ignore",
        "  -strict",
        "      disallow additional properties not in schema",
        "  -summary",
        "      print a summary at the end (ignored for junit output)",
        "  -verbose",
        "      print results for all resources (ignored for tap and junit output)"
    ],
    "kubeval": [
        "Validate a Kubernetes YAML file against the relevant schema",
        "",
        "Usage:",
        "  kubeval <file> [file...] [flags]",
        "",
        "Flags:",
        "      --additional-schema-locations strings   Comma-seperated list of secondary base URLs used to download schemas",
        "  -n, --default-namespace string              Namespace to assume in resources if no namespace is set in metadata:namespace (default \"default\")",
        "  -d, --directories strings                   A comma-separated list of directories to recursively search for YAML documents",
        "      --exit-on-error                         Immediately stop execution when the first error is encountered",
        "  -f, --filename string                       filename to be displayed when testing manifests read from stdin (default \"stdin\")",
        "      --force-color                           Force colored output even if stdout is not a TTY",
        "  -h, --help                                  help for kubeval",
        "      --ignore-missing-schemas                Skip validation for resource definitions without a schema",
        "      --ignored-filename-patterns strings     An alias for ignored-path-patterns",
        "  -i, --ignored-path-patterns strings         A comma-separated list of regular expressions specifying paths to ignore",
        "      --insecure-skip-tls-verify              If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure",
        "  -v, --kubernetes-version string             Version of Kubernetes to validate against (default \"master\")",
        "      --openshift                             Use OpenShift schemas instead of upstream Kubernetes",
        "  -o, --output string                         The format of the output of this script. Options are: [stdout json tap]",
        "      --quiet                                 Silences any output aside from the direct results",
        "      --reject-kinds strings                  Comma-separated list of case-sensitive kinds to prohibit validating against schemas",
        "  -s, --schema-location string                Base URL used to download schemas. Can also be specified with the environment variable KUBEVAL_SCHEMA_LOCATION.",
        "      --skip-kinds strings                    Comma-separated list of case-sensitive kinds to skip when validating against schemas",
        "      --strict                                Disallow additional properties not in schema",
        "      --version                               version for kubeval"
    ],
    "lintr": [
        "No documentation for \u2018lintr\u2019 in specified packages and libraries:",
        "you could try \u2018??lintr\u2019"
    ],
    "luacheck": [
        "Usage: luacheck ([--config <config>] | [--no-config])",
        "       ([--default-config <default_config>] | [--no-default-config])",
        "       [-h] [-g] [-u] [-r] [-a] [-s] [--no-self] [--std <std>] [-c]",
        "       [-d] [-t] [-m] [--max-line-length <length>]",
        "       [--no-max-line-length] [--max-code-line-length <length>]",
        "       [--no-max-code-line-length] [--max-string-line-length <length>]",
        "       [--no-max-string-line-length]",
        "       [--max-comment-line-length <length>]",
        "       [--no-max-comment-line-length]",
        "       [--max-cyclomatic-complexity <complexity>]",
        "       [--no-max-cyclomatic-complexity] [--filename <filename>]",
        "       [-j <jobs>] [--formatter <formatter>] [-q] [--codes] [--ranges]",
        "       [--no-color] [-v] <file> [<file>] ...",
        "       ([--cache [<cache>]] | [--no-cache])",
        "       [--ignore <patt> [<patt>] ...] [--enable <patt> [<patt>] ...]",
        "       [--only <patt> [<patt>] ...] [--globals [<name>] ...]",
        "       [--read-globals [<name>] ...] [--new-globals [<name>] ...]",
        "       [--new-read-globals [<name>] ...] [--not-globals [<name>] ...]",
        "       [--exclude-files <glob> [<glob>] ...]",
        "       [--include-files <glob> [<glob>] ...]",
        "",
        "luacheck 0.26.1, a linter and a static analyzer for Lua.",
        "",
        "Arguments:",
        "   files                 List of files, directories and rockspecs to check. Pass",
        "                         '-' to check stdin.",
        "",
        "Options for filtering warnings:",
        "   -g, --no-global       Filter out warnings related to global variables.",
        "                         Equivalent to --ignore 1.",
        "   -u, --no-unused       Filter out warnings related to unused variables and",
        "                         values. Equivalent to --ignore [23].",
        "   -r, --no-redefined    Filter out warnings related to redefined variables.",
        "                         Equivalent to --ignore 4.",
        "   -a, --no-unused-args  Filter out warnings related to unused arguments and",
        "                         loop variables. Equivalent to --ignore 21[23].",
        "   -s, --no-unused-secondaries",
        "                         Filter out warnings related to unused variables set",
        "                         together with used ones.",
        "   --no-self             Filter out warnings related to implicit self argument.",
        "   --ignore <patt> [<patt>] ...,",
        "         -i <patt> [<patt>] ...",
        "                         Filter out warnings matching these patterns.",
        "                         If a pattern contains slash, part before slash matches",
        "                         warning code and part after it matches name of related",
        "                         variable. Otherwise, if the pattern contains letters or",
        "                         underscore, it matches name of related variable.",
        "                         Otherwise, the pattern matches warning code.",
        "   --enable <patt> [<patt>] ...,",
        "         -e <patt> [<patt>] ...",
        "                         Do not filter out warnings matching these patterns.",
        "   --only <patt> [<patt>] ...,",
        "       -o <patt> [<patt>] ...",
        "                         Filter out warnings not matching these patterns.",
        "",
        "Options for configuring allowed globals:",
        "   --std <std>           Set standard globals, default is max. <std> can be one",
        "                         of:",
        "                            max - union of globals of Lua 5.1, Lua 5.2, Lua 5.3",
        "                            and LuaJIT 2.x;",
        "                            min - intersection of globals of Lua 5.1, Lua 5.2,",
        "                            Lua 5.3 and LuaJIT 2.x;",
        "                            lua51 - globals of Lua 5.1 without deprecated ones;",
        "                            lua51c - globals of Lua 5.1;",
        "                            lua52 - globals of Lua 5.2;",
        "                            lua52c - globals of Lua 5.2 with LUA_COMPAT_ALL;",
        "                            lua53 - globals of Lua 5.3;",
        "                            lua53c - globals of Lua 5.3 with LUA_COMPAT_5_2;",
        "                            lua54 - globals of Lua 5.4;",
        "                            lua54c - globals of Lua 5.4 with LUA_COMPAT_5_3;",
        "                            luajit - globals of LuaJIT 2.x;",
        "                            ngx_lua - globals of Openresty lua-nginx-module",
        "                            0.10.10, including standard LuaJIT 2.x globals;",
        "                            love - globals added by L\u00d6VE;",
        "                            busted - globals added by Busted 2.0, by default",
        "                            added for files ending with _spec.lua within spec,",
        "                            test, and tests subdirectories;",
        "                            rockspec - globals allowed in rockspecs, by default",
        "                            added for files ending with .rockspec;",
        "                            luacheckrc - globals allowed in Luacheck configs, by",
        "                            default added for files ending with .luacheckrc;",
        "                            none - no standard globals.",
        "",
        "                         Sets can be combined using '+'. Extra sets can be",
        "                         defined in config by adding to `stds` global in config.",
        "   -c, --compat          Equivalent to --std max.",
        "   --globals [<name>] ...",
        "                         Add custom global variables (e.g. foo) or fields (e.g.",
        "                         foo.bar) on top of standard ones.",
        "   --read-globals [<name>] ...",
        "                         Add read-only global variables or fields.",
        "   --new-globals [<name>] ...",
        "                         Set custom global variables or fields. Removes custom",
        "                         globals added previously.",
        "   --new-read-globals [<name>] ...",
        "                         Set read-only global variables or fields. Removes",
        "                         read-only globals added previously.",
        "   --not-globals [<name>] ...",
        "                         Remove custom and standard global variables or fields.",
        "   -d, --allow-defined   Allow defining globals implicitly by setting them.",
        "   -t, --allow-defined-top",
        "                         Allow defining globals implicitly by setting them in",
        "                         the top level scope.",
        "   -m, --module          Limit visibility of implicitly defined globals to their",
        "                         files.",
        "",
        "Options for configuring line length limits:",
        "   --max-line-length <length>",
        "                         Set maximum allowed line length (default: 120).",
        "   --no-max-line-length  Do not limit line length.",
        "   --max-code-line-length <length>",
        "                         Set maximum allowed length for lines ending with code",
        "                         (default: 120).",
        "   --no-max-code-line-length",
        "                         Do not limit code line length.",
        "   --max-string-line-length <length>",
        "                         Set maximum allowed length for lines within a string",
        "                         (default: 120).",
        "   --no-max-string-line-length",
        "                         Do not limit string line length.",
        "   --max-comment-line-length <length>",
        "                         Set maximum allowed length for comment lines (default:",
        "                         120).",
        "   --no-max-comment-line-length",
        "                         Do not limit comment line length.",
        "",
        "Configuration file options:",
        "   --config <config>     Path to configuration file. (default: .luacheckrc)",
        "   --no-config           Do not look up configuration file.",
        "   --default-config <default_config>",
        "                         Path to configuration file to use if --[no-]config is",
        "                         not used and project-specific .luacheckrc is not found.",
        "                         (default: /root/.config/luacheck/.luacheckrc)",
        "   --no-default-config   Do not use default configuration file.",
        "",
        "File filtering options:",
        "   --exclude-files <glob> [<glob>] ...",
        "                         Do not check files matching these globbing patterns.",
        "   --include-files <glob> [<glob>] ...",
        "                         Do not check files not matching these globbing",
        "                         patterns.",
        "",
        "Performance optimization options:",
        "   --cache [<cache>]     Path to cache directory. (default:",
        "                         /root/.cache/luacheck)",
        "   --no-cache            Do not use cache.",
        "       -j <jobs>,        Check <jobs> files in parallel (default: 1).",
        "   --jobs <jobs>         Warning: LuaLanes not found, parallel checking",
        "                         disabled.",
        "",
        "Output formatting options:",
        "   --formatter <formatter>",
        "                         Use custom formatter. <formatter> must be a module name",
        "                         or one of:",
        "                            TAP - Test Anything Protocol formatter;",
        "                            JUnit - JUnit XML formatter;",
        "                            visual_studio - MSBuild/Visual Studio aware",
        "                            formatter;",
        "                            plain - simple warning-per-line formatter;",
        "                            default - standard formatter.",
        "   -q, --quiet           Suppress output for files without warnings.",
        "                         -qq: Suppress output of warnings.",
        "                         -qqq: Only print total number of warnings and errors.",
        "   --codes               Show warning codes.",
        "   --ranges              Show ranges of columns related to warnings.",
        "   --no-color            Do not color output.",
        "",
        "Other options:",
        "   -h, --help            Show this help message and exit.",
        "   --max-cyclomatic-complexity <complexity>",
        "                         Set maximum cyclomatic complexity for functions.",
        "   --no-max-cyclomatic-complexity",
        "                         Do not limit function cyclomatic complexity (default).",
        "   --filename <filename> Use another filename in output and for selecting",
        "                         configuration overrides.",
        "   -v, --version         Show version info and exit.",
        "",
        "Links:",
        "",
        "   Luacheck on GitHub: https://github.com/lunarmodules/luacheck",
        "   Luacheck documentation: https://luacheck.readthedocs.org"
    ],
    "markdown-link-check": [
        "Usage: markdown-link-check [options] [filenamesOrUrls...]",
        "",
        "Options:",
        "  -V, --version          output the version number",
        "  -p, --progress         show progress bar",
        "  -c, --config [config]  apply a config file (JSON), holding e.g. url specific",
        "                         header configuration",
        "  -q, --quiet            displays errors only",
        "  -v, --verbose          displays detailed error information",
        "  -a, --alive <code>     comma separated list of HTTP codes to be considered as",
        "                         alive",
        "  -r, --retry            retry after the duration indicated in 'retry-after'",
        "                         header when HTTP code is 429",
        "  -h, --help             display help for command"
    ],
    "markdown-table-formatter": [
        "markdown-table-formatter [options]",
        "",
        "  -c, --check              Check only (exits 1 if wrongly formatted markdown tables are found)",
        "  -p, --columnpadding Int  Override table columns padding number of spaces",
        "  -h, --help               Show help",
        "  -v, --version            Show version",
        "  -z, --verbose            Verbose mode"
    ],
    "markdownlint": [
        "Usage: markdownlint [options] <files|directories|globs>",
        "",
        "MarkdownLint Command Line Interface",
        "",
        "Options:",
        "  -V, --version                               output the version number",
        "  -c, --config [configFile]                   configuration file (JSON, JSONC, JS, or YAML)",
        "  -d, --dot                                   include files/folders with a dot (for example `.github`)",
        "  -f, --fix                                   fix basic errors (does not work with STDIN)",
        "  -i, --ignore [file|directory|glob]          file(s) to ignore/exclude (default: [])",
        "  -j, --json                                  write issues in json format",
        "  -o, --output [outputFile]                   write issues to file (no console)",
        "  -p, --ignore-path [file]                    path to file with ignore pattern(s)",
        "  -q, --quiet                                 do not write issues to STDOUT",
        "  -r, --rules  [file|directory|glob|package]  include custom rule files (default: [])",
        "  -s, --stdin                                 read from STDIN (does not work with files)",
        "  --enable [rules...]                         Enable certain rules, e.g. --enable MD013 MD041",
        "  --disable [rules...]                        Disable certain rules, e.g. --disable MD013 MD041",
        "  -h, --help                                  display help for command"
    ],
    "misspell": [
        "Usage of misspell:",
        "  -debug",
        "      Debug matching, very slow",
        "  -error",
        "      Exit with 2 if misspelling found",
        "  -f string",
        "      'csv', 'sqlite3' or custom Golang template for output",
        "  -i string",
        "      ignore the following corrections, comma separated",
        "  -j int",
        "      Number of workers, 0 = number of CPUs",
        "  -legal",
        "      Show legal information and exit",
        "  -locale string",
        "      Correct spellings using locale perferances for US or UK.  Default is to use a neutral variety of English.  Setting locale to US will correct the British spelling of 'colour' to 'color'",
        "  -o string",
        "      output file or [stderr|stdout|] (default \"stdout\")",
        "  -q  Do not emit misspelling output",
        "  -source string",
        "      Source mode: auto=guess, go=golang source, text=plain or markdown-like text (default \"auto\")",
        "  -v  Show version and exit",
        "  -w  Overwrite file with corrections (default is just to display)"
    ],
    "mypy": [
        "usage: mypy [-h] [-v] [-V] [more options; see below]",
        "            [-m MODULE] [-p PACKAGE] [-c PROGRAM_TEXT] [files ...]",
        "",
        "Mypy is a program that will type check your Python code.",
        "",
        "Pass in any files or folders you want to type check. Mypy will",
        "recursively traverse any provided folders to find .py files:",
        "",
        "    $ mypy my_program.py my_src_folder",
        "",
        "For more information on getting started, see:",
        "",
        "- https://mypy.readthedocs.io/en/stable/getting_started.html",
        "",
        "For more details on both running mypy and using the flags below, see:",
        "",
        "- https://mypy.readthedocs.io/en/stable/running_mypy.html",
        "- https://mypy.readthedocs.io/en/stable/command_line.html",
        "",
        "You can also use a config file to configure mypy instead of using",
        "command line flags. For more details, see:",
        "",
        "- https://mypy.readthedocs.io/en/stable/config_file.html",
        "",
        "Optional arguments:",
        "  -h, --help                Show this help message and exit",
        "  -v, --verbose             More verbose messages",
        "  -V, --version             Show program's version number and exit",
        "",
        "Config file:",
        "  Use a config file instead of command line arguments. This is useful if you",
        "  are using many flags or want to set different options per each module.",
        "",
        "  --config-file CONFIG_FILE",
        "                            Configuration file, must have a [mypy] section",
        "                            (defaults to mypy.ini, .mypy.ini, pyproject.toml,",
        "                            setup.cfg, ~/.config/mypy/config, ~/.mypy.ini)",
        "  --warn-unused-configs     Warn about unused '[mypy-<pattern>]' or",
        "                            '[[tool.mypy.overrides]]' config sections",
        "                            (inverse: --no-warn-unused-configs)",
        "",
        "Import discovery:",
        "  Configure how imports are discovered and followed.",
        "",
        "  --namespace-packages      Support namespace packages (PEP 420, __init__.py-",
        "                            less) (inverse: --no-namespace-packages)",
        "  --ignore-missing-imports  Silently ignore imports of missing modules",
        "  --follow-imports {normal,silent,skip,error}",
        "                            How to treat imports (default normal)",
        "  --python-executable EXECUTABLE",
        "                            Python executable used for finding PEP 561",
        "                            compliant installed packages and stubs",
        "  --no-site-packages        Do not search for installed PEP 561 compliant",
        "                            packages",
        "  --no-silence-site-packages",
        "                            Do not silence errors in PEP 561 compliant",
        "                            installed packages",
        "",
        "Platform configuration:",
        "  Type check code assuming it will be run under certain runtime conditions.",
        "  By default, mypy assumes your code will be run using the same operating",
        "  system and Python version you are using to run mypy itself.",
        "",
        "  --python-version x.y      Type check code assuming it will be running on",
        "                            Python x.y",
        "  -2, --py2                 Use Python 2 mode (same as --python-version 2.7)",
        "  --platform PLATFORM       Type check special-cased code for the given OS",
        "                            platform (defaults to sys.platform)",
        "  --always-true NAME        Additional variable to be considered True (may be",
        "                            repeated)",
        "  --always-false NAME       Additional variable to be considered False (may be",
        "                            repeated)",
        "",
        "Disallow dynamic typing:",
        "  Disallow the use of the dynamic 'Any' type under certain conditions.",
        "",
        "  --disallow-any-unimported",
        "                            Disallow Any types resulting from unfollowed",
        "                            imports",
        "  --disallow-any-expr       Disallow all expressions that have type Any",
        "  --disallow-any-decorated  Disallow functions that have Any in their",
        "                            signature after decorator transformation",
        "  --disallow-any-explicit   Disallow explicit Any in type positions",
        "  --disallow-any-generics   Disallow usage of generic types that do not",
        "                            specify explicit type parameters (inverse:",
        "                            --allow-any-generics)",
        "  --disallow-subclassing-any",
        "                            Disallow subclassing values of type 'Any' when",
        "                            defining classes (inverse: --allow-subclassing-",
        "                            any)",
        "",
        "Untyped definitions and calls:",
        "  Configure how untyped definitions and calls are handled. Note: by default,",
        "  mypy ignores any untyped function definitions and assumes any calls to",
        "  such functions have a return type of 'Any'.",
        "",
        "  --disallow-untyped-calls  Disallow calling functions without type",
        "                            annotations from functions with type annotations",
        "                            (inverse: --allow-untyped-calls)",
        "  --disallow-untyped-defs   Disallow defining functions without type",
        "                            annotations or with incomplete type annotations",
        "                            (inverse: --allow-untyped-defs)",
        "  --disallow-incomplete-defs",
        "                            Disallow defining functions with incomplete type",
        "                            annotations (inverse: --allow-incomplete-defs)",
        "  --check-untyped-defs      Type check the interior of functions without type",
        "                            annotations (inverse: --no-check-untyped-defs)",
        "  --disallow-untyped-decorators",
        "                            Disallow decorating typed functions with untyped",
        "                            decorators (inverse: --allow-untyped-decorators)",
        "",
        "None and Optional handling:",
        "  Adjust how values of type 'None' are handled. For more context on how mypy",
        "  handles values of type 'None', see:",
        "  https://mypy.readthedocs.io/en/stable/kinds_of_types.html#no-strict-",
        "  optional",
        "",
        "  --no-implicit-optional    Don't assume arguments with default values of None",
        "                            are Optional (inverse: --implicit-optional)",
        "  --no-strict-optional      Disable strict Optional checks (inverse: --strict-",
        "                            optional)",
        "",
        "Configuring warnings:",
        "  Detect code that is sound but redundant or problematic.",
        "",
        "  --warn-redundant-casts    Warn about casting an expression to its inferred",
        "                            type (inverse: --no-warn-redundant-casts)",
        "  --warn-unused-ignores     Warn about unneeded '# type: ignore' comments",
        "                            (inverse: --no-warn-unused-ignores)",
        "  --no-warn-no-return       Do not warn about functions that end without",
        "                            returning (inverse: --warn-no-return)",
        "  --warn-return-any         Warn about returning values of type Any from non-",
        "                            Any typed functions (inverse: --no-warn-return-",
        "                            any)",
        "  --warn-unreachable        Warn about statements or expressions inferred to",
        "                            be unreachable (inverse: --no-warn-unreachable)",
        "",
        "Miscellaneous strictness flags:",
        "  --allow-untyped-globals   Suppress toplevel errors caused by missing",
        "                            annotations (inverse: --disallow-untyped-globals)",
        "  --allow-redefinition      Allow unconditional variable redefinition with a",
        "                            new type (inverse: --disallow-redefinition)",
        "  --no-implicit-reexport    Treat imports as private unless aliased (inverse:",
        "                            --implicit-reexport)",
        "  --strict-equality         Prohibit equality, identity, and container checks",
        "                            for non-overlapping types (inverse: --no-strict-",
        "                            equality)",
        "  --strict-concatenate      Make arguments prepended via Concatenate be truly",
        "                            positional-only (inverse: --no-strict-concatenate)",
        "  --strict                  Strict mode; enables the following flags: --warn-",
        "                            unused-configs, --disallow-any-generics,",
        "                            --disallow-subclassing-any, --disallow-untyped-",
        "                            calls, --disallow-untyped-defs, --disallow-",
        "                            incomplete-defs, --check-untyped-defs, --disallow-",
        "                            untyped-decorators, --no-implicit-optional,",
        "                            --warn-redundant-casts, --warn-unused-ignores,",
        "                            --warn-return-any, --no-implicit-reexport,",
        "                            --strict-equality, --strict-concatenate",
        "  --disable-error-code NAME",
        "                            Disable a specific error code",
        "  --enable-error-code NAME  Enable a specific error code",
        "",
        "Configuring error messages:",
        "  Adjust the amount of detail shown in error messages.",
        "",
        "  --show-error-context      Precede errors with \"note:\" messages explaining",
        "                            context (inverse: --hide-error-context)",
        "  --show-column-numbers     Show column numbers in error messages (inverse:",
        "                            --hide-column-numbers)",
        "  --show-error-codes        Show error codes in error messages (inverse:",
        "                            --hide-error-codes)",
        "  --pretty                  Use visually nicer output in error messages: Use",
        "                            soft word wrap, show source code snippets, and",
        "                            show error location markers (inverse: --no-pretty)",
        "  --no-color-output         Do not colorize error messages (inverse: --color-",
        "                            output)",
        "  --no-error-summary        Do not show error stats summary (inverse: --error-",
        "                            summary)",
        "  --show-absolute-path      Show absolute paths to files (inverse: --hide-",
        "                            absolute-path)",
        "",
        "Incremental mode:",
        "  Adjust how mypy incrementally type checks and caches modules. Mypy caches",
        "  type information about modules into a cache to let you speed up future",
        "  invocations of mypy. Also see mypy's daemon mode:",
        "  mypy.readthedocs.io/en/stable/mypy_daemon.html#mypy-daemon",
        "",
        "  --no-incremental          Disable module cache (inverse: --incremental)",
        "  --cache-dir DIR           Store module cache info in the given folder in",
        "                            incremental mode (defaults to '.mypy_cache')",
        "  --sqlite-cache            Use a sqlite database to store the cache (inverse:",
        "                            --no-sqlite-cache)",
        "  --cache-fine-grained      Include fine-grained dependency information in the",
        "                            cache for the mypy daemon",
        "  --skip-version-check      Allow using cache written by older mypy version",
        "  --skip-cache-mtime-checks",
        "                            Skip cache internal consistency checks based on",
        "                            mtime",
        "",
        "Advanced options:",
        "  Debug and customize mypy internals.",
        "",
        "  --pdb                     Invoke pdb on fatal error",
        "  --show-traceback, --tb    Show traceback on fatal error",
        "  --raise-exceptions        Raise exception on fatal error",
        "  --custom-typing-module MODULE",
        "                            Use a custom typing module",
        "  --custom-typeshed-dir DIR",
        "                            Use the custom typeshed in DIR",
        "  --warn-incomplete-stub    Warn if missing type annotation in typeshed, only",
        "                            relevant with --disallow-untyped-defs or",
        "                            --disallow-incomplete-defs enabled (inverse: --no-",
        "                            warn-incomplete-stub)",
        "  --shadow-file SOURCE_FILE SHADOW_FILE",
        "                            When encountering SOURCE_FILE, read and type check",
        "                            the contents of SHADOW_FILE instead.",
        "",
        "Report generation:",
        "  Generate a report in the specified format.",
        "",
        "  --any-exprs-report DIR",
        "  --cobertura-xml-report DIR",
        "  --html-report DIR",
        "  --linecount-report DIR",
        "  --linecoverage-report DIR",
        "  --lineprecision-report DIR",
        "  --txt-report DIR",
        "  --xml-report DIR",
        "  --xslt-html-report DIR",
        "  --xslt-txt-report DIR",
        "",
        "Miscellaneous:",
        "  --junit-xml JUNIT_XML     Write junit.xml to the given file",
        "  --find-occurrences CLASS.MEMBER",
        "                            Print out all usages of a class member",
        "                            (experimental)",
        "  --scripts-are-modules     Script x becomes module x instead of __main__",
        "  --install-types           Install detected missing library stub packages",
        "                            using pip (inverse: --no-install-types)",
        "  --non-interactive         Install stubs without asking for confirmation and",
        "                            hide errors, with --install-types (inverse:",
        "                            --interactive)",
        "",
        "Running code:",
        "  Specify the code you want to type check. For more details, see",
        "  mypy.readthedocs.io/en/stable/running_mypy.html#running-mypy",
        "",
        "  --explicit-package-bases  Use current directory and MYPYPATH to determine",
        "                            module names of files passed (inverse: --no-",
        "                            explicit-package-bases)",
        "  --exclude PATTERN         Regular expression to match file names, directory",
        "                            names or paths which mypy should ignore while",
        "                            recursively discovering files to check, e.g.",
        "                            --exclude '/setup\\.py$'. May be specified more",
        "                            than once, eg. --exclude a --exclude b",
        "  -m MODULE, --module MODULE",
        "                            Type-check module; can repeat for more modules",
        "  -p PACKAGE, --package PACKAGE",
        "                            Type-check package recursively; can be repeated",
        "  -c PROGRAM_TEXT, --command PROGRAM_TEXT",
        "                            Type-check program passed in as string",
        "  files                     Type-check given files or directories",
        "",
        "Environment variables:",
        "  Define MYPYPATH for additional module search path entries.",
        "  Define MYPY_CACHE_DIR to override configuration cache_dir path."
    ],
    "npm-groovy-lint": [
        "npm-groovy-lint [options]",
        "",
        "  -p, --path path::String      Directory containing the files to lint (default: current directory) - default: .",
        "  -f, --files String           Comma-separated list of Ant-style file patterns specifying files that must be included",
        "  -s, --source String          Source text to lint (if no path/files arguments)",
        "  --sourcefilepath String      Full path of the file whose content is sent in source argument",
        "  --parse                      Try to parse the source code with GroovyShell and return errors (use argument --no-parse if you want to deactivate)",
        "  -c, --config String          Custom path to directory containing GroovyLint config file.",
        " Default: Found groovylintrc.js/json/yml/package.json config file, or default npm-groovy-lint config if not defined.",
        "Note: command-line arguments have priority on config file properties - default: /",
        "  --format                     Format source code",
        "  --fix                        Automatically fix problems when possible",
        "  -x, --fixrules String        Option for --fix argument: List of rule identifiers to fix (if not specified, all available fixes will be applied) - default: all",
        "  -i, --ignorepattern String   Comma-separated list of Ant-style file patterns specifying files that must be ignored. Default: none",
        "  -r, --rulesets String        RuleSet file(s) to use for linting. If it is a directory, all rulesets will be used. RuleSet file definition: http://codenarc.github.io/CodeNarc/codenarc-creating-ruleset.html. If not specified, npm-groovy-script default one will be used. Can also be a list of rule identifiers with parameters",
        "  --rulesetsoverridetype String  If list of rules sent in rulesets option, defines if they replace rules defined in .groovylintrc.json, or if they are appended - either: replaceConfig or appendConfig - default: replaceConfig",
        "  -o, --output String          Output format (txt,json,sarif,html,xml), or path to a file with one of these extensions - default: txt",
        "  -l, --loglevel String        Log level (error,warning,info) - either: error, warning, or info - default: info",
        "  --verbose                    More outputs in console, including performed fixes",
        "  --failon String              Defines the error level where CLI will fail (return code = 1). error,warning,info or none. Every failure level includes the more critical ones. - either: error, warning, info, or none - default: none",
        "  --failonerror                (Deprecated) Fails if at least one error is found",
        "  --failonwarning              (Deprecated) Fails if at least one warning is found",
        "  --failoninfo                 (Deprecated) Fails if at least one error is found",
        "  --codenarcargs               Use core CodeNarc arguments (all npm-groovy-lint arguments will be ignored). Doc: http://codenarc.github.io/CodeNarc/codenarc-command-line.html",
        "  --noserver                   For better performances, npm-groovy-lint runs a local server to eep CodeNarc alive instead of loading java/groovy at each call. If you don't want that, send this argument",
        "  --serverhost String          If use of CodeNarc server, host where is the CodeNarc server (default: localhost) - default: http://localhost",
        "  --serverport String          If use of CodeNarc server, port of the CodeNarc server (default: 7484) - default: 7484",
        "  -j, --javaexecutable String  If you do not want to use default java executable to run CodeNarcServer, you can override it - default: java",
        "  --javaoptions String         Override java options - default: -Xms256m,-Xmx2048m",
        "  --killserver                 Terminate the CodeNarcServer if running",
        "  --nolintafter                Do not lint again after format and fix options (useful for client calling Npm Groovy Lint)",
        "  --returnrules                Return rule descriptions and url if this argument is set",
        "  --insight                    npm-groovy-lint collects anonymous usage statistics using package https://www.npmjs.com/package/insight. If you want to enable them, use --insight option",
        "  -h, --help                   Show help (npm-groovy-lint -help OPTIONNAME to see option detail)",
        "  -v, --version                Show version"
    ],
    "perlcritic": [
        "Usage:",
        "      perlcritic [-12345 | --brutal | --cruel | --harsh | --stern | --gentle]",
        "                 [--severity number | name] [{-p | --profile} file | --noprofile]",
        "                 [--top [ number ]] [--theme expression] [--include pattern]",
        "                 [--exclude pattern] [{-s | --single-policy} pattern]",
        "                 [--only | --noonly] [--profile-strictness {warn|fatal|quiet}]",
        "                 [--force | --noforce] [--statistics] [--statistics-only]",
        "                 [--count | -C] [--verbose {number | format}] [--allow-unsafe]",
        "                 [--color | --nocolor] [--pager pager] [--quiet]",
        "                 [--color-severity-highest color_specification]",
        "                 [--color-severity-high color_specification]",
        "                 [--color-severity-medium color_specification]",
        "                 [--color-severity-low color_specification]",
        "                 [--color-severity-lowest color_specification]",
        "                 [--files-with-violations | -l]",
        "                 [--files-without-violations | -L]",
        "                 [--program-extensions file_name_extension]",
        "                 {FILE | DIRECTORY | STDIN}",
        "",
        "      perlcritic --profile-proto",
        "",
        "      perlcritic { --list | --list-enabled | --list-themes | --doc pattern [...] }",
        "",
        "      perlcritic { --help | --options | --man | --version }",
        ""
    ],
    "php": [
        "Usage: php [options] [-f] <file> [--] [args...]",
        "   php [options] -r <code> [--] [args...]",
        "   php [options] [-B <begin_code>] -R <code> [-E <end_code>] [--] [args...]",
        "   php [options] [-B <begin_code>] -F <file> [-E <end_code>] [--] [args...]",
        "   php [options] -S <addr>:<port> [-t docroot] [router]",
        "   php [options] -- [args...]",
        "   php [options] -a",
        "",
        "  -a               Run as interactive shell",
        "  -c <path>|<file> Look for php.ini file in this directory",
        "  -n               No configuration (ini) files will be used",
        "  -d foo[=bar]     Define INI entry foo with value 'bar'",
        "  -e               Generate extended information for debugger/profiler",
        "  -f <file>        Parse and execute <file>.",
        "  -h               This help",
        "  -i               PHP information",
        "  -l               Syntax check only (lint)",
        "  -m               Show compiled in modules",
        "  -r <code>        Run PHP <code> without using script tags <?..?>",
        "  -B <begin_code>  Run PHP <begin_code> before processing input lines",
        "  -R <code>        Run PHP <code> for every input line",
        "  -F <file>        Parse and execute <file> for every input line",
        "  -E <end_code>    Run PHP <end_code> after processing all input lines",
        "  -H               Hide any passed arguments from external tools.",
        "  -S <addr>:<port> Run with built-in web server.",
        "  -t <docroot>     Specify document root <docroot> for built-in web server.",
        "  -s               Output HTML syntax highlighted source.",
        "  -v               Version number",
        "  -w               Output source with stripped comments and whitespace.",
        "  -z <file>        Load Zend extension <file>.",
        "",
        "  args...          Arguments passed to script. Use -- args when first argument",
        "                   starts with - or script is read from stdin",
        "",
        "  --ini            Show configuration file names",
        "",
        "  --rf <name>      Show information about function <name>.",
        "  --rc <name>      Show information about class <name>.",
        "  --re <name>      Show information about extension <name>.",
        "  --rz <name>      Show information about Zend extension <name>.",
        "  --ri <name>      Show configuration for extension <name>.",
        ""
    ],
    "phpcs": [
        "",
        "Usage: phpcs [-nwlsaepqvi] [-d key[=value]] [--colors] [--no-colors]",
        "  [--cache[=<cacheFile>]] [--no-cache] [--tab-width=<tabWidth>]",
        "  [--report=<report>] [--report-file=<reportFile>] [--report-<report>=<reportFile>]",
        "  [--report-width=<reportWidth>] [--basepath=<basepath>] [--bootstrap=<bootstrap>]",
        "  [--severity=<severity>] [--error-severity=<severity>] [--warning-severity=<severity>]",
        "  [--runtime-set key value] [--config-set key value] [--config-delete key] [--config-show]",
        "  [--standard=<standard>] [--sniffs=<sniffs>] [--exclude=<sniffs>]",
        "  [--encoding=<encoding>] [--parallel=<processes>] [--generator=<generator>]",
        "  [--extensions=<extensions>] [--ignore=<patterns>] [--ignore-annotations]",
        "  [--stdin-path=<stdinPath>] [--file-list=<fileList>] [--filter=<filter>] <file> - ...",
        "",
        " -     Check STDIN instead of local files and directories",
        " -n    Do not print warnings (shortcut for --warning-severity=0)",
        " -w    Print both warnings and errors (this is the default)",
        " -l    Local directory only, no recursion",
        " -s    Show sniff codes in all reports",
        " -a    Run interactively",
        " -e    Explain a standard by showing the sniffs it includes",
        " -p    Show progress of the run",
        " -q    Quiet mode; disables progress and verbose output",
        " -m    Stop error messages from being recorded",
        "       (saves a lot of memory, but stops many reports from being used)",
        " -v    Print processed files",
        " -vv   Print ruleset and token output",
        " -vvv  Print sniff processing information",
        " -i    Show a list of installed coding standards",
        " -d    Set the [key] php.ini value to [value] or [true] if value is omitted",
        "",
        " --help                Print this help message",
        " --version             Print version information",
        " --colors              Use colors in output",
        " --no-colors           Do not use colors in output (this is the default)",
        " --cache               Cache results between runs",
        " --no-cache            Do not cache results between runs (this is the default)",
        " --ignore-annotations  Ignore all phpcs: annotations in code comments",
        "",
        " <cacheFile>    Use a specific file for caching (uses a temporary file by default)",
        " <basepath>     A path to strip from the front of file paths inside reports",
        " <bootstrap>    A comma separated list of files to run before processing begins",
        " <encoding>     The encoding of the files being checked (default is utf-8)",
        " <extensions>   A comma separated list of file extensions to check",
        "                The type of the file can be specified using: ext/type",
        "                e.g., module/php,es/js",
        " <file>         One or more files and/or directories to check",
        " <fileList>     A file containing a list of files and/or directories to check (one per line)",
        " <filter>       Use either the \"gitmodified\" or \"gitstaged\" filter,",
        "                or specify the path to a custom filter class",
        " <generator>    Use either the \"HTML\", \"Markdown\" or \"Text\" generator",
        "                (forces documentation generation instead of checking)",
        " <patterns>     A comma separated list of patterns to ignore files and directories",
        " <processes>    How many files should be checked simultaneously (default is 1)",
        " <report>       Print either the \"full\", \"xml\", \"checkstyle\", \"csv\"",
        "                \"json\", \"junit\", \"emacs\", \"source\", \"summary\", \"diff\"",
        "                \"svnblame\", \"gitblame\", \"hgblame\" or \"notifysend\" report,",
        "                or specify the path to a custom report class",
        "                (the \"full\" report is printed by default)",
        " <reportFile>   Write the report to the specified file path",
        " <reportWidth>  How many columns wide screen reports should be printed",
        "                or set to \"auto\" to use current screen width, where supported",
        " <severity>     The minimum severity required to display an error or warning",
        " <sniffs>       A comma separated list of sniff codes to include or exclude from checking",
        "                (all sniffs must be part of the specified standard)",
        " <standard>     The name or path of the coding standard to use",
        " <stdinPath>    If processing STDIN, the file path that STDIN will be processed as",
        " <tabWidth>     The number of spaces each tab represents",
        ""
    ],
    "phplint": [
        "Description:",
        "  Lint something",
        "",
        "Usage:",
        "  phplint [options] [--] [<path>...]",
        "",
        "Arguments:",
        "  path                               Path to file or directory to lint.",
        "",
        "Options:",
        "      --exclude=EXCLUDE              Path to file or directory to exclude from linting (multiple values allowed)",
        "      --extensions=EXTENSIONS        Check only files with selected extensions (default: php)",
        "  -j, --jobs=JOBS                    Number of parraled jobs to run (default: 5)",
        "  -c, --configuration=CONFIGURATION  Read configuration from config file (default: ./.phplint.yml).",
        "      --no-configuration             Ignore default configuration file (default: ./.phplint.yml).",
        "      --no-cache                     Ignore cached data.",
        "      --cache=CACHE                  Path to the cache file.",
        "      --no-progress                  Hide the progress output.",
        "      --json[=JSON]                  Path to store JSON results.",
        "      --xml[=XML]                    Path to store JUnit XML results.",
        "  -w, --warning                      Also show warnings.",
        "  -q, --quiet                        Do not output any message",
        "  -h, --help                         Display help for the given command. When no command is given display help for the list command",
        "  -V, --version                      Display this application version",
        "      --ansi|--no-ansi               Force (or disable --no-ansi) ANSI output",
        "  -n, --no-interaction               Do not ask any interactive question",
        "  -nf, --no-files-exit-code          Throw error if no files processed.",
        "  -v|vv|vvv, --verbose               Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
    ],
    "phpstan": [
        "Description:",
        "  Analyses source code",
        "",
        "Usage:",
        "  analyse [options] [--] [<paths>...]",
        "  analyze",
        "",
        "Arguments:",
        "  paths                                        Paths with source code to run analysis on",
        "",
        "Options:",
        "  -c, --configuration=CONFIGURATION            Path to project configuration file",
        "  -l, --level=LEVEL                            Level of rule options - the higher the stricter",
        "      --no-progress                            Do not show progress bar, only results",
        "      --debug                                  Show debug information - which file is analysed, do not catch internal errors",
        "  -a, --autoload-file=AUTOLOAD-FILE            Project's additional autoload file path",
        "      --error-format=ERROR-FORMAT              Format in which to print the result of the analysis",
        "  -b, --generate-baseline[=GENERATE-BASELINE]  Path to a file where the baseline should be saved [default: false]",
        "      --allow-empty-baseline                   Do not error out when the generated baseline is empty",
        "      --memory-limit=MEMORY-LIMIT              Memory limit for analysis",
        "      --xdebug                                 Allow running with XDebug for debugging purposes",
        "      --fix                                    Launch PHPStan Pro",
        "      --watch                                  Launch PHPStan Pro",
        "      --pro                                    Launch PHPStan Pro",
        "  -h, --help                                   Display help for the given command. When no command is given display help for the analyse command",
        "  -q, --quiet                                  Do not output any message",
        "  -V, --version                                Display this application version",
        "      --ansi|--no-ansi                         Force (or disable --no-ansi) ANSI output",
        "  -n, --no-interaction                         Do not ask any interactive question",
        "  -v|vv|vvv, --verbose                         Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug"
    ],
    "powershell": [
        "",
        "Usage: pwsh[.exe] [-Login] [[-File] <filePath> [args]]",
        "                  [-Command { - | <script-block> [-args <arg-array>]",
        "                                | <string> [<CommandParameters>] } ]",
        "                  [-ConfigurationName <string>] [-CustomPipeName <string>]",
        "                  [-EncodedCommand <Base64EncodedCommand>]",
        "                  [-ExecutionPolicy <ExecutionPolicy>] [-InputFormat {Text | XML}]",
        "                  [-Interactive] [-MTA] [-NoExit] [-NoLogo] [-NonInteractive] [-NoProfile]",
        "                  [-OutputFormat {Text | XML}] [-SettingsFile <filePath>] [-SSHServerMode] [-STA]",
        "                  [-Version] [-WindowStyle <style>] [-WorkingDirectory <directoryPath>]",
        "",
        "       pwsh[.exe] -h | -Help | -? | /?",
        "",
        "PowerShell Online Help https://aka.ms/powershell-docs",
        "",
        "All parameters are case-insensitive.",
        "",
        "-File | -f",
        "",
        "    If the value of File is \"-\", the command text is read from standard input.",
        "    Running \"pwsh -File -\" without redirected standard input starts a regular",
        "    session. This is the same as not specifying the File parameter at all.",
        "",
        "    This is the default parameter if no parameters are present but values are",
        "    present in the command line. The specified script runs in the local scope",
        "    (\"dot-sourced\"), so that the functions and variables that the script",
        "    creates are available in the current session. Enter the script file path",
        "    and any parameters. File must be the last parameter in the command, because",
        "    all characters typed after the File parameter name are interpreted as the",
        "    script file path followed by the script parameters.",
        "",
        "    Typically, the switch parameters of a script are either included or",
        "    omitted. For example, the following command uses the All parameter of the",
        "    Get-Script.ps1 script file: \"-File .\\Get-Script.ps1 -All\"",
        "",
        "    In rare cases, you might need to provide a BOOLEAN value for a switch",
        "    parameter. To provide a BOOLEAN value for a switch parameter in the value",
        "    of the FILE parameter, Use the parameter normally followed immediately by a",
        "    colon and the boolean value, such as the following:",
        "    \"-File .\\Get-Script.ps1 -All:$False\".",
        "",
        "    Parameters passed to the script are passed as literal strings, after",
        "    interpretation by the current shell. For example, if you are in cmd.exe and",
        "    want to pass an environment variable value, you would use the cmd.exe",
        "    syntax: \"pwsh -File .  est.ps1 -TestParam %windir%\"",
        "",
        "    In contrast, running \"pwsh -File .  est.ps1 -TestParam $env:windir\" in",
        "    cmd.exe results in the script receiving the literal string \"$env:windir\"",
        "    because it has no special meaning to the current cmd.exe shell. The",
        "    \"$env:windir\" style of environment variable reference can be used inside a",
        "    Command parameter, since there it is interpreted as PowerShell code.",
        "",
        "    Similarly, if you want to execute the same command from a Batch script,",
        "    you would use \"%~dp0\" instead of \".\\\" or \"$PSScriptRoot\" to represent the current",
        "    execution directory: \"pwsh -File %~dp0test.ps1 -TestParam %windir%\". If you",
        "    instead used \".  est.ps1\", PowerShell would throw an error because it cannot",
        "    find the literal path \".  est.ps1\".",
        "",
        "    When the script file invoked terminates with an exit command, the process",
        "    exit code is set to the numeric argument used with the exit command. With",
        "    normal termination, the exit code is always 0.",
        "",
        "    Similar to -Command, when a script-terminating error occurs, the exit code",
        "    is set to 1. However, unlike with -Command, when the execution is",
        "    interrupted with Ctrl-C the exit code is 0.",
        "",
        "-Command | -c",
        "",
        "    Executes the specified commands (and any parameters) as though they were",
        "    typed at the PowerShell command prompt, and then exits, unless the NoExit",
        "    parameter is specified.",
        "",
        "    The value of Command can be \"-\", a script block, or a string. If the value",
        "    of Command is \"-\", the command text is read from standard input.",
        "",
        "    The Command parameter only accepts a script block for execution when it can",
        "    recognize the value passed to Command as a ScriptBlock type. This is only",
        "    possible when running pwsh from another PowerShell host. The ScriptBlock",
        "    type may be contained in an existing variable, returned from an expression,",
        "    or parsed by the PowerShell host as a literal script block enclosed in",
        "    curly braces \"{}\", before being passed to pwsh.",
        "",
        "        pwsh -Command {Get-WinEvent -LogName security}",
        "",
        "    In cmd.exe, there is no such thing as a script block (or ScriptBlock type),",
        "    so the value passed to Command will always be a string. You can write a",
        "    script block inside the string, but instead of being executed it will",
        "    behave exactly as though you typed it at a typical PowerShell prompt,",
        "    printing the contents of the script block back out to you.",
        "",
        "    A string passed to Command is still executed as PowerShell script, so the",
        "    script block curly braces are often not required in the first place when",
        "    running from cmd.exe. To execute an inline script block defined inside a",
        "    string, the call operator \"&\" can be used:",
        "",
        "        pwsh -Command \"& {Get-WinEvent -LogName security}\"",
        "",
        "    If the value of Command is a string, Command must be the last parameter for",
        "    pwsh, because all arguments following it are interpreted as part of the",
        "    command to execute.",
        "",
        "    When called from within an existing PowerShell session, the results are",
        "    returned to the parent shell as deserialized XML objects, not live objects.",
        "    For other shells, the results are returned as strings.",
        "",
        "    If the value of Command is \"-\", the command text is read from standard",
        "    input. You must redirect standard input when using the Command parameter",
        "    with standard input. For example:",
        "",
        "        @'",
        "        \"in\"",
        "",
        "        \"hi\" |",
        "        % { \"$_ there\" }",
        "",
        "        \"out\"",
        "        '@ | powershell -NoProfile -Command -",
        "",
        "    This example produces the following output:",
        "",
        "        in",
        "        hi there",
        "        out",
        "",
        "    The process exit code is determined by status of the last (executed)",
        "    command within the script block. The exit code is 0 when $? is $true or 1",
        "    when $? is $false. If the last command is an external program or a",
        "    PowerShell script that explicitly sets an exit code other than 0 or 1, that",
        "    exit code is converted to 1 for process exit code. To preserve the specific",
        "    exit code, add exit $LASTEXITCODE to your command string or script block.",
        "",
        "    Similarly, the value 1 is returned when a script-terminating",
        "    (runspace-terminating) error, such as a throw or -ErrorAction Stop, occurs",
        "    or when execution is interrupted with Ctrl-C.",
        "",
        "-ConfigurationName | -config",
        "",
        "    Specifies a configuration endpoint in which PowerShell is run. This can be",
        "    any endpoint registered on the local machine including the default",
        "    PowerShell remoting endpoints or a custom endpoint having specific user",
        "    role capabilities.",
        "",
        "    Example: \"pwsh -ConfigurationName AdminRoles\"",
        "",
        "-CustomPipeName",
        "",
        "    Specifies the name to use for an additional IPC server (named pipe) used",
        "    for debugging and other cross-process communication. This offers a",
        "    predictable mechanism for connecting to other PowerShell instances.",
        "    Typically used with the CustomPipeName parameter on \"Enter-PSHostProcess\".",
        "",
        "    This parameter was introduced in PowerShell 6.2.",
        "",
        "    For example:",
        "",
        "        # PowerShell instance 1",
        "        pwsh -CustomPipeName mydebugpipe",
        "        # PowerShell instance 2",
        "        Enter-PSHostProcess -CustomPipeName mydebugpipe",
        "",
        "-EncodedCommand | -e | -ec",
        "",
        "    Accepts a Base64-encoded string version of a command. Use this parameter to",
        "    submit commands to PowerShell that require complex, nested quoting. The",
        "    Base64 representation must be a UTF-16 encoded string.",
        "",
        "    For example:",
        "",
        "        $command = 'dir \"c:\\program files\" '",
        "        $bytes = [System.Text.Encoding]::Unicode.GetBytes($command)",
        "        $encodedCommand = [Convert]::ToBase64String($bytes)",
        "        pwsh -encodedcommand $encodedCommand",
        "",
        "-ExecutionPolicy | -ex | -ep",
        "",
        "    Sets the default execution policy for the current session and saves it in",
        "    the $env:PSExecutionPolicyPreference environment variable. This parameter",
        "    does not change the persistently configured execution policies.",
        "",
        "    This parameter only applies to Windows computers. The",
        "    $env:PSExecutionPolicyPreference environment variable does not exist on",
        "    non-Windows platforms.",
        "",
        "-InputFormat | -inp | -if",
        "",
        "    Describes the format of data sent to PowerShell. Valid values are \"Text\"",
        "    (text strings) or \"XML\" (serialized CLIXML format).",
        "",
        "-Interactive | -i",
        "",
        "    Present an interactive prompt to the user. Inverse for NonInteractive",
        "    parameter.",
        "",
        "-Login | -l",
        "",
        "    On Linux and macOS, starts PowerShell as a login shell, using /bin/sh to",
        "    execute login profiles such as /etc/profile and ~/.profile. On Windows,",
        "    this switch does nothing.",
        "",
        "    [!IMPORTANT] This parameter must come first to start PowerShell as a login",
        "    shell. The parameter is ignored if passed in any other position.",
        "",
        "    To set up pwsh as the login shell on UNIX-like operating systems:",
        "",
        "    - Verify that the full absolute path to pwsh is listed under /etc/shells",
        "",
        "      - This path is usually something like /usr/bin/pwsh on Linux or",
        "        /usr/local/bin/pwsh on macOS",
        "      - With some installation methods, this entry will be added",
        "        automatically at installation time",
        "      - If pwsh is not present in /etc/shells, use an editor to append the",
        "        path to pwsh on the last line. This requires elevated privileges to",
        "        edit.",
        "",
        "    - Use the chsh utility to set your current user's shell to pwsh:",
        "",
        "        chsh -s /usr/bin/pwsh",
        "",
        "    [!WARNING] Setting pwsh as the login shell is currently not supported on",
        "    Windows Subsystem for Linux (WSL), and attempting to set pwsh as the",
        "    login shell there may lead to being unable to start WSL interactively.",
        "",
        "-MTA",
        "",
        "    Start PowerShell using a multi-threaded apartment. This switch is only",
        "    available on Windows.",
        "",
        "-NoExit | -noe",
        "",
        "    Does not exit after running startup commands.",
        "",
        "    Example: \"pwsh -NoExit -Command Get-Date\"",
        "",
        "-NoLogo | -nol",
        "",
        "    Hides the copyright banner at startup of interactive sessions.",
        "",
        "-NonInteractive | -noni",
        "",
        "    Does not present an interactive prompt to the user. Any attempts to use",
        "    interactive features, like Read-Host or confirmation prompts, result in",
        "    statement-terminating errors.",
        "",
        "-NoProfile | -nop",
        "",
        "    Does not load the PowerShell profiles.",
        "",
        "-OutputFormat | -o | -of",
        "",
        "    Determines how output from PowerShell is formatted. Valid values are \"Text\"",
        "    (text strings) or \"XML\" (serialized CLIXML format).",
        "",
        "    Example: \"pwsh -o XML -c Get-Date\"",
        "",
        "    When called withing a PowerShell session, you get deserialized objects as",
        "    output rather plain strings. When called from other shells, the output is",
        "    string data formatted as CLIXML text.",
        "",
        "-SettingsFile | -settings",
        "",
        "    Overrides the system-wide \"powershell.config.json\" settings file for the",
        "    session. By default, system-wide settings are read from the",
        "    \"powershell.config.json\" in the \"$PSHOME\" directory.",
        "",
        "    Note that these settings are not used by the endpoint specified by the",
        "    \"-ConfigurationName\" argument.",
        "",
        "    Example: \"pwsh -SettingsFile c:\\myproject\\powershell.config.json\"",
        "",
        "-SSHServerMode | -sshs",
        "",
        "    Used in sshd_config for running PowerShell as an SSH subsystem. It is not",
        "    intended or supported for any other use.",
        "",
        "-STA",
        "",
        "    Start PowerShell using a single-threaded apartment. This is the default.",
        "    This switch is only available on Windows.",
        "",
        "-Version | -v",
        "",
        "    Displays the version of PowerShell. Additional parameters are ignored.",
        "",
        "-WindowStyle | -w",
        "",
        "    Sets the window style for the session. Valid values are Normal, Minimized,",
        "    Maximized and Hidden.",
        "",
        "-WorkingDirectory | -wd",
        "",
        "    Sets the initial working directory by executing at startup. Any valid",
        "    PowerShell file path is supported.",
        "",
        "    To start PowerShell in your home directory, use: pwsh -WorkingDirectory ~",
        "",
        "-Help, -?, /?",
        "",
        "    Displays help for pwsh. If you are typing a pwsh command in PowerShell,",
        "    prepend the command parameters with a hyphen (-), not a forward slash (/).",
        ""
    ],
    "prettier": [
        "Usage: prettier [options] [file/dir/glob ...]",
        "",
        "By default, output is written to stdout.",
        "Stdin is read if it is piped to Prettier and no files are given.",
        "",
        "Output options:",
        "",
        "  -c, --check              Check if the given files are formatted, print a human-friendly summary",
        "                           message and paths to unformatted files (see also --list-different).",
        "  -l, --list-different     Print the names of files that are different from Prettier's formatting (see also --check).",
        "  -w, --write              Edit files in-place. (Beware!)",
        "",
        "Format options:",
        "",
        "  --arrow-parens <always|avoid>",
        "                           Include parentheses around a sole arrow function parameter.",
        "                           Defaults to always.",
        "  --bracket-same-line      Put > of opening tags on the last line instead of on a new line.",
        "                           Defaults to false.",
        "  --no-bracket-spacing     Do not print spaces between brackets.",
        "  --embedded-language-formatting <auto|off>",
        "                           Control how Prettier formats quoted code embedded in the file.",
        "                           Defaults to auto.",
        "  --end-of-line <lf|crlf|cr|auto>",
        "                           Which end of line characters to apply.",
        "                           Defaults to lf.",
        "  --html-whitespace-sensitivity <css|strict|ignore>",
        "                           How to handle whitespaces in HTML.",
        "                           Defaults to css.",
        "  --jsx-single-quote       Use single quotes in JSX.",
        "                           Defaults to false.",
        "  --parser <flow|babel|babel-flow|babel-ts|typescript|acorn|espree|meriyah|css|less|scss|json|json5|json-stringify|graphql|markdown|mdx|vue|yaml|glimmer|html|angular|lwc>",
        "                           Which parser to use.",
        "  --print-width <int>      The line length where Prettier will try wrap.",
        "                           Defaults to 80.",
        "  --prose-wrap <always|never|preserve>",
        "                           How to wrap prose.",
        "                           Defaults to preserve.",
        "  --quote-props <as-needed|consistent|preserve>",
        "                           Change when properties in objects are quoted.",
        "                           Defaults to as-needed.",
        "  --no-semi                Do not print semicolons, except at the beginning of lines which may need them.",
        "  --single-attribute-per-line",
        "                           Enforce single attribute per line in HTML, Vue and JSX.",
        "                           Defaults to false.",
        "  --single-quote           Use single quotes instead of double quotes.",
        "                           Defaults to false.",
        "  --tab-width <int>        Number of spaces per indentation level.",
        "                           Defaults to 2.",
        "  --trailing-comma <es5|none|all>",
        "                           Print trailing commas wherever possible when multi-line.",
        "                           Defaults to es5.",
        "  --use-tabs               Indent with tabs instead of spaces.",
        "                           Defaults to false.",
        "  --vue-indent-script-and-style",
        "                           Indent script and style tags in Vue files.",
        "                           Defaults to false.",
        "",
        "Config options:",
        "",
        "  --config <path>          Path to a Prettier configuration file (.prettierrc, package.json, prettier.config.js).",
        "  --no-config              Do not look for a configuration file.",
        "  --config-precedence <cli-override|file-override|prefer-file>",
        "                           Define in which order config files and CLI options should be evaluated.",
        "                           Defaults to cli-override.",
        "  --no-editorconfig        Don't take .editorconfig into account when parsing configuration.",
        "  --find-config-path <path>",
        "                           Find and print the path to a configuration file for the given input file.",
        "  --ignore-path <path>     Path to a file with patterns describing files to ignore.",
        "                           Defaults to .prettierignore.",
        "  --plugin <path>          Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",
        "                           Defaults to [].",
        "  --plugin-search-dir <path>",
        "                           Custom directory that contains prettier plugins in node_modules subdirectory.",
        "                           Overrides default behavior when plugins are searched relatively to the location of Prettier.",
        "                           Multiple values are accepted.",
        "                           Defaults to [].",
        "  --with-node-modules      Process files inside 'node_modules' directory.",
        "",
        "Editor options:",
        "",
        "  --cursor-offset <int>    Print (to stderr) where a cursor at the given position would move to after formatting.",
        "                           This option cannot be used with --range-start and --range-end.",
        "                           Defaults to -1.",
        "  --range-end <int>        Format code ending at a given character offset (exclusive).",
        "                           The range will extend forwards to the end of the selected statement.",
        "                           This option cannot be used with --cursor-offset.",
        "                           Defaults to Infinity.",
        "  --range-start <int>      Format code starting at a given character offset.",
        "                           The range will extend backwards to the start of the first line containing the selected statement.",
        "                           This option cannot be used with --cursor-offset.",
        "                           Defaults to 0.",
        "",
        "Other options:",
        "",
        "  --cache                  Only format changed files. Cannot use with --stdin-filepath.",
        "                           Defaults to false.",
        "  --cache-strategy <metadata|content>",
        "                           Strategy for the cache to use for detecting changed files.",
        "  --no-color               Do not colorize error messages.",
        "  --no-error-on-unmatched-pattern",
        "                           Prevent errors when pattern is unmatched.",
        "  --file-info <path>       Extract the following info (as JSON) for a given file path. Reported fields:",
        "                           * ignored (boolean) - true if file path is filtered by --ignore-path",
        "                           * inferredParser (string | null) - name of parser inferred from file path",
        "  -h, --help <flag>        Show CLI usage, or details about the given flag.",
        "                           Example: --help write",
        "  -u, --ignore-unknown     Ignore unknown files.",
        "  --insert-pragma          Insert @format pragma into file's first docblock comment.",
        "                           Defaults to false.",
        "  --loglevel <silent|error|warn|log|debug>",
        "                           What level of logs to report.",
        "                           Defaults to log.",
        "  --no-plugin-search       Disable plugin autoloading.",
        "  --require-pragma         Require either '@prettier' or '@format' to be present in the file's first docblock comment",
        "                           in order for it to be formatted.",
        "                           Defaults to false.",
        "  --stdin-filepath <path>  Path to the file to pretend that stdin comes from.",
        "  --support-info           Print support information as JSON.",
        "  -v, --version            Print Prettier version.",
        "",
        ""
    ],
    "proselint": [
        "Usage: proselint [OPTIONS] [PATHS]...",
        "",
        "  Create the CLI for proselint, a linter for prose.",
        "",
        "Options:",
        "  -v, --version          Show the version and exit.",
        "  --config PATH          Path to configuration file.",
        "  -d, --debug            Give verbose output.",
        "  -c, --clean            Clear the cache.",
        "  -j, --json             Output as JSON.",
        "  -t, --time             Time on a corpus.",
        "  --demo                 Run over demo file.",
        "  --compact              Shorten output.",
        "  --dump-config          Prints current config.",
        "  --dump-default-config  Prints default config.",
        "  -h, --help             Show this message and exit."
    ],
    "protolint": [
        "Usage of lint:",
        "  -config_dir_path string",
        "      path/to/the_directory_including_protolint.yaml",
        "  -config_path string",
        "      path/to/protolint.yaml. Note that if both are set, config_dir_path is ignored.",
        "  -fix",
        "      mode that the command line can automatically fix some of the problems",
        "  -no-error-on-unmatched-pattern",
        "      exits with 0 when no file is matched",
        "  -output_file string",
        "      path/to/output.txt",
        "  -plugin value",
        "      plugins to provide custom lint rule set. Note that it's necessary to specify it as path format'",
        "  -reporter value",
        "      formatter to output results in the specific format. Available reporters are \"plain\"(default), \"junit\", \"json\", and \"unix\".",
        "  -v  verbose output that includes parsing process details"
    ],
    "psalm": [
        "Usage:",
        "    psalm [options] [file...]",
        "",
        "Basic configuration:",
        "    -c, --config=psalm.xml",
        "        Path to a psalm.xml configuration file. Run psalm --init to create one.",
        "",
        "    --use-ini-defaults",
        "        Use PHP-provided ini defaults for memory and error display",
        "",
        "    --memory-limit=LIMIT",
        "        Use a specific memory limit. Cannot be combined with --use-ini-defaults",
        "",
        "    --disable-extension=[extension]",
        "        Used to disable certain extensions while Psalm is running.",
        "",
        "    --threads=INT",
        "        If greater than one, Psalm will run analysis on multiple threads, speeding things up.",
        "",
        "    --no-diff",
        "        Turns off Psalm\u2019s diff mode, checks all files regardless of whether they\u2019ve changed.",
        "",
        "    --php-version=PHP_VERSION",
        "        Explicitly set PHP version to analyse code against.",
        "",
        "Surfacing issues:",
        "    --show-info[=BOOLEAN]",
        "        Show non-exception parser findings (defaults to false).",
        "",
        "    --show-snippet[=true]",
        "        Show code snippets with errors. Options are 'true' or 'false'",
        "",
        "    --find-dead-code[=auto]",
        "    --find-unused-code[=auto]",
        "        Look for unused code. Options are 'auto' or 'always'. If no value is specified, default is 'auto'",
        "",
        "    --find-unused-psalm-suppress",
        "        Finds all @psalm-suppress annotations that aren\u2019t used",
        "",
        "    --find-references-to=[class|method|property]",
        "        Searches the codebase for references to the given fully-qualified class or method,",
        "        where method is in the format class::methodName",
        "",
        "    --no-suggestions",
        "        Hide suggestions",
        "",
        "    --taint-analysis",
        "        Run Psalm in taint analysis mode \u2013 see https://psalm.dev/docs/security_analysis for more info",
        "",
        "    --dump-taint-graph=OUTPUT_PATH",
        "        Output the taint graph using the DOT language \u2013 requires --taint-analysis",
        "",
        "Issue baselines:",
        "    --set-baseline=PATH",
        "        Save all current error level issues to a file, to mark them as info in subsequent runs",
        "",
        "        Add --include-php-versions to also include a list of PHP extension versions",
        "",
        "    --use-baseline=PATH",
        "        Allows you to use a baseline other than the default baseline provided in your config",
        "",
        "    --ignore-baseline",
        "        Ignore the error baseline",
        "",
        "    --update-baseline",
        "        Update the baseline by removing fixed issues. This will not add new issues to the baseline",
        "",
        "        Add --include-php-versions to also include a list of PHP extension versions",
        "",
        "Plugins:",
        "    --plugin=PATH",
        "        Executes a plugin, an alternative to using the Psalm config",
        "",
        "Output:",
        "    -m, --monochrome",
        "        Enable monochrome output",
        "",
        "    --output-format=console",
        "        Changes the output format.",
        "        Available formats: compact, console, text, emacs, json, pylint, xml, checkstyle, junit, sonarqube,",
        "                           github, phpstorm, codeclimate",
        "",
        "    --no-progress",
        "        Disable the progress indicator",
        "",
        "    --long-progress",
        "        Use a progress indicator suitable for Continuous Integration logs",
        "",
        "    --stats",
        "        Shows a breakdown of Psalm\u2019s ability to infer types in the codebase",
        "",
        "Reports:",
        "    --report=PATH",
        "        The path where to output report file. The output format is based on the file extension.",
        "        (Currently supported formats: \".json\", \".xml\", \".txt\", \".emacs\", \".pylint\", \".console\",",
        "        \".sarif\", \"checkstyle.xml\", \"sonarqube.json\", \"codeclimate.json\", \"summary.json\", \"junit.xml\")",
        "",
        "    --report-show-info[=BOOLEAN]",
        "        Whether the report should include non-errors in its output (defaults to true)",
        "",
        "Caching:",
        "    --clear-cache",
        "        Clears all cache files that Psalm uses for this specific project",
        "",
        "    --clear-global-cache",
        "        Clears all cache files that Psalm uses for all projects",
        "",
        "    --no-cache",
        "        Runs Psalm without using cache",
        "",
        "    --no-reflection-cache",
        "        Runs Psalm without using cached representations of unchanged classes and files.",
        "        Useful if you want the afterClassLikeVisit plugin hook to run every time you visit a file.",
        "",
        "    --no-file-cache",
        "        Runs Psalm without using caching every single file for later diffing.",
        "        This reduces the space Psalm uses on disk and file I/O.",
        "",
        "Miscellaneous:",
        "    -h, --help",
        "        Display this help message",
        "",
        "    -v, --version",
        "        Display the Psalm version",
        "",
        "    -i, --init [source_dir=src] [level=3]",
        "        Create a psalm config file in the current directory that points to [source_dir]",
        "        at the required level, from 1, most strict, to 8, most permissive.",
        "",
        "    --debug",
        "        Debug information",
        "",
        "    --debug-by-line",
        "        Debug information on a line-by-line level",
        "",
        "    --debug-emitted-issues",
        "        Print a php backtrace to stderr when emitting issues.",
        "",
        "    -r, --root",
        "        If running Psalm globally you\u2019ll need to specify a project root. Defaults to cwd",
        "",
        "    --generate-json-map=PATH",
        "        Generate a map of node references and types in JSON format, saved to the given path.",
        "",
        "    --generate-stubs=PATH",
        "        Generate stubs for the project and dump the file in the given path",
        "",
        "    --shepherd[=host]",
        "        Send data to Shepherd, Psalm\u2019s GitHub integration tool.",
        "",
        "    --alter",
        "        Run Psalter",
        "",
        "    --language-server",
        "        Run Psalm Language Server"
    ],
    "puppet-lint": [
        "    puppet-lint",
        "",
        "    Basic Command Line Usage:",
        "      puppet-lint [OPTIONS] PATH",
        "",
        "            PATH                         The path to the Puppet manifest.",
        "",
        "    Option:",
        "        --version                    Display the current version.",
        "        --no-config                  Do not load default puppet-lint option files.",
        "    -c, --config FILE                Load puppet-lint options from file.",
        "        --with-context               Show where in the manifest the problem is.",
        "        --with-filename              Display the filename before the warning.",
        "        --fail-on-warnings           Return a non-zero exit status for warnings",
        "        --error-level LEVEL          The level of error to return (warning, error or all).",
        "        --show-ignored               Show problems that have been ignored by control comments",
        "        --relative                   Compare module layout relative to the module root",
        "    -l, --load FILE                  Load a file containing custom puppet-lint checks.",
        "        --load-from-puppet MODULEPATH",
        "                                     Load plugins from the given Puppet module path.",
        "    -f, --fix                        Attempt to automatically fix errors",
        "        --log-format FORMAT          Change the log format.",
        "                                     Overrides --with-filename.",
        "                                     The following placeholders can be used:",
        "                                     %{filename} - Filename without path.",
        "                                     %{path}     - Path as provided to puppet-lint.",
        "                                     %{fullpath} - Expanded path to the file.",
        "                                     %{line}     - Line number.",
        "                                     %{column}   - Column number.",
        "                                     %{kind}     - The kind of message (warning, error).",
        "                                     %{KIND}     - Uppercase version of %{kind}.",
        "                                     %{check}    - The name of the check.",
        "                                     %{message}  - The message.",
        "        --json                       Log output as JSON",
        "        --list-checks                List available check names.",
        "",
        "    Checks:",
        "        --only-checks CHECKS         A comma separated list of checks that should be run",
        "        --ignore-paths PATHS         A comma separated list of patterns to ignore",
        "        --no-arrow_on_right_operand_line-check",
        "                                     Skip the arrow_on_right_operand_line check.",
        "        --no-autoloader_layout-check Skip the autoloader_layout check.",
        "        --no-class_inherits_from_params_class-check",
        "                                     Skip the class_inherits_from_params_class check.",
        "        --class_inherits_from_params_class-check",
        "                                     Enable the class_inherits_from_params_class check.",
        "        --no-code_on_top_scope-check Skip the code_on_top_scope check.",
        "        --code_on_top_scope-check    Enable the code_on_top_scope check.",
        "        --no-inherits_across_namespaces-check",
        "                                     Skip the inherits_across_namespaces check.",
        "        --no-names_containing_dash-check",
        "                                     Skip the names_containing_dash check.",
        "        --no-names_containing_uppercase-check",
        "                                     Skip the names_containing_uppercase check.",
        "        --no-nested_classes_or_defines-check",
        "                                     Skip the nested_classes_or_defines check.",
        "        --no-parameter_order-check   Skip the parameter_order check.",
        "        --no-right_to_left_relationship-check",
        "                                     Skip the right_to_left_relationship check.",
        "        --no-variable_scope-check    Skip the variable_scope check.",
        "        --no-slash_comments-check    Skip the slash_comments check.",
        "        --no-star_comments-check     Skip the star_comments check.",
        "        --no-case_without_default-check",
        "                                     Skip the case_without_default check.",
        "        --no-selector_inside_resource-check",
        "                                     Skip the selector_inside_resource check.",
        "        --no-documentation-check     Skip the documentation check.",
        "        --no-unquoted_node_name-check",
        "                                     Skip the unquoted_node_name check.",
        "        --no-duplicate_params-check  Skip the duplicate_params check.",
        "        --no-ensure_first_param-check",
        "                                     Skip the ensure_first_param check.",
        "        --no-ensure_not_symlink_target-check",
        "                                     Skip the ensure_not_symlink_target check.",
        "        --no-file_mode-check         Skip the file_mode check.",
        "        --no-unquoted_file_mode-check",
        "                                     Skip the unquoted_file_mode check.",
        "        --no-unquoted_resource_title-check",
        "                                     Skip the unquoted_resource_title check.",
        "        --no-double_quoted_strings-check",
        "                                     Skip the double_quoted_strings check.",
        "        --no-only_variable_string-check",
        "                                     Skip the only_variable_string check.",
        "        --no-puppet_url_without_modules-check",
        "                                     Skip the puppet_url_without_modules check.",
        "        --no-quoted_booleans-check   Skip the quoted_booleans check.",
        "        --quoted_booleans-check      Enable the quoted_booleans check.",
        "        --no-single_quote_string_with_variables-check",
        "                                     Skip the single_quote_string_with_variables check.",
        "        --no-variables_not_enclosed-check",
        "                                     Skip the variables_not_enclosed check.",
        "        --no-variable_contains_dash-check",
        "                                     Skip the variable_contains_dash check.",
        "        --no-variable_is_lowercase-check",
        "                                     Skip the variable_is_lowercase check.",
        "        --no-140chars-check          Skip the 140chars check.",
        "        --no-2sp_soft_tabs-check     Skip the 2sp_soft_tabs check.",
        "        --no-80chars-check           Skip the 80chars check.",
        "        --80chars-check              Enable the 80chars check.",
        "        --no-arrow_alignment-check   Skip the arrow_alignment check.",
        "        --no-hard_tabs-check         Skip the hard_tabs check.",
        "        --no-trailing_whitespace-check",
        "                                     Skip the trailing_whitespace check."
    ],
    "pylint": [
        "usage: pylint [options]",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "",
        "Commands:",
        "  Options which are actually commands. Options in this group are mutually exclusive.",
        "",
        "  --rcfile RCFILE       Specify a configuration file to load.",
        "  --output OUTPUT       Specify an output file.",
        "  --help-msg HELP_MSG [HELP_MSG ...]",
        "                        Display a help message for the given message id and",
        "                        exit. The value may be a comma separated list of",
        "                        message ids.",
        "  --list-msgs           Display a list of all pylint's messages divided by",
        "                        whether they are emittable with the given interpreter.",
        "  --list-msgs-enabled   Display a list of what messages are enabled, disabled",
        "                        and non-emittable with the given configuration.",
        "  --list-groups         List pylint's message groups.",
        "  --list-conf-levels    Generate pylint's confidence levels.",
        "  --list-extensions     List available extensions.",
        "  --full-documentation  Generate pylint's full documentation.",
        "  --generate-rcfile     Generate a sample configuration file according to the",
        "                        current configuration. You can put other options",
        "                        before this one to get them in the generated",
        "                        configuration.",
        "  --generate-toml-config",
        "                        Generate a sample configuration file according to the",
        "                        current configuration. You can put other options",
        "                        before this one to get them in the generated",
        "                        configuration. The config is in the .toml format.",
        "  --long-help           Show more verbose help.",
        "",
        "Main:",
        "  --init-hook INIT_HOOK",
        "                        Python code to execute, usually for sys.path",
        "                        manipulation such as pygtk.require().",
        "  --errors-only, -E     In error mode, messages with a category besides ERROR",
        "                        or FATAL are suppressed, and no reports are done by",
        "                        default. Error mode is compatible with disabling",
        "                        specific errors.",
        "  --verbose , -v        In verbose mode, extra non-checker-related info will",
        "                        be displayed.",
        "  --enable-all-extensions",
        "                        Load and enable all available extensions. Use --list-",
        "                        extensions to see a list all available extensions.",
        "  --ignore <file>[,<file>...]",
        "                        Files or directories to be skipped. They should be",
        "                        base names, not paths. (default: ('CVS',))",
        "  --ignore-patterns <pattern>[,<pattern>...]",
        "                        Files or directories matching the regex patterns are",
        "                        skipped. The regex matches against base names, not",
        "                        paths. The default value ignores Emacs file locks",
        "                        (default: (re.compile('^\\\\.#'),))",
        "  --ignore-paths <pattern>[,<pattern>...]",
        "                        Add files or directories matching the regex patterns",
        "                        to the ignore-list. The regex matches against paths",
        "                        and can be in Posix or Windows format. (default: [])",
        "  --persistent <y or n>",
        "                        Pickle collected data for later comparisons. (default:",
        "                        True)",
        "  --load-plugins <modules>",
        "                        List of plugins (as comma separated values of python",
        "                        module names) to load, usually to register additional",
        "                        checkers. (default: ())",
        "  --fail-under <score>  Specify a score threshold to be exceeded before",
        "                        program exits with error. (default: 10)",
        "  --fail-on <msg ids>   Return non-zero exit code if any of these",
        "                        messages/categories are detected, even if score is",
        "                        above --fail-under value. Syntax same as enable.",
        "                        Messages specified are enabled, while categories only",
        "                        check already-enabled messages. (default: )",
        "  --jobs <n-processes>, -j <n-processes>",
        "                        Use multiple processes to speed up Pylint. Specifying",
        "                        0 will auto-detect the number of processors available",
        "                        to use, and will cap the count on Windows to avoid",
        "                        hangs. (default: 1)",
        "  --limit-inference-results <number-of-results>",
        "                        Control the amount of potential inferred values when",
        "                        inferring a single object. This can help the",
        "                        performance when dealing with large functions or",
        "                        complex, nested conditions. (default: 100)",
        "  --extension-pkg-allow-list <pkg[,pkg]>",
        "                        A comma-separated list of package or module names from",
        "                        where C extensions may be loaded. Extensions are",
        "                        loading into the active Python interpreter and may run",
        "                        arbitrary code. (default: [])",
        "  --extension-pkg-whitelist <pkg[,pkg]>",
        "                        A comma-separated list of package or module names from",
        "                        where C extensions may be loaded. Extensions are",
        "                        loading into the active Python interpreter and may run",
        "                        arbitrary code. (This is an alternative name to",
        "                        extension-pkg-allow-list for backward compatibility.)",
        "                        (default: [])",
        "  --suggestion-mode <y or n>",
        "                        When enabled, pylint would attempt to guess common",
        "                        misconfiguration and emit user-friendly hints instead",
        "                        of false-positive error messages. (default: True)",
        "  --exit-zero           Always return a 0 (non-error) status code, even if",
        "                        lint errors are found. This is primarily useful in",
        "                        continuous integration scripts. (default: False)",
        "  --from-stdin          Interpret the stdin as a python script, whose filename",
        "                        needs to be passed as the module_or_package argument.",
        "                        (default: False)",
        "  --recursive <yn>      Discover python modules and packages in the file",
        "                        system subtree. (default: False)",
        "  --py-version <py_version>",
        "                        Minimum Python version to use for version dependent",
        "                        checks. Will default to the version used to run",
        "                        pylint. (default: (3, 10))",
        "  --ignored-modules <module names>",
        "                        List of module names for which member attributes",
        "                        should not be checked (useful for modules/projects",
        "                        where namespaces are manipulated during runtime and",
        "                        thus existing member attributes cannot be deduced by",
        "                        static analysis). It supports qualified module names,",
        "                        as well as Unix pattern matching. (default: ())",
        "  --analyse-fallback-blocks <y or n>",
        "                        Analyse import fallback blocks. This can be used to",
        "                        support both Python 2 and 3 compatible code, which",
        "                        means that the block might have code that exists only",
        "                        in one or another interpreter, leading to false",
        "                        positives when analysed. (default: False)",
        "",
        "Reports:",
        "  Options related to output formatting and reporting",
        "",
        "  --output-format <format>, -f <format>",
        "                        Set the output format. Available formats are text,",
        "                        parseable, colorized, json and msvs (visual studio).",
        "                        You can also give a reporter class, e.g.",
        "                        mypackage.mymodule.MyReporterClass.",
        "  --reports <y or n>, -r <y or n>",
        "                        Tells whether to display a full report or only the",
        "                        messages. (default: False)",
        "  --evaluation <python_expression>",
        "                        Python expression which should return a score less",
        "                        than or equal to 10. You have access to the variables",
        "                        'fatal', 'error', 'warning', 'refactor', 'convention',",
        "                        and 'info' which contain the number of messages in",
        "                        each category, as well as 'statement' which is the",
        "                        total number of statements analyzed. This score is",
        "                        used by the global evaluation report (RP0004).",
        "                        (default: max(0, 0 if fatal else 10.0 - ((float(5 *",
        "                        error + warning + refactor + convention) / statement)",
        "                        * 10)))",
        "  --score <y or n>, -s <y or n>",
        "                        Activate the evaluation score. (default: True)",
        "  --msg-template <template>",
        "                        Template used to display messages. This is a python",
        "                        new-style format string used to format the message",
        "                        information. See doc for all details. (default: )",
        "",
        "Messages control:",
        "  Options controlling analysis messages",
        "",
        "  --confidence <levels>",
        "                        Only show warnings with the listed confidence levels.",
        "                        Leave empty to show all. Valid levels: HIGH,",
        "                        CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE, UNDEFINED.",
        "                        (default: ['HIGH', 'CONTROL_FLOW', 'INFERENCE',",
        "                        'INFERENCE_FAILURE', 'UNDEFINED'])",
        "  --enable <msg ids>, -e <msg ids>",
        "                        Enable the message, report, category or checker with",
        "                        the given id(s). You can either give multiple",
        "                        identifier separated by comma (,) or put this option",
        "                        multiple time (only on the command line, not in the",
        "                        configuration file where it should appear only once).",
        "                        See also the \"--disable\" option for examples.",
        "  --disable <msg ids>, -d <msg ids>",
        "                        Disable the message, report, category or checker with",
        "                        the given id(s). You can either give multiple",
        "                        identifiers separated by comma (,) or put this option",
        "                        multiple times (only on the command line, not in the",
        "                        configuration file where it should appear only once).",
        "                        You can also use \"--disable=all\" to disable everything",
        "                        first and then re-enable specific checks. For example,",
        "                        if you want to run only the similarities checker, you",
        "                        can use \"--disable=all --enable=similarities\". If you",
        "                        want to run only the classes checker, but have no",
        "                        Warning level messages displayed, use \"--disable=all",
        "                        --enable=classes --disable=W\".",
        "",
        "Logging:",
        "  Checks use of the logging module.",
        "",
        "  --logging-modules <comma separated list>",
        "                        Logging modules to check that the string format",
        "                        arguments are in logging function parameter format.",
        "                        (default: ('logging',))",
        "  --logging-format-style <old (%) or new ({)>",
        "                        The type of string formatting that logging methods do.",
        "                        `old` means using % formatting, `new` is for `{}`",
        "                        formatting. (default: old)",
        "",
        "Similarities:",
        "  Checks for similarities and duplicated code.",
        "",
        "  --min-similarity-lines <int>",
        "                        Minimum lines number of a similarity. (default: 4)",
        "  --ignore-comments <y or n>",
        "                        Comments are removed from the similarity computation",
        "                        (default: True)",
        "  --ignore-docstrings <y or n>",
        "                        Docstrings are removed from the similarity computation",
        "                        (default: True)",
        "  --ignore-imports <y or n>",
        "                        Imports are removed from the similarity computation",
        "                        (default: True)",
        "  --ignore-signatures <y or n>",
        "                        Signatures are removed from the similarity computation",
        "                        (default: True)",
        "",
        "Miscellaneous:",
        "  BaseChecker for encoding issues.",
        "",
        "  --notes <comma separated values>",
        "                        List of note tags to take in consideration, separated",
        "                        by a comma. (default: ('FIXME', 'XXX', 'TODO'))",
        "  --notes-rgx <regexp>  Regular expression of note tags to take in",
        "                        consideration. (default: )",
        "",
        "Design:",
        "  Checker of potential misdesigns.",
        "",
        "  --max-args <int>      Maximum number of arguments for function / method.",
        "                        (default: 5)",
        "  --max-locals <int>    Maximum number of locals for function / method body.",
        "                        (default: 15)",
        "  --max-returns <int>   Maximum number of return / yield for function / method",
        "                        body. (default: 6)",
        "  --max-branches <int>  Maximum number of branch for function / method body.",
        "                        (default: 12)",
        "  --max-statements <int>",
        "                        Maximum number of statements in function / method",
        "                        body. (default: 50)",
        "  --max-parents <num>   Maximum number of parents for a class (see R0901).",
        "                        (default: 7)",
        "  --ignored-parents <comma separated list of class names>",
        "                        List of qualified class names to ignore when counting",
        "                        class parents (see R0901) (default: ())",
        "  --max-attributes <num>",
        "                        Maximum number of attributes for a class (see R0902).",
        "                        (default: 7)",
        "  --min-public-methods <num>",
        "                        Minimum number of public methods for a class (see",
        "                        R0903). (default: 2)",
        "  --max-public-methods <num>",
        "                        Maximum number of public methods for a class (see",
        "                        R0904). (default: 20)",
        "  --max-bool-expr <num>",
        "                        Maximum number of boolean expressions in an if",
        "                        statement (see R0916). (default: 5)",
        "  --exclude-too-few-public-methods <pattern>[,<pattern>...]",
        "                        List of regular expressions of class ancestor names to",
        "                        ignore when counting public methods (see R0903)",
        "                        (default: [])",
        "",
        "Format:",
        "  Formatting checker.",
        "",
        "  --max-line-length <int>",
        "                        Maximum number of characters on a single line.",
        "                        (default: 100)",
        "  --ignore-long-lines <regexp>",
        "                        Regexp for a line that is allowed to be longer than",
        "                        the limit. (default: ^\\s*(# )?<?https?://\\S+>?$)",
        "  --single-line-if-stmt <y or n>",
        "                        Allow the body of an if to be on the same line as the",
        "                        test if there is no else. (default: False)",
        "  --single-line-class-stmt <y or n>",
        "                        Allow the body of a class to be on the same line as",
        "                        the declaration if body contains single statement.",
        "                        (default: False)",
        "  --max-module-lines <int>",
        "                        Maximum number of lines in a module. (default: 1000)",
        "  --indent-string <string>",
        "                        String used as indentation unit. This is usually \" \"",
        "                        (4 spaces) or \"  \" (1 tab). (default: )",
        "  --indent-after-paren <int>",
        "                        Number of spaces of indent required inside a hanging",
        "                        or continued line. (default: 4)",
        "  --expected-line-ending-format <empty or LF or CRLF>",
        "                        Expected format of line ending, e.g. empty (any line",
        "                        ending), LF or CRLF. (default: )",
        "",
        "Variables:",
        "  BaseChecker for variables.",
        "",
        "  --init-import <y or n>",
        "                        Tells whether we should check for unused import in",
        "                        __init__ files. (default: False)",
        "  --dummy-variables-rgx <regexp>",
        "                        A regular expression matching the name of dummy",
        "                        variables (i.e. expected to not be used). (default: _+",
        "                        $|(_[a-zA-Z0-9_]*[a-zA-Z0-",
        "                        9]+?$)|dummy|^ignored_|^unused_)",
        "  --additional-builtins <comma separated list>",
        "                        List of additional names supposed to be defined in",
        "                        builtins. Remember that you should avoid defining new",
        "                        builtins when possible. (default: ())",
        "  --callbacks <callbacks>",
        "                        List of strings which can identify a callback function",
        "                        by name. A callback name must start or end with one of",
        "                        those strings. (default: ('cb_', '_cb'))",
        "  --redefining-builtins-modules <comma separated list>",
        "                        List of qualified module names which can have objects",
        "                        that can redefine builtins. (default: ('six.moves',",
        "                        'past.builtins', 'future.builtins', 'builtins', 'io'))",
        "  --ignored-argument-names <regexp>",
        "                        Argument names that match this expression will be",
        "                        ignored. Default to name with leading underscore.",
        "                        (default: re.compile('_.*|^ignored_|^unused_'))",
        "  --allow-global-unused-variables <y or n>",
        "                        Tells whether unused global variables should be",
        "                        treated as a violation. (default: True)",
        "  --allowed-redefined-builtins <comma separated list>",
        "                        List of names allowed to shadow builtins (default: ())",
        "",
        "Basic:",
        "  --good-names <names>  Good variable names which should always be accepted,",
        "                        separated by a comma. (default: ('i', 'j', 'k', 'ex',",
        "                        'Run', '_'))",
        "  --good-names-rgxs <names>",
        "                        Good variable names regexes, separated by a comma. If",
        "                        names match any regex, they will always be accepted",
        "                        (default: )",
        "  --bad-names <names>   Bad variable names which should always be refused,",
        "                        separated by a comma. (default: ('foo', 'bar', 'baz',",
        "                        'toto', 'tutu', 'tata'))",
        "  --bad-names-rgxs <names>",
        "                        Bad variable names regexes, separated by a comma. If",
        "                        names match any regex, they will always be refused",
        "                        (default: )",
        "  --name-group <name1:name2>",
        "                        Colon-delimited sets of names that determine each",
        "                        other's naming style when the name regexes allow",
        "                        several styles. (default: ())",
        "  --include-naming-hint <y or n>",
        "                        Include a hint for the correct naming format with",
        "                        invalid-name. (default: False)",
        "  --property-classes <decorator names>",
        "                        List of decorators that produce properties, such as",
        "                        abc.abstractproperty. Add to this list to register",
        "                        other decorators that produce valid properties. These",
        "                        decorators are taken in consideration only for",
        "                        invalid-name. (default: ('abc.abstractproperty',))",
        "  --argument-naming-style <style>",
        "                        Naming style matching correct argument names.",
        "                        (default: snake_case)",
        "  --argument-rgx <regexp>",
        "                        Regular expression matching correct argument names.",
        "                        Overrides argument-naming-style. If left empty,",
        "                        argument names will be checked with the set naming",
        "                        style. (default: None)",
        "  --attr-naming-style <style>",
        "                        Naming style matching correct attribute names.",
        "                        (default: snake_case)",
        "  --attr-rgx <regexp>   Regular expression matching correct attribute names.",
        "                        Overrides attr-naming-style. If left empty, attribute",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --class-naming-style <style>",
        "                        Naming style matching correct class names. (default:",
        "                        PascalCase)",
        "  --class-rgx <regexp>  Regular expression matching correct class names.",
        "                        Overrides class-naming-style. If left empty, class",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --class-attribute-naming-style <style>",
        "                        Naming style matching correct class attribute names.",
        "                        (default: any)",
        "  --class-attribute-rgx <regexp>",
        "                        Regular expression matching correct class attribute",
        "                        names. Overrides class-attribute-naming-style. If left",
        "                        empty, class attribute names will be checked with the",
        "                        set naming style. (default: None)",
        "  --class-const-naming-style <style>",
        "                        Naming style matching correct class constant names.",
        "                        (default: UPPER_CASE)",
        "  --class-const-rgx <regexp>",
        "                        Regular expression matching correct class constant",
        "                        names. Overrides class-const-naming-style. If left",
        "                        empty, class constant names will be checked with the",
        "                        set naming style. (default: None)",
        "  --const-naming-style <style>",
        "                        Naming style matching correct constant names.",
        "                        (default: UPPER_CASE)",
        "  --const-rgx <regexp>  Regular expression matching correct constant names.",
        "                        Overrides const-naming-style. If left empty, constant",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --function-naming-style <style>",
        "                        Naming style matching correct function names.",
        "                        (default: snake_case)",
        "  --function-rgx <regexp>",
        "                        Regular expression matching correct function names.",
        "                        Overrides function-naming-style. If left empty,",
        "                        function names will be checked with the set naming",
        "                        style. (default: None)",
        "  --inlinevar-naming-style <style>",
        "                        Naming style matching correct inline iteration names.",
        "                        (default: any)",
        "  --inlinevar-rgx <regexp>",
        "                        Regular expression matching correct inline iteration",
        "                        names. Overrides inlinevar-naming-style. If left",
        "                        empty, inline iteration names will be checked with the",
        "                        set naming style. (default: None)",
        "  --method-naming-style <style>",
        "                        Naming style matching correct method names. (default:",
        "                        snake_case)",
        "  --method-rgx <regexp>",
        "                        Regular expression matching correct method names.",
        "                        Overrides method-naming-style. If left empty, method",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --module-naming-style <style>",
        "                        Naming style matching correct module names. (default:",
        "                        snake_case)",
        "  --module-rgx <regexp>",
        "                        Regular expression matching correct module names.",
        "                        Overrides module-naming-style. If left empty, module",
        "                        names will be checked with the set naming style.",
        "                        (default: None)",
        "  --typevar-rgx <regexp>",
        "                        Regular expression matching correct type variable",
        "                        names. If left empty, type variable names will be",
        "                        checked with the set naming style. (default: None)",
        "  --variable-naming-style <style>",
        "                        Naming style matching correct variable names.",
        "                        (default: snake_case)",
        "  --variable-rgx <regexp>",
        "                        Regular expression matching correct variable names.",
        "                        Overrides variable-naming-style. If left empty,",
        "                        variable names will be checked with the set naming",
        "                        style. (default: None)",
        "  --no-docstring-rgx <regexp>",
        "                        Regular expression which should only match function or",
        "                        class names that do not require a docstring. (default:",
        "                        re.compile('^_'))",
        "  --docstring-min-length <int>",
        "                        Minimum line length for functions/classes that require",
        "                        docstrings, shorter ones are exempt. (default: -1)",
        "",
        "Imports:",
        "  BaseChecker for import statements.",
        "",
        "  --deprecated-modules <modules>",
        "                        Deprecated modules which should not be used, separated",
        "                        by a comma. (default: ())",
        "  --preferred-modules <module:preferred-module>",
        "                        Couples of modules and preferred modules, separated by",
        "                        a comma. (default: ())",
        "  --import-graph <file.gv>",
        "                        Output a graph (.gv or any supported image format) of",
        "                        all (i.e. internal and external) dependencies to the",
        "                        given file (report RP0402 must not be disabled).",
        "                        (default: )",
        "  --ext-import-graph <file.gv>",
        "                        Output a graph (.gv or any supported image format) of",
        "                        external dependencies to the given file (report RP0402",
        "                        must not be disabled). (default: )",
        "  --int-import-graph <file.gv>",
        "                        Output a graph (.gv or any supported image format) of",
        "                        internal dependencies to the given file (report RP0402",
        "                        must not be disabled). (default: )",
        "  --known-standard-library <modules>",
        "                        Force import order to recognize a module as part of",
        "                        the standard compatibility libraries. (default: ())",
        "  --known-third-party <modules>",
        "                        Force import order to recognize a module as part of a",
        "                        third party library. (default: ('enchant',))",
        "  --allow-any-import-level <modules>",
        "                        List of modules that can be imported at any level, not",
        "                        just the top level one. (default: ())",
        "  --allow-wildcard-with-all <y or n>",
        "                        Allow wildcard imports from modules that define",
        "                        __all__. (default: False)",
        "",
        "Classes:",
        "  Checker for class nodes.",
        "",
        "  --defining-attr-methods <method names>",
        "                        List of method names used to declare (i.e. assign)",
        "                        instance attributes. (default: ('__init__', '__new__',",
        "                        'setUp', '__post_init__'))",
        "  --valid-classmethod-first-arg <argument names>",
        "                        List of valid names for the first argument in a class",
        "                        method. (default: ('cls',))",
        "  --valid-metaclass-classmethod-first-arg <argument names>",
        "                        List of valid names for the first argument in a",
        "                        metaclass class method. (default: ('cls',))",
        "  --exclude-protected <protected access exclusions>",
        "                        List of member names, which should be excluded from",
        "                        the protected access warning. (default: ('_asdict',",
        "                        '_fields', '_replace', '_source', '_make'))",
        "  --check-protected-access-in-special-methods <y or n>",
        "                        Warn about protected attribute access inside special",
        "                        methods (default: False)",
        "",
        "Exceptions:",
        "  Exception related checks.",
        "",
        "  --overgeneral-exceptions <comma-separated class names>",
        "                        Exceptions that will emit a warning when caught.",
        "                        (default: ('BaseException', 'Exception'))",
        "",
        "Spelling:",
        "  Check spelling in comments and docstrings.",
        "",
        "  --spelling-dict <dict name>",
        "                        Spelling dictionary name. Available dictionaries:",
        "                        none. To make it work, install the 'python-enchant'",
        "                        package. (default: )",
        "  --spelling-ignore-words <comma separated words>",
        "                        List of comma separated words that should not be",
        "                        checked. (default: )",
        "  --spelling-private-dict-file <path to file>",
        "                        A path to a file that contains the private dictionary;",
        "                        one word per line. (default: )",
        "  --spelling-store-unknown-words <y or n>",
        "                        Tells whether to store unknown words to the private",
        "                        dictionary (see the --spelling-private-dict-file",
        "                        option) instead of raising a message. (default: n)",
        "  --max-spelling-suggestions N",
        "                        Limits count of emitted suggestions for spelling",
        "                        mistakes. (default: 4)",
        "  --spelling-ignore-comment-directives <comma separated words>",
        "                        List of comma separated words that should be",
        "                        considered directives if they appear at the beginning",
        "                        of a comment and should not be checked. (default: fmt:",
        "                        on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:)",
        "",
        "Typecheck:",
        "  Try to find bugs in the code using type inference.",
        "",
        "  --ignore-on-opaque-inference <y or n>",
        "                        This flag controls whether pylint should warn about",
        "                        no-member and similar checks whenever an opaque object",
        "                        is returned when inferring. The inference can return",
        "                        multiple potential results while evaluating a Python",
        "                        object, but some branches might not be evaluated,",
        "                        which results in partial inference. In that case, it",
        "                        might be useful to still emit no-member and other",
        "                        checks for the rest of the inferred objects. (default:",
        "                        True)",
        "  --mixin-class-rgx <regexp>",
        "                        Regex pattern to define which classes are considered",
        "                        mixins. (default: .*[Mm]ixin)",
        "  --ignore-mixin-members <y or n>",
        "                        Tells whether missing members accessed in mixin class",
        "                        should be ignored. A class is considered mixin if its",
        "                        name matches the mixin-class-rgx option. (default:",
        "                        True)",
        "  --ignored-checks-for-mixins <list of messages names>",
        "                        List of symbolic message names to ignore for Mixin",
        "                        members. (default: ['no-member', 'not-async-context-",
        "                        manager', 'not-context-manager', 'attribute-defined-",
        "                        outside-init'])",
        "  --ignore-none <y or n>",
        "                        Tells whether to warn about missing members when the",
        "                        owner of the attribute is inferred to be None.",
        "                        (default: True)",
        "  --ignored-classes <members names>",
        "                        List of class names for which member attributes should",
        "                        not be checked (useful for classes with dynamically",
        "                        set attributes). This supports the use of qualified",
        "                        names. (default: ('optparse.Values', 'thread._local',",
        "                        '_thread._local', 'argparse.Namespace'))",
        "  --generated-members <members names>",
        "                        List of members which are set dynamically and missed",
        "                        by pylint inference system, and so shouldn't trigger",
        "                        E1101 when accessed. Python regular expressions are",
        "                        accepted. (default: ())",
        "  --contextmanager-decorators <decorator names>",
        "                        List of decorators that produce context managers, such",
        "                        as contextlib.contextmanager. Add to this list to",
        "                        register other decorators that produce valid context",
        "                        managers. (default: ['contextlib.contextmanager'])",
        "  --missing-member-hint-distance <member hint edit distance>",
        "                        The minimum edit distance a name should have in order",
        "                        to be considered a similar match for a missing member",
        "                        name. (default: 1)",
        "  --missing-member-max-choices <member hint max choices>",
        "                        The total number of similar names that should be taken",
        "                        in consideration when showing a hint for a missing",
        "                        member. (default: 1)",
        "  --missing-member-hint <missing member hint>",
        "                        Show a hint with possible names when a member name was",
        "                        not found. The aspect of finding the hint is based on",
        "                        edit distance. (default: True)",
        "  --signature-mutators <decorator names>",
        "                        List of decorators that change the signature of a",
        "                        decorated function. (default: [])",
        "",
        "Refactoring:",
        "  Looks for code which can be refactored.",
        "",
        "  --max-nested-blocks <int>",
        "                        Maximum number of nested blocks for function / method",
        "                        body (default: 5)",
        "  --never-returning-functions <members names>",
        "                        Complete name of functions that never returns. When",
        "                        checking for inconsistent-return-statements if a never",
        "                        returning function is called then it will be",
        "                        considered as an explicit return statement and no",
        "                        message will be printed. (default: ('sys.exit',",
        "                        'argparse.parse_error'))",
        "",
        "String:",
        "  Check string literals.",
        "",
        "  --check-str-concat-over-line-jumps <y or n>",
        "                        This flag controls whether the implicit-str-concat",
        "                        should generate a warning on implicit string",
        "                        concatenation in sequences defined over several lines.",
        "                        (default: False)",
        "  --check-quote-consistency <y or n>",
        "                        This flag controls whether inconsistent-quotes",
        "                        generates a warning when the character used as a quote",
        "                        delimiter is used inconsistently within a module.",
        "                        (default: False)"
    ],
    "raku": [
        "/opt/rakudo-pkg/share/perl6/runtime/perl6.moarvm [switches] [--] [programfile] [arguments]",
        "",
        "With no arguments, enters a REPL (see --repl-mode option).",
        "With a \"[programfile]\" or the \"-e\" option, compiles the given program",
        "and, by default, also executes the compiled code.",
        "",
        "  -                    read program source from STDIN or start REPL if a TTY",
        "  -c                   check syntax only (runs BEGIN and CHECK blocks)",
        "  --doc                extract documentation and print it as text",
        "  -e program           one line of program, strict is enabled by default",
        "  -h, --help           display this help text",
        "  -n                   run program once for each line of input",
        "  -p                   same as -n, but also print $_ at the end of lines",
        "  -I path              adds the path to the module search path",
        "  -M module            loads the module prior to running the program",
        "  --target=stage       specify compilation stage to emit",
        "  --optimize=level     use the given level of optimization (0..3)",
        "  --rakudo-home=path   Override the path of the Rakudo runtime files",
        "  -o, --output=name    specify name of output file",
        "  -v, --version        display version information",
        "  -V                   print configuration summary",
        "  --stagestats         display time spent in the compilation stages",
        "  --ll-exception       display a low level backtrace on errors",
        "  --doc=module         use Pod::To::[module] to render inline documentation",
        "  --repl-mode=interactive|non-interactive",
        "                       when running without \"-e\" or filename arguments,",
        "                       a REPL is started. By default, if STDIN is a TTY,",
        "                       \"interactive\" REPL is started that shows extra messages and",
        "                       prompts, otherwise a \"non-interactive\" mode is used where",
        "                       STDIN is read entirely and evaluated as if it were a program,",
        "                       without any extra output (in fact, no REPL machinery is even",
        "                       loaded). This option allows to bypass TTY detection and",
        "                       force one of the REPL modes.",
        "  --profile[=name]     write profile information to a file",
        "                       Extension controls format:",
        "                           .json outputs in JSON",
        "                           .sql  outputs in SQL",
        "                           any other extension outputs in HTML",
        "  --profile-compile[=name]",
        "                       write compile-time profile information to a file",
        "                       Extension controls format:",
        "                         .json outputs in JSON",
        "                         .sql  outputs in SQL",
        "                         any other extension outputs in HTML",
        "  --profile-kind[=name]",
        "                       choose the type of profile to generate",
        "                         instrumented - performance measurements (default)",
        "                         heap - record heap snapshots after every garbage",
        "                         collector run",
        "  --profile-filename=name",
        "                       provide a different filename for profile.",
        "                       Extension controls format:",
        "                         .json outputs in JSON",
        "                         .sql  outputs in SQL",
        "                         any other extension outputs in HTML",
        "                       This option will go away in a future Rakudo release",
        "  --profile-stage=stage",
        "                       write profile information for the given compilation",
        "                       stage to a file. Use --profile-compile to set name",
        "                       and format",
        "  --full-cleanup       try to free all memory and exit cleanly",
        "  --debug-port=port    listen for incoming debugger connections",
        "  --debug-suspend      pause execution at the entry point",
        "  --tracing            output a line to stderr on every interpreter instr (only if",
        "                       enabled in MoarVM)",
        "",
        "Note that only boolean single-letter options may be bundled.",
        "",
        "The following environment variables are respected:",
        "",
        "  RAKULIB     Modify the module search path",
        "  PERL6LIB    Modify the module search path # to be deprecated",
        "  RAKUDO_HOME Override the path of the Rakudo runtime files",
        "  NQP_HOME    Override the path of the NQP runtime files",
        "",
        ""
    ],
    "remark-lint": [
        "Usage: remark [options] [path | glob ...]",
        "",
        "  Command line interface to inspect and change markdown files with remark",
        "",
        "Options:",
        "",
        "  -h  --help                              output usage information",
        "  -v  --version                           output version number",
        "  -o  --output [path]                     specify output location",
        "  -r  --rc-path <path>                    specify configuration file",
        "  -i  --ignore-path <path>                specify ignore file",
        "  -s  --setting <settings>                specify settings",
        "  -e  --ext <extensions>                  specify extensions",
        "  -u  --use <plugins>                     use plugins",
        "  -w  --watch                             watch for changes and reprocess",
        "  -q  --quiet                             output only warnings and errors",
        "  -S  --silent                            output only errors",
        "  -f  --frail                             exit with 1 on warnings",
        "  -t  --tree                              specify input and output as syntax tree",
        "      --report <reporter>                 specify reporter",
        "      --file-path <path>                  specify path to process as",
        "      --ignore-path-resolve-from dir|cwd  resolve patterns in `ignore-path` from its directory or cwd",
        "      --ignore-pattern <globs>            specify ignore patterns",
        "      --silently-ignore                   do not fail when given ignored files",
        "      --tree-in                           specify input as syntax tree",
        "      --tree-out                          output syntax tree",
        "      --inspect                           output formatted syntax tree",
        "      --[no-]stdout                       specify writing to stdout (on by default)",
        "      --[no-]color                        specify color in report (on by default)",
        "      --[no-]config                       search for configuration files (on by default)",
        "      --[no-]ignore                       search for ignore files (on by default)",
        "",
        "Examples:",
        "",
        "  # Process `input.md`",
        "  $ remark input.md -o output.md",
        "",
        "  # Pipe",
        "  $ remark < input.md > output.md",
        "",
        "  # Rewrite all applicable files",
        "  $ remark . -o"
    ],
    "revive": [
        "",
        " _ __ _____   _(_)__  _____",
        "| '__/ _ \\ \\ / / \\ \\ / / _ \\",
        "| | |  __/\\ V /| |\\ V /  __/",
        "|_|  \\___| \\_/ |_| \\_/ \\___|",
        "",
        "Example:",
        "  revive -config c.toml -formatter friendly -exclude a.go -exclude b.go ./...",
        "",
        "Usage of revive:",
        "  -config string",
        "      path to the configuration TOML file, defaults to $HOME/revive.toml, if present (i.e. -config myconf.toml)",
        "  -exclude value",
        "      list of globs which specify files to be excluded (i.e. -exclude foo/...)",
        "  -formatter string",
        "      formatter to be used for the output (i.e. -formatter stylish)",
        "  -max_open_files int",
        "      maximum number of open files at the same time",
        "  -set_exit_status",
        "      set exit status to 1 if any issues are found, overwrites errorCode and warningCode in config",
        "  -version",
        "      get revive version"
    ],
    "rst-lint": [
        "usage: rst-lint [-h] [--version] [--format {text,json}] [--encoding ENCODING]",
        "                [--level {debug,info,warning,error,severe}]",
        "                [--rst-prolog RST_PROLOG]",
        "                path [path ...]",
        "",
        "Lint reStructuredText files. Returns 0 if all files pass linting, 1 for an",
        "internal error, and 2 if linting failed.",
        "",
        "positional arguments:",
        "  path                  File/folder to lint",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  --version             show program's version number and exit",
        "  --format {text,json}  Format of the output (default: \"text\")",
        "  --encoding ENCODING   Encoding of the input file (e.g. \"utf-8\")",
        "  --level {debug,info,warning,error,severe}",
        "                        Minimum error level to report (default: \"warning\")",
        "  --rst-prolog RST_PROLOG",
        "                        reStructuredText content to prepend to all files",
        "                        (useful for substitutions)"
    ],
    "rstcheck": [
        "Usage: rstcheck [OPTIONS] FILES...",
        "",
        "  CLI of rstcheck.",
        "",
        "  Enabled features: ['Toml']",
        "",
        "  Pass one ore more rst FILES to check. Can be files or directories if",
        "  --recursive is passed too. Pass \"-\" if you want to read from stdin.",
        "",
        "Options:",
        "  --config PATH                Config file to load. Can be a INI or TOML file",
        "                               or directory. If a directory is passed it will",
        "                               be searched for .rstcheck.cfg | pyproject.toml",
        "                               | setup.cfg. If 'NONE' is passed no config file",
        "                               is loaded at all.",
        "  --warn-unknown-settings      Log a WARNING for unknown settings in config",
        "                               files. Can be hidden via --log-level.",
        "  -r, --recursive              Recursively search passed directories for RST",
        "                               files to check.",
        "  --report-level LEVEL         The report level of the linting issues found.",
        "                               Valid levels are: INFO | WARNING | ERROR |",
        "                               SEVERE | NONE. Defaults to INFO. Can be set in",
        "                               config file.",
        "  --log-level LEVEL            The log level of the application for",
        "                               information that is not a linting issue. Valid",
        "                               levels are: DEBUG | INFO | WARNING | ERROR |",
        "                               CRITICAL. Defaults to WARNING.  [default:",
        "                               WARNING]",
        "  --ignore-directives TEXT     Comma-separated-list of directives to add to",
        "                               the ignore list. Can be set in config file.",
        "  --ignore-roles TEXT          Comma-separated-list of roles to add to the",
        "                               ignore list. Can be set in config file.",
        "  --ignore-substitutions TEXT  Comma-separated-list of substitutions to add to",
        "                               the ignore list. Can be set in config file.",
        "  --ignore-languages TEXT      Comma-separated-list of languages for code-",
        "                               blocks to add to the ignore list. The code in",
        "                               ignored code-blocks will not be checked for",
        "                               errors. Can be set in config file.",
        "  --ignore-messages REGEX      A regular expression to match linting issue",
        "                               messages against to ignore. Can be set in",
        "                               config file.",
        "  --version",
        "  --install-completion         Install completion for the current shell.",
        "  --show-completion            Show completion for the current shell, to copy",
        "                               it or customize the installation.",
        "  --help                       Show this message and exit."
    ],
    "rstfmt": [
        "usage: rstfmt [-h] [--version] [--check] [-w WIDTH] [--ext EXT] [--test] [-v]",
        "              [path ...]",
        "",
        "positional arguments:",
        "  path                  files/directories to run on",
        "",
        "optional arguments:",
        "  -h, --help            show this help message and exit",
        "  --version             show rstfmt version and exit",
        "  --check               don't update files, but exit with nonzero status if",
        "                        any files are not formatted",
        "  -w WIDTH, --width WIDTH",
        "                        the target line length in characters",
        "  --ext EXT             the extension of files to look at when passed a",
        "                        directory (default `rst`)",
        "  --test                [internal] run tests instead of updating files",
        "  -v, --verbose         [internal] print extra debugging information"
    ],
    "rubocop": [
        "Usage: rubocop [options] [file1, file2, ...]",
        "",
        "Basic Options:",
        "    -l, --lint                       Run only lint cops.",
        "    -x, --fix-layout                 Run only layout cops, with autocorrect on.",
        "        --safe                       Run only safe cops.",
        "        --except [COP1,COP2,...]     Exclude the given cop(s).",
        "        --only [COP1,COP2,...]       Run only the given cop(s).",
        "        --only-guide-cops            Run only cops for rules that link to a",
        "                                     style guide.",
        "    -F, --fail-fast                  Inspect files in order of modification",
        "                                     time and stop after the first file",
        "                                     containing offenses.",
        "        --disable-pending-cops       Run without pending cops.",
        "        --enable-pending-cops        Run with pending cops.",
        "        --ignore-disable-comments    Run cops even when they are disabled locally",
        "                                     by a `rubocop:disable` directive.",
        "        --force-exclusion            Any files excluded by `Exclude` in configuration",
        "                                     files will be excluded, even if given explicitly",
        "                                     as arguments.",
        "        --only-recognized-file-types Inspect files given on the command line only if",
        "                                     they are listed in `AllCops/Include` parameters",
        "                                     of user configuration or default configuration.",
        "        --ignore-parent-exclusion    Prevent from inheriting `AllCops/Exclude` from",
        "                                     parent folders.",
        "        --ignore-unrecognized-cops   Ignore unrecognized cops or departments in the config.",
        "        --force-default-config       Use default configuration even if configuration",
        "                                     files are present in the directory tree.",
        "    -s, --stdin FILE                 Pipe source from STDIN, using FILE in offense",
        "                                     reports. This is useful for editor integration.",
        "    -P, --[no-]parallel              Use available CPUs to execute inspection in",
        "                                     parallel. Default is true.",
        "        --fail-level SEVERITY        Minimum severity for exit with error code.",
        "                                       [A] autocorrect",
        "                                       [I] info",
        "                                       [R] refactor",
        "                                       [C] convention",
        "                                       [W] warning",
        "                                       [E] error",
        "                                       [F] fatal",
        "",
        "Caching:",
        "    -C, --cache FLAG                 Use result caching (FLAG=true) or don't",
        "                                     (FLAG=false), default determined by",
        "                                     configuration parameter AllCops: UseCache.",
        "        --cache-root DIR             Set the cache root directory.",
        "                                     Takes precedence over the configuration",
        "                                     parameter AllCops: CacheRootDirectory and",
        "                                     the $RUBOCOP_CACHE_ROOT environment variable.",
        "",
        "Server Options:",
        "        --[no-]server                If a server process has not been started yet, start",
        "                                     the server process and execute inspection with server.",
        "                                     Default is false.",
        "                                     You can specify the server host and port with the",
        "                                     $RUBOCOP_SERVER_HOST and the $RUBOCOP_SERVER_PORT",
        "                                     environment variables.",
        "        --restart-server             Restart server process.",
        "        --start-server               Start server process.",
        "        --stop-server                Stop server process.",
        "        --server-status              Show server status.",
        "",
        "Output Options:",
        "    -f, --format FORMATTER           Choose an output formatter. This option",
        "                                     can be specified multiple times to enable",
        "                                     multiple formatters at the same time.",
        "                                       [a]utogenconf",
        "                                       [c]lang",
        "                                       [e]macs",
        "                                       [fi]les",
        "                                       [fu]ubar",
        "                                       [g]ithub",
        "                                       [h]tml",
        "                                       [j]son",
        "                                       [ju]nit",
        "                                       [m]arkdown",
        "                                       [o]ffenses",
        "                                       [pa]cman",
        "                                       [p]rogress (default)",
        "                                       [q]uiet",
        "                                       [s]imple",
        "                                       [t]ap",
        "                                       [w]orst",
        "                                       custom formatter class name",
        "    -D, --[no-]display-cop-names     Display cop names in offense messages.",
        "                                     Default is true.",
        "    -E, --extra-details              Display extra details in offense messages.",
        "    -S, --display-style-guide        Display style guide URLs in offense messages.",
        "    -o, --out FILE                   Write output to a file instead of STDOUT.",
        "                                     This option applies to the previously",
        "                                     specified --format, or the default format",
        "                                     if no format is specified.",
        "        --stderr                     Write all output to stderr except for the",
        "                                     autocorrected source. This is especially useful",
        "                                     when combined with --autocorrect and --stdin.",
        "        --display-time               Display elapsed time in seconds.",
        "        --display-only-failed        Only output offense messages. Omit passing",
        "                                     cops. Only valid for --format junit.",
        "        --display-only-fail-level-offenses",
        "                                     Only output offense messages at",
        "                                     the specified --fail-level or above",
        "        --display-only-correctable   Only output correctable offense messages.",
        "        --display-only-safe-correctable",
        "                                     Only output safe-correctable offense messages",
        "                                     when combined with --display-only-correctable.",
        "",
        "Autocorrection:",
        "    -a, --autocorrect                Autocorrect offenses (only when it's safe).",
        "        --auto-correct               (same, deprecated)",
        "        --safe-auto-correct          (same, deprecated)",
        "    -A, --autocorrect-all            Autocorrect offenses (safe and unsafe).",
        "        --auto-correct-all           (same, deprecated)",
        "        --disable-uncorrectable      Used with --autocorrect to annotate any",
        "                                     offenses that do not support autocorrect",
        "                                     with `rubocop:todo` comments.",
        "",
        "Config Generation:",
        "        --auto-gen-config            Generate a configuration file acting as a",
        "                                     TODO list.",
        "        --regenerate-todo            Regenerate the TODO configuration file using",
        "                                     the last configuration. If there is no existing",
        "                                     TODO file, acts like --auto-gen-config.",
        "        --exclude-limit COUNT        Set the limit for how many files to explicitly exclude.",
        "                                     If there are more files than the limit, the cop will",
        "                                     be disabled instead. Default is 15.",
        "        --[no-]offense-counts        Include offense counts in configuration",
        "                                     file generated by --auto-gen-config.",
        "                                     Default is true.",
        "        --[no-]auto-gen-only-exclude Generate only Exclude parameters and not Max",
        "                                     when running --auto-gen-config, except if the",
        "                                     number of files with offenses is bigger than",
        "                                     exclude-limit. Default is false.",
        "        --[no-]auto-gen-timestamp    Include the date and time when the --auto-gen-config",
        "                                     was run in the file it generates. Default is true.",
        "",
        "Additional Modes:",
        "    -L, --list-target-files          List all files RuboCop will inspect.",
        "        --show-cops [COP1,COP2,...]  Shows the given cops, or all cops by",
        "                                     default, and their configurations for the",
        "                                     current directory.",
        "        --show-docs-url [COP1,COP2,...]",
        "                                     Display url to documentation for the given",
        "                                     cops, or base url by default.",
        "",
        "General Options:",
        "        --init                       Generate a .rubocop.yml file in the current directory.",
        "    -c, --config FILE                Specify configuration file.",
        "    -d, --debug                      Display debug info.",
        "    -r, --require FILE               Require Ruby file.",
        "        --[no-]color                 Force color output on or off.",
        "    -v, --version                    Display version.",
        "    -V, --verbose-version            Display verbose version."
    ],
    "scalafix": [
        "Scalafix 0.10.1",
        "Usage: scalafix [options] [<path> ...]",
        "",
        "Scalafix is a refactoring and linting tool. Scalafix supports both syntactic and",
        "semantic linter and rewrite rules. Syntactic rules can run on source code",
        "without compilation. Semantic rules can run on source code that has been",
        "compiled with the SemanticDB compiler plugin.",
        "",
        "Common options:",
        "",
        "  --rules | -r [String ...] (default: [])",
        "    Scalafix rules to run, for example ExplicitResultTypes. The syntax for rules is",
        "    documented in",
        "    https://scalacenter.github.io/scalafix/docs/users/configuration#rules",
        "",
        "  --files | -f [<path> ...] (default: [])",
        "    Files or directories (recursively visited) to fix.",
        "",
        "  --config <path> (default: null)",
        "    File path to a .scalafix.conf configuration file. Defaults to .scalafix.conf in",
        "    the current working directory, if any.",
        "",
        "  --check",
        "    Check that all files have been fixed with scalafix, exiting with non-zero code",
        "    on violations. Won't write to files.",
        "",
        "  --stdout",
        "    Print fixed output to stdout instead of writing in-place.",
        "",
        "  --diff",
        "    If set, only apply scalafix to added and edited files in git diff against the",
        "    master branch.",
        "",
        "  --diff-base String (default: null)",
        "    If set, only apply scalafix to added and edited files in git diff against a",
        "    provided branch, commit or tag.",
        "",
        "  --syntactic",
        "    Run only syntactic rules, ignore semantic rules even if they are explicitly",
        "    configured in .scalafix.conf or via --rules",
        "",
        "  --triggered",
        "    Overlay the default rules & rule settings in .scalafix.conf with the `triggered`",
        "    section",
        "",
        "  --verbose",
        "    Print out additional diagnostics while running scalafix.",
        "",
        "  --help | -h",
        "    Print out this help message and exit",
        "",
        "  --version | -v",
        "    Print out version number and exit",
        "",
        "Semantic options:",
        "",
        "  --classpath Classpath (default: \"<classpath>\")",
        "    Full classpath of the files to fix, required for semantic rules. The source",
        "    files that should be fixed must be compiled with semanticdb-scalac.",
        "    Dependencies are required by rules like ExplicitResultTypes, but the",
        "    dependencies do not need to be compiled with semanticdb-scalac.",
        "",
        "  --sourceroot <path> (default: null)",
        "    Absolute path passed to semanticdb with -P:semanticdb:sourceroot:<path>.",
        "    Relative filenames persisted in the Semantic DB are absolutized by the",
        "    sourceroot. Defaults to current working directory if not provided.",
        "",
        "  --semanticdb-targetroots [<path> ...] (default: [])",
        "    Absolute paths passed to semanticdb with -P:semanticdb:targetroot:<path>. Used",
        "    to locate semanticdb files. By default, Scalafix will try to locate",
        "    semanticdb files in the classpath",
        "",
        "  --auto-classpath",
        "    If set, automatically infer the --classpath flag by scanning for directories",
        "    with META-INF/semanticdb",
        "",
        "  --auto-classpath-roots [<path> ...] (default: [])",
        "    Additional directories to scan for --auto-classpath",
        "",
        "  --scalac-options [String ...] (default: [])",
        "    The scala compiler options used to compile this --classpath, for example",
        "    -Ywarn-unused-import",
        "",
        "  --scala-version ScalaVersion (default: \"2.13.8\")",
        "    The major or binary Scala version that the provided files are targeting, or the",
        "    full version that was used to compile them when a classpath is provided.",
        "",
        "Tab completions:",
        "",
        "  --bash",
        "    Print out bash tab completions. To install:",
        "    ```",
        "    # macOS, requires \"brew install bash-completion\"",
        "    scalafix --bash > /usr/local/etc/bash_completion.d/scalafix",
        "    # Linux",
        "    scalafix --bash > /etc/bash_completion.d/scalafix",
        "    ```",
        "",
        "  --zsh",
        "    Print out zsh tab completions. To install:",
        "    ```",
        "    scalafix --zsh > /usr/local/share/zsh/site-functions/_scalafix",
        "    unfunction _scalafix",
        "    autoload -U _scalafix",
        "    ```",
        "",
        "Less common options:",
        "",
        "  --exclude [<glob> ...] (default: [])",
        "    Unix-style glob for files to exclude from fixing. The glob syntax is defined by",
        "    `nio.FileSystem.getPathMatcher`.",
        "",
        "  --tool-classpath URLClassLoader (default: \"<classloader>\")",
        "    Additional classpath for compiling and classloading custom rules, as a set of",
        "    filesystem paths, separated by ':' on Unix or ';' on Windows.",
        "",
        "  --charset Charset (default: \"UTF-8\")",
        "    The encoding to use for reading/writing files",
        "",
        "  --no-sys-exit",
        "    If set, throw exception in the end instead of System.exit",
        "",
        "  --no-stale-semanticdb",
        "    Don't error on stale semanticdb files.",
        "",
        "  --settings ScalafixConfig (default: {})",
        "    Custom settings to override .scalafix.conf",
        "",
        "  --out-from String (default: null)",
        "    Write fixed output to custom location instead of in-place. Regex is passed as",
        "    first argument to file.replaceAll(--out-from, --out-to), requires --out-to.",
        "",
        "  --out-to String (default: null)",
        "    Companion of --out-from, string that is passed as second argument to",
        "    fileToFix.replaceAll(--out-from, --out-to)",
        "",
        "  --auto-suppress-linter-errors",
        "    Insert /* scalafix:ok */ suppressions instead of reporting linter errors.",
        "",
        "  --cwd <path> (default: \"/\")",
        "    The current working directory",
        ""
    ],
    "scss-lint": [
        "Usage: scss-lint [options] [scss-files]",
        "    -f, --format Formatter           Specify how to display lints",
        "    -r, --require path               Require Ruby file",
        "    -i, --include-linter linter,...  Specify which linters you want to run",
        "    -x, --exclude-linter linter,...  Specify which linters you don't want to run",
        "    -c, --config config-file         Specify which configuration file you want to use",
        "    -e, --exclude file,...           List of file names to exclude",
        "        --stdin-file-path file-path  Specify the path to assume for the file passed via STDIN",
        "    -o, --out path                   Write output to a file instead of STDOUT",
        "        --[no-]color                 Force output to be colorized",
        "        --show-formatters            Shows available formatters",
        "        --show-linters               Display available linters",
        "    -h, --help                       Display help documentation",
        "    -v, --version                    Display version",
        ""
    ],
    "secretlint": [
        "",
        "  Secretlint CLI that scan secret/credential data.",
        "",
        "  Usage",
        "    $ secretlint [file|glob*]",
        "",
        "  Note",
        "    supported glob syntax is based on microglob",
        "    https://github.com/micromatch/micromatch#matching-features",
        "",
        "  Options",
        "    --init             setup config file. Create .secretlintrc.json file from your package.json",
        "    --format           [String] formatter name. Default: \"stylish\". Available Formatter: checkstyle, compact, jslint-xml, json, junit, pretty-error, stylish, tap, unix, table.d, table",
        "    --output           [path:String] output file path that is written of reported result.",
        "    --no-color         disable ANSI-color of output.",
        "    --no-terminalLink  disable terminalLink of output.",
        "    --maskSecrets      enable masking of secret values. replace actual secrets with \"***\".",
        "    --secretlintrc     [path:String] path to .secretlintrc config file. Default: .secretlintrc.*",
        "    --secretlintignore [path:String] path to .secretlintignore file. Default: .secretlintignore",
        "",
        "  Options for Developer",
        "    --profile          Enable performance profile.",
        "    --secretlintrcJSON [String] a JSON string of .secretlintrc. use JSON string instead of rc file.",
        "",
        "  Experimental Options",
        "    --locale            [String] locale tag for translating message. Default: en",
        "",
        "  Examples",
        "    $ secretlint ./README.md",
        "    # glob pattern should be wrapped with double quote",
        "    $ secretlint \"**/*\"",
        "    $ secretlint \"source/**/*.ini\"",
        ""
    ],
    "semgrep": [
        "Usage: semgrep [OPTIONS] COMMAND [ARGS]...",
        "",
        "  To get started quickly, run `semgrep scan --config auto`",
        "",
        "Options:",
        "  -h, --help  Show this message and exit.",
        "",
        "Commands:",
        "  ci            The recommended way to run semgrep in CI",
        "  login         Obtain and save credentials for semgrep.dev",
        "  logout        Remove locally stored credentials to semgrep.dev",
        "  lsp           [EXPERIMENTAL] Start the Semgrep LSP server.",
        "  publish       Upload rule to semgrep.dev",
        "  scan          Run semgrep rules on files",
        "  shouldafound  Report a false negative in this project."
    ],
    "sfdx-scanner": [
        "evaluate a selection of rules against a codebase",
        "",
        "USAGE",
        "  $ sfdx scanner:run -t <array> [-c <array>] [-r <array>] [-e <array>] [-f",
        "  csv|html|json|junit|sarif|table|xml] [-o <string>] [--tsconfig <string>]",
        "  [--eslintconfig <string>] [--pmdconfig <string>] [--env <string>] [-v |",
        "  --json] [--verbose] [--loglevel",
        "  trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]",
        "",
        "OPTIONS",
        "  -c, --category=category",
        "      categor(ies) of rules to run",
        "",
        "  -e, --engine=engine",
        "      engine(s) to run",
        "",
        "  -f, --format=(csv|html|json|junit|sarif|table|xml)",
        "      format of results",
        "",
        "  -o, --outfile=outfile",
        "      location of output file",
        "",
        "  -r, --ruleset=ruleset",
        "      [deprecated] ruleset(s) of rules to run",
        "",
        "  -t, --target=target",
        "      (required) location of source code",
        "",
        "  -v, --violations-cause-error",
        "      throws an error when violations are detected",
        "",
        "  --env=env",
        "      JSON-formatted string, overrides ESLint's default environment variables",
        "",
        "  --eslintconfig=eslintconfig",
        "      location of eslintrc config to customize eslint engine",
        "",
        "  --json",
        "      format output as json",
        "",
        "  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA",
        "  L)",
        "      [default: warn] logging level for this command invocation",
        "",
        "  --pmdconfig=pmdconfig",
        "      location of PMD rule reference XML file to customize rule selection",
        "",
        "  --tsconfig=tsconfig",
        "      location of tsconfig.json file",
        "",
        "  --verbose",
        "      emit additional command output to stdout",
        "",
        "EXAMPLE",
        "  Invoking without specifying any rules causes all rules to be run.",
        "    E.g., $ sfdx scanner:run --format xml --target \"somefile.js\"",
        "      Evaluates all rules against somefile.js.",
        "",
        "    Specifying multiple categories is treated as a logical OR.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category",
        "  \"Design,Best Practices\"",
        "        Evaluates all rules in the Design or Best Practices categories.",
        "",
        "    Categories can be excluded by specifying the negation operator, the values",
        "  must be enclosed in single quotes.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category",
        "  '!Design,!Best Practices'",
        "        Evaluates all rules except those in the Design or Best Practices categories.",
        "",
        "    Wrap globs in quotes.",
        "      Unix example:    $ sfdx scanner:run --target './**/*.js,!./**/IgnoreMe.js' ...",
        "      Windows example: > sfdx scanner:run --target \".\\**\\*.js,!.\\**\\IgnoreMe.js\" ...",
        "        Evaluate rules against all .js files below the current directory, except for",
        "  IgnoreMe.js.",
        "",
        "    Specify tsconfig.json if the current working directory does not contain the",
        "  tsconfig.json that corresponds to the TypeScript files being scanned.",
        "      E.g., sfdx scanner:run --target \"/my-project/**/*.ts\" --tsconfig",
        "  \"/my-project/tsconfig.json\"",
        "        Scans the project contained in '/my-project' if the current working directory",
        "  is another directory.",
        "",
        "    Use --env to override the default ESLint environment variables to add",
        "  frameworks.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --env '{\"jasmine\": true}'",
        "        Evaluates rules against somefile.js, including Jasmine in the environment",
        "  variables.",
        "",
        "    Use --violations-cause-error to throw exit with a non-zero code when",
        "  violations are found.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --violations-cause-error",
        "        Evaluates rules against somefile.js. If any rules are violated, the exit code",
        "  will be the severity of the most severe violation.",
        "",
        "    Use --engine to include or exclude engines. Any engine listed will be run,",
        "  regardless of its current 'disabled' attribute.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --engine \"eslint-lwc,pmd\"",
        "        Evaluates rules against somefile.js, using eslint-lwc and pmd engines.",
        "",
        "    To use PMD with your own rule reference file, use --pmdconfig. Note that rule",
        "  filters are not applied.",
        "      E.g, $ sfdx scanner:run --target \"src\" --pmdconfig \"pmd_rule_ref.xml\"",
        "",
        "    To use Eslint with your own .eslintrc.json file, use --eslintconfig. Make sure",
        "  that the directory you run the command from has all the NPM dependencies",
        "  installed.",
        "      E.g., $ sfdx scanner:run --target \"src\" --eslintconfig",
        "  \"/home/my/setup/.eslintrc.json\"",
        "",
        "",
        " \u203a   Error: EEXIT: 0",
        " \u203a   Code: EEXIT",
        "NAME                                               LANGUAGES    CATEGORIES        RULESETS [DEP]                                    ENGINE",
        "\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "VfCsrf                                             visualforce  Security          Basic VF                                          pmd",
        "VfHtmlStyleTagXss                                  visualforce  Security                                                            pmd",
        "VfUnescapeEl                                       visualforce  Security          Basic VF                                          pmd",
        "ApexAssertionsShouldIncludeMessage                 apex         Best Practices                                                      pmd",
        "ApexUnitTestClassShouldHaveAsserts                 apex         Best Practices    ApexUnit,Default ruleset...,quickstart            pmd",
        "ApexUnitTestMethodShouldHaveIsTestAnnotation       apex         Best Practices                                                      pmd",
        "ApexUnitTestShouldNotUseSeeAllDataTrue             apex         Best Practices    ApexUnit,Default ruleset...,quickstart            pmd",
        "AvoidGlobalModifier                                apex         Best Practices    Style,Default ruleset...,quickstart               pmd",
        "AvoidLogicInTrigger                                apex         Best Practices    Style,Default ruleset...,quickstart               pmd",
        "DebugsShouldUseLoggingLevel                        apex         Best Practices    quickstart                                        pmd",
        "UnusedLocalVariable                                apex         Best Practices                                                      pmd",
        "AvoidDmlStatementsInLoops                          apex         Performance       Default ruleset...,Performance                    pmd",
        "AvoidSoqlInLoops                                   apex         Performance       Default ruleset...,Performance                    pmd",
        "AvoidSoslInLoops                                   apex         Performance       Default ruleset...,Performance                    pmd",
        "OperationWithLimitsInLoop                          apex         Performance       quickstart                                        pmd",
        "ApexBadCrypto                                      apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexCRUDViolation                                  apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexCSRF                                           apex         Security          Security                                          pmd",
        "ApexDangerousMethods                               apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexInsecureEndpoint                               apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexOpenRedirect                                   apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexSharingViolations                              apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexSOQLInjection                                  apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexSuggestUsingNamedCred                          apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexXSSFromEscapeFalse                             apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ApexXSSFromURLParam                                apex         Security          Security,Default ruleset...,quickstart            pmd",
        "ClassNamingConventions                             apex         Code Style        Style,Default ruleset...,quickstart               pmd",
        "IfElseStmtsMustUseBraces                           apex         Code Style        Braces,Default ruleset...,quickstart              pmd",
        "IfStmtsMustUseBraces                               apex         Code Style        Braces,Default ruleset...,quickstart              pmd",
        "FieldDeclarationsShouldBeAtStart                   apex         Code Style                                                          pmd",
        "FieldNamingConventions                             apex         Code Style        quickstart                                        pmd",
        "ForLoopsMustUseBraces                              apex         Code Style        Braces,Default ruleset...,quickstart              pmd",
        "FormalParameterNamingConventions                   apex         Code Style        quickstart                                        pmd",
        "LocalVariableNamingConventions                     apex         Code Style        quickstart                                        pmd",
        "MethodNamingConventions                            apex         Code Style        Style,Default ruleset...,quickstart               pmd",
        "OneDeclarationPerLine                              apex         Code Style        Default ruleset...,quickstart                     pmd",
        "PropertyNamingConventions                          apex         Code Style        quickstart                                        pmd",
        "VariableNamingConventions                          apex         Code Style        Style,Default ruleset...                          pmd",
        "WhileLoopsMustUseBraces                            apex         Code Style        Braces,Default ruleset...,quickstart              pmd",
        "AvoidDeeplyNestedIfStmts                           apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "CyclomaticComplexity                               apex         Design            Default ruleset...,Metrics tempora...,quickstart  pmd",
        "CognitiveComplexity                                apex         Design                                                              pmd",
        "ExcessiveClassLength                               apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "ExcessiveParameterList                             apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "ExcessivePublicCount                               apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "NcssConstructorCount                               apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "NcssMethodCount                                    apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "NcssTypeCount                                      apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "StdCyclomaticComplexity                            apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "TooManyFields                                      apex         Design            Default ruleset...,Complexity,quickstart          pmd",
        "ApexDoc                                            apex         Documentation     Default ruleset...,quickstart                     pmd",
        "ApexCSRF                                           apex         Error Prone       Default ruleset...,quickstart                     pmd",
        "AvoidDirectAccessTriggerMap                        apex         Error Prone       Style,Default ruleset...,quickstart               pmd",
        "AvoidHardcodingId                                  apex         Error Prone       Style,Default ruleset...,quickstart               pmd",
        "AvoidNonExistentAnnotations                        apex         Error Prone       Default ruleset...,quickstart                     pmd",
        "EmptyCatchBlock                                    apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "EmptyIfStmt                                        apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "EmptyStatementBlock                                apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "EmptyTryOrFinallyBlock                             apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "EmptyWhileStmt                                     apex         Error Prone       Default ruleset...,Empty Code,quickstart          pmd",
        "MethodWithSameNameAsEnclosingClass                 apex         Error Prone       Style,Default ruleset...,quickstart               pmd",
        "OverrideBothEqualsAndHashcode                      apex         Error Prone                                                         pmd",
        "TestMethodsMustBeInTestClasses                     apex         Error Prone                                                         pmd",
        "constructor-super                                  javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "for-direction                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "getter-return                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-async-promise-executor                          javascript   Possible Errors   Possible Errors                                   eslint",
        "no-case-declarations                               javascript   Best Practices    Best Practices                                    eslint",
        "no-class-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-compare-neg-zero                                javascript   Possible Errors   Possible Errors                                   eslint",
        "no-cond-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-const-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-constant-condition                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-control-regex                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-debugger                                        javascript   Possible Errors   Possible Errors                                   eslint",
        "no-delete-var                                      javascript   Variables         Variables                                         eslint",
        "no-dupe-args                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-dupe-class-members                              javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-dupe-keys                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-duplicate-case                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty                                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-character-class                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-pattern                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-ex-assign                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-boolean-cast                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-semi                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-fallthrough                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-func-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-global-assign                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-inner-declarations                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-invalid-regexp                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-irregular-whitespace                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-misleading-character-class                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-mixed-spaces-and-tabs                           javascript   Stylistic Issues  Stylistic Issues                                  eslint",
        "no-new-symbol                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-obj-calls                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-octal                                           javascript   Best Practices    Best Practices                                    eslint",
        "no-prototype-builtins                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-redeclare                                       javascript   Best Practices    Best Practices                                    eslint",
        "no-regex-spaces                                    javascript   Possible Errors   Possible Errors                                   eslint",
        "no-self-assign                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-shadow-restricted-names                         javascript   Variables         Variables                                         eslint",
        "no-sparse-arrays                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-this-before-super                               javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-undef                                           javascript   Variables         Variables                                         eslint",
        "no-unexpected-multiline                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unreachable                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-finally                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-negation                                 javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unused-labels                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-unused-vars                                     javascript   Variables         Variables                                         eslint",
        "no-useless-catch                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-useless-escape                                  javascript   Best Practices    Best Practices                                    eslint",
        "no-with                                            javascript   Best Practices    Best Practices                                    eslint",
        "require-yield                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "use-isnan                                          javascript   Possible Errors   Possible Errors                                   eslint",
        "valid-typeof                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "constructor-super                                  typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "for-direction                                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-async-promise-executor                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-case-declarations                               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-class-assign                                    typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-compare-neg-zero                                typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-cond-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-constant-condition                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-control-regex                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-debugger                                        typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-delete-var                                      typescript   Variables         Variables                                         eslint-typescript",
        "no-duplicate-case                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty                                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-character-class                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-pattern                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-ex-assign                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-extra-boolean-cast                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-fallthrough                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-func-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-global-assign                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-inner-declarations                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-invalid-regexp                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-irregular-whitespace                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-misleading-character-class                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-mixed-spaces-and-tabs                           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "no-obj-calls                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-octal                                           typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-prototype-builtins                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-regex-spaces                                    typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-self-assign                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-shadow-restricted-names                         typescript   Variables         Variables                                         eslint-typescript",
        "no-sparse-arrays                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unexpected-multiline                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-finally                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-negation                                 typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unused-labels                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-catch                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-escape                                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-var                                             typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-with                                            typescript   Best Practices    Best Practices                                    eslint-typescript",
        "prefer-const                                       typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-rest-params                                 typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-spread                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "require-yield                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "use-isnan                                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "@typescript-eslint/adjacent-overload-signatures    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/await-thenable                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/ban-types                       typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/consistent-type-assertions      typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/explicit-function-return-type   typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/member-delimiter-style          typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-array-constructor            typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-empty-function               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-empty-interface              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-explicit-any                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-for-in-array                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-inferrable-types             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-new                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-promises             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-namespace                    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-non-null-assertion           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-this-alias                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unnecessary-type-assertion   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unused-vars                  typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-use-before-define            typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-var-requires                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-includes                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-namespace-keyword        typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-regexp-exec              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-string-starts-ends-with  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/require-await                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/triple-slash-reference          typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/type-annotation-spacing         typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/unbound-method                  typescript   Best Practices    Best Practices                                    eslint-typescript"
    ],
    "sfdx-scanner-apex": [
        "evaluate a selection of rules against a codebase",
        "",
        "USAGE",
        "  $ sfdx scanner:run -t <array> [-c <array>] [-r <array>] [-e <array>]",
        "    [-f csv|html|json|junit|sarif|table|xml] [-o <string>] [--tsconfig <string>]",
        "    [--eslintconfig <string>] [--pmdconfig <string>] [--env <string>] [-s",
        "    <integer> | undefined | [-v | --json]] [--normalize-severity] [--verbose]",
        "    [--loglevel",
        "    trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]",
        "",
        "FLAGS",
        "  -c, --category=<value>",
        "      categor(ies) of rules to run",
        "",
        "  -e, --engine=<value>",
        "      engine(s) to run",
        "",
        "  -f, --format=(csv|html|json|junit|sarif|table|xml)",
        "      format of results",
        "",
        "  -o, --outfile=<value>",
        "      location of output file",
        "",
        "  -r, --ruleset=<value>",
        "      [deprecated] ruleset(s) of rules to run",
        "",
        "  -s, --severity-threshold=<value>",
        "      throws an error when violations of specific severity (or more severe) are",
        "      detected, invokes --normalize-severity",
        "",
        "  -t, --target=<value>",
        "      (required) location of source code",
        "",
        "  -v, --violations-cause-error",
        "      [deprecated] throws an error when violations are detected",
        "",
        "  --env=<value>",
        "      JSON-formatted string, overrides ESLint's default environment variables",
        "",
        "  --eslintconfig=<value>",
        "      location of eslintrc config to customize eslint engine",
        "",
        "  --json",
        "      format output as json",
        "",
        "  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA",
        "  L)",
        "      [default: warn] logging level for this command invocation",
        "",
        "  --normalize-severity",
        "      A normalized severity 1 (high), 2 (moderate), and 3 (low) is returned in",
        "      addition to the engine specific severity",
        "",
        "  --pmdconfig=<value>",
        "      location of PMD rule reference XML file to customize rule selection",
        "",
        "  --tsconfig=<value>",
        "      location of tsconfig.json file",
        "",
        "  --verbose",
        "      emit additional command output to stdout",
        "",
        "DESCRIPTION",
        "  evaluate a selection of rules against a codebase",
        "",
        "EXAMPLES",
        "  Invoking without specifying any rules causes all rules to be run.",
        "    E.g., $ sfdx scanner:run --format xml --target \"somefile.js\"",
        "      Evaluates all rules against somefile.js.",
        "    Specifying multiple categories is treated as a logical OR.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category \"Design,Best Practices\"",
        "        Evaluates all rules in the Design or Best Practices categories.",
        "    Categories can be excluded by specifying the negation operator, the values must be enclosed in single quotes.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category '!Design,!Best Practices'",
        "        Evaluates all rules except those in the Design or Best Practices categories.",
        "    Wrap globs in quotes.",
        "      Unix example:    $ sfdx scanner:run --target './**/*.js,!./**/IgnoreMe.js' ...",
        "      Windows example: > sfdx scanner:run --target \".\\**\\*.js,!.\\**\\IgnoreMe.js\" ...",
        "        Evaluate rules against all .js files below the current directory, except for IgnoreMe.js.",
        "    Specify tsconfig.json if the current working directory does not contain the tsconfig.json that corresponds to the TypeScript files being scanned.",
        "      E.g., sfdx scanner:run --target \"/my-project/**/*.ts\" --tsconfig \"/my-project/tsconfig.json\"",
        "        Scans the project contained in '/my-project' if the current working directory is another directory.",
        "    Use --env to override the default ESLint environment variables to add frameworks.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --env '{\"jasmine\": true}'",
        "        Evaluates rules against somefile.js, including Jasmine in the environment variables.",
        "    Use --violations-cause-error to throw exit with a non-zero code when violations are found.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --violations-cause-error",
        "        Evaluates rules against somefile.js. If any rules are violated, the exit code will be the severity of the most severe violation.",
        "    Use --engine to include or exclude engines. Any engine listed will be run, regardless of its current 'disabled' attribute.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --engine \"eslint-lwc,pmd\"",
        "        Evaluates rules against somefile.js, using eslint-lwc and pmd engines.",
        "    Use --engine to invoke engines that are not enabled by default.",
        "      E.g, $ sfdx scanner:run --target \"/some/dir\" --engine cpd",
        "        Executes CPD engine against known file extensions in \"/some/dir\". CPD helps detect blocks of code duplication in selected languages.",
        "    To use PMD with your own rule reference file, use --pmdconfig. Note that rule filters are not applied.",
        "      E.g, $ sfdx scanner:run --target \"src\" --pmdconfig \"pmd_rule_ref.xml\"",
        "    To use Eslint with your own .eslintrc.json file, use --eslintconfig. Make sure that the directory you run the command from has all the NPM dependencies installed.",
        "      E.g., $ sfdx scanner:run --target \"src\" --eslintconfig \"/home/my/setup/.eslintrc.json\"",
        "    Use --normalize-severity to output a normalized (across all engines) severity (1 [high], 2 [moderate], and 3 [low]) in addition to the engine specific severity (when shown).",
        "      E.g., $ sfdx scanner:run --target \"/some-project/\" --format csv --normalize-severity",
        "    Use --severity-threshold to throw a non-zero exit code when rule violations of a specific severity (or greater) are found. For this example, if there are any rule violations with a severity of 2 or more (which includes 1-high and 2-moderate), the exit code will be equal to the severity of the most severe violation.",
        "      E.g., $ sfdx scanner:run --target \"/some-project/\" --severity-threshold 2",
        "",
        "",
        "WARNING: We're constantly improving Salesforce Code Analyzer. Tell us what you think! Give feedback at https://research.net/r/SalesforceCA.",
        "WARNING: In September 2022, v3.x of the Salesforce Code Analyzer will become the default version,",
        "         and older versions, including your currently installed version, will no longer be supported.",
        "         You can manually update to v3.x earlier for a smoother transition.",
        "WARNING: As of April 27, 2022, v3.x of the Salesforce Code Analyzer is available as an open pilot.",
        "         To update to v3.x and try out our pilot features, run these commands:",
        "         > sfdx plugins:uninstall @salesforce/sfdx-scanner",
        "         > sfdx plugins:install @salesforce/sfdx-scanner@latest-pilot",
        "NAME                                               LANGUAGES    CATEGORIES        RULESETS [DEP]                                    ENGINE",
        "\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "VfCsrf                                             visualforce  Security          Basic VF                                          pmd",
        "VfHtmlStyleTagXss                                  visualforce  Security                                                            pmd",
        "VfUnescapeEl                                       visualforce  Security          Basic VF                                          pmd",
        "ApexAssertionsShouldIncludeMessage                 apex         Best Practices                                                      pmd",
        "ApexUnitTestClassShouldHaveAsserts                 apex         Best Practices    quickstart,ApexUnit,Default ruleset...            pmd",
        "ApexUnitTestMethodShouldHaveIsTestAnnotation       apex         Best Practices                                                      pmd",
        "ApexUnitTestShouldNotUseSeeAllDataTrue             apex         Best Practices    quickstart,ApexUnit,Default ruleset...            pmd",
        "AvoidGlobalModifier                                apex         Best Practices    quickstart,Default ruleset...,Style               pmd",
        "AvoidLogicInTrigger                                apex         Best Practices    quickstart,Default ruleset...,Style               pmd",
        "DebugsShouldUseLoggingLevel                        apex         Best Practices    quickstart                                        pmd",
        "UnusedLocalVariable                                apex         Best Practices                                                      pmd",
        "AvoidDebugStatements                               apex         Performance                                                         pmd",
        "AvoidDmlStatementsInLoops                          apex         Performance       Performance,Default ruleset...                    pmd",
        "AvoidSoqlInLoops                                   apex         Performance       Performance,Default ruleset...                    pmd",
        "AvoidSoslInLoops                                   apex         Performance       Performance,Default ruleset...                    pmd",
        "EagerlyLoadedDescribeSObjectResult                 apex         Performance                                                         pmd",
        "OperationWithLimitsInLoop                          apex         Performance       quickstart                                        pmd",
        "ApexBadCrypto                                      apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexCRUDViolation                                  apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexCSRF                                           apex         Security          Security                                          pmd",
        "ApexDangerousMethods                               apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexInsecureEndpoint                               apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexOpenRedirect                                   apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSharingViolations                              apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSOQLInjection                                  apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSuggestUsingNamedCred                          apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexXSSFromEscapeFalse                             apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexXSSFromURLParam                                apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ClassNamingConventions                             apex         Code Style        quickstart,Default ruleset...,Style               pmd",
        "IfElseStmtsMustUseBraces                           apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "IfStmtsMustUseBraces                               apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "FieldDeclarationsShouldBeAtStart                   apex         Code Style                                                          pmd",
        "FieldNamingConventions                             apex         Code Style        quickstart                                        pmd",
        "ForLoopsMustUseBraces                              apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "FormalParameterNamingConventions                   apex         Code Style        quickstart                                        pmd",
        "LocalVariableNamingConventions                     apex         Code Style        quickstart                                        pmd",
        "MethodNamingConventions                            apex         Code Style        quickstart,Default ruleset...,Style               pmd",
        "OneDeclarationPerLine                              apex         Code Style        quickstart,Default ruleset...                     pmd",
        "PropertyNamingConventions                          apex         Code Style        quickstart                                        pmd",
        "VariableNamingConventions                          apex         Code Style        Default ruleset...,Style                          pmd",
        "WhileLoopsMustUseBraces                            apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "AvoidDeeplyNestedIfStmts                           apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "CyclomaticComplexity                               apex         Design            quickstart,Default ruleset...,Metrics tempora...  pmd",
        "CognitiveComplexity                                apex         Design                                                              pmd",
        "ExcessiveClassLength                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ExcessiveParameterList                             apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ExcessivePublicCount                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssConstructorCount                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssMethodCount                                    apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssTypeCount                                      apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "StdCyclomaticComplexity                            apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "TooManyFields                                      apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ApexDoc                                            apex         Documentation     quickstart,Default ruleset...                     pmd",
        "ApexCSRF                                           apex         Error Prone       quickstart,Default ruleset...                     pmd",
        "AvoidDirectAccessTriggerMap                        apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "AvoidHardcodingId                                  apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "AvoidNonExistentAnnotations                        apex         Error Prone       quickstart,Default ruleset...                     pmd",
        "EmptyCatchBlock                                    apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyIfStmt                                        apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyStatementBlock                                apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyTryOrFinallyBlock                             apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyWhileStmt                                     apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "InaccessibleAuraEnabledGetter                      apex         Error Prone                                                         pmd",
        "MethodWithSameNameAsEnclosingClass                 apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "OverrideBothEqualsAndHashcode                      apex         Error Prone                                                         pmd",
        "TestMethodsMustBeInTestClasses                     apex         Error Prone                                                         pmd",
        "constructor-super                                  javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "for-direction                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "getter-return                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-async-promise-executor                          javascript   Possible Errors   Possible Errors                                   eslint",
        "no-case-declarations                               javascript   Best Practices    Best Practices                                    eslint",
        "no-class-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-compare-neg-zero                                javascript   Possible Errors   Possible Errors                                   eslint",
        "no-cond-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-const-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-constant-condition                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-control-regex                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-debugger                                        javascript   Possible Errors   Possible Errors                                   eslint",
        "no-delete-var                                      javascript   Variables         Variables                                         eslint",
        "no-dupe-args                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-dupe-class-members                              javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-dupe-keys                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-duplicate-case                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty                                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-character-class                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-pattern                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-ex-assign                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-boolean-cast                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-semi                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-fallthrough                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-func-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-global-assign                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-inner-declarations                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-invalid-regexp                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-irregular-whitespace                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-misleading-character-class                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-mixed-spaces-and-tabs                           javascript   Stylistic Issues  Stylistic Issues                                  eslint",
        "no-new-symbol                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-obj-calls                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-octal                                           javascript   Best Practices    Best Practices                                    eslint",
        "no-prototype-builtins                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-redeclare                                       javascript   Best Practices    Best Practices                                    eslint",
        "no-regex-spaces                                    javascript   Possible Errors   Possible Errors                                   eslint",
        "no-self-assign                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-shadow-restricted-names                         javascript   Variables         Variables                                         eslint",
        "no-sparse-arrays                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-this-before-super                               javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-undef                                           javascript   Variables         Variables                                         eslint",
        "no-unexpected-multiline                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unreachable                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-finally                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-negation                                 javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unused-labels                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-unused-vars                                     javascript   Variables         Variables                                         eslint",
        "no-useless-catch                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-useless-escape                                  javascript   Best Practices    Best Practices                                    eslint",
        "no-with                                            javascript   Best Practices    Best Practices                                    eslint",
        "require-yield                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "use-isnan                                          javascript   Possible Errors   Possible Errors                                   eslint",
        "valid-typeof                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "constructor-super                                  typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "for-direction                                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-async-promise-executor                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-case-declarations                               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-class-assign                                    typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-compare-neg-zero                                typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-cond-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-constant-condition                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-control-regex                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-debugger                                        typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-delete-var                                      typescript   Variables         Variables                                         eslint-typescript",
        "no-duplicate-case                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty                                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-character-class                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-pattern                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-ex-assign                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-extra-boolean-cast                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-fallthrough                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-func-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-global-assign                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-inner-declarations                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-invalid-regexp                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-irregular-whitespace                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-misleading-character-class                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-mixed-spaces-and-tabs                           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "no-obj-calls                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-octal                                           typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-prototype-builtins                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-regex-spaces                                    typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-self-assign                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-shadow-restricted-names                         typescript   Variables         Variables                                         eslint-typescript",
        "no-sparse-arrays                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unexpected-multiline                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-finally                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-negation                                 typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unused-labels                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-catch                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-escape                                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-var                                             typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-with                                            typescript   Best Practices    Best Practices                                    eslint-typescript",
        "prefer-const                                       typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-rest-params                                 typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-spread                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "require-yield                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "use-isnan                                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "@typescript-eslint/adjacent-overload-signatures    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/await-thenable                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/ban-types                       typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/consistent-type-assertions      typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/explicit-function-return-type   typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/member-delimiter-style          typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-array-constructor            typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-empty-function               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-empty-interface              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-explicit-any                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-for-in-array                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-inferrable-types             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-new                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-promises             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-namespace                    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-non-null-assertion           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-this-alias                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unnecessary-type-assertion   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unused-vars                  typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-use-before-define            typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-var-requires                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-includes                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-namespace-keyword        typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-regexp-exec              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-string-starts-ends-with  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/require-await                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/triple-slash-reference          typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/type-annotation-spacing         typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/unbound-method                  typescript   Best Practices    Best Practices                                    eslint-typescript"
    ],
    "sfdx-scanner-aura": [
        "evaluate a selection of rules against a codebase",
        "",
        "USAGE",
        "  $ sfdx scanner:run -t <array> [-c <array>] [-r <array>] [-e <array>]",
        "    [-f csv|html|json|junit|sarif|table|xml] [-o <string>] [--tsconfig <string>]",
        "    [--eslintconfig <string>] [--pmdconfig <string>] [--env <string>] [-s",
        "    <integer> | undefined | [-v | --json]] [--normalize-severity] [--verbose]",
        "    [--loglevel",
        "    trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]",
        "",
        "FLAGS",
        "  -c, --category=<value>",
        "      categor(ies) of rules to run",
        "",
        "  -e, --engine=<value>",
        "      engine(s) to run",
        "",
        "  -f, --format=(csv|html|json|junit|sarif|table|xml)",
        "      format of results",
        "",
        "  -o, --outfile=<value>",
        "      location of output file",
        "",
        "  -r, --ruleset=<value>",
        "      [deprecated] ruleset(s) of rules to run",
        "",
        "  -s, --severity-threshold=<value>",
        "      throws an error when violations of specific severity (or more severe) are",
        "      detected, invokes --normalize-severity",
        "",
        "  -t, --target=<value>",
        "      (required) location of source code",
        "",
        "  -v, --violations-cause-error",
        "      [deprecated] throws an error when violations are detected",
        "",
        "  --env=<value>",
        "      JSON-formatted string, overrides ESLint's default environment variables",
        "",
        "  --eslintconfig=<value>",
        "      location of eslintrc config to customize eslint engine",
        "",
        "  --json",
        "      format output as json",
        "",
        "  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA",
        "  L)",
        "      [default: warn] logging level for this command invocation",
        "",
        "  --normalize-severity",
        "      A normalized severity 1 (high), 2 (moderate), and 3 (low) is returned in",
        "      addition to the engine specific severity",
        "",
        "  --pmdconfig=<value>",
        "      location of PMD rule reference XML file to customize rule selection",
        "",
        "  --tsconfig=<value>",
        "      location of tsconfig.json file",
        "",
        "  --verbose",
        "      emit additional command output to stdout",
        "",
        "DESCRIPTION",
        "  evaluate a selection of rules against a codebase",
        "",
        "EXAMPLES",
        "  Invoking without specifying any rules causes all rules to be run.",
        "    E.g., $ sfdx scanner:run --format xml --target \"somefile.js\"",
        "      Evaluates all rules against somefile.js.",
        "    Specifying multiple categories is treated as a logical OR.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category \"Design,Best Practices\"",
        "        Evaluates all rules in the Design or Best Practices categories.",
        "    Categories can be excluded by specifying the negation operator, the values must be enclosed in single quotes.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category '!Design,!Best Practices'",
        "        Evaluates all rules except those in the Design or Best Practices categories.",
        "    Wrap globs in quotes.",
        "      Unix example:    $ sfdx scanner:run --target './**/*.js,!./**/IgnoreMe.js' ...",
        "      Windows example: > sfdx scanner:run --target \".\\**\\*.js,!.\\**\\IgnoreMe.js\" ...",
        "        Evaluate rules against all .js files below the current directory, except for IgnoreMe.js.",
        "    Specify tsconfig.json if the current working directory does not contain the tsconfig.json that corresponds to the TypeScript files being scanned.",
        "      E.g., sfdx scanner:run --target \"/my-project/**/*.ts\" --tsconfig \"/my-project/tsconfig.json\"",
        "        Scans the project contained in '/my-project' if the current working directory is another directory.",
        "    Use --env to override the default ESLint environment variables to add frameworks.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --env '{\"jasmine\": true}'",
        "        Evaluates rules against somefile.js, including Jasmine in the environment variables.",
        "    Use --violations-cause-error to throw exit with a non-zero code when violations are found.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --violations-cause-error",
        "        Evaluates rules against somefile.js. If any rules are violated, the exit code will be the severity of the most severe violation.",
        "    Use --engine to include or exclude engines. Any engine listed will be run, regardless of its current 'disabled' attribute.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --engine \"eslint-lwc,pmd\"",
        "        Evaluates rules against somefile.js, using eslint-lwc and pmd engines.",
        "    Use --engine to invoke engines that are not enabled by default.",
        "      E.g, $ sfdx scanner:run --target \"/some/dir\" --engine cpd",
        "        Executes CPD engine against known file extensions in \"/some/dir\". CPD helps detect blocks of code duplication in selected languages.",
        "    To use PMD with your own rule reference file, use --pmdconfig. Note that rule filters are not applied.",
        "      E.g, $ sfdx scanner:run --target \"src\" --pmdconfig \"pmd_rule_ref.xml\"",
        "    To use Eslint with your own .eslintrc.json file, use --eslintconfig. Make sure that the directory you run the command from has all the NPM dependencies installed.",
        "      E.g., $ sfdx scanner:run --target \"src\" --eslintconfig \"/home/my/setup/.eslintrc.json\"",
        "    Use --normalize-severity to output a normalized (across all engines) severity (1 [high], 2 [moderate], and 3 [low]) in addition to the engine specific severity (when shown).",
        "      E.g., $ sfdx scanner:run --target \"/some-project/\" --format csv --normalize-severity",
        "    Use --severity-threshold to throw a non-zero exit code when rule violations of a specific severity (or greater) are found. For this example, if there are any rule violations with a severity of 2 or more (which includes 1-high and 2-moderate), the exit code will be equal to the severity of the most severe violation.",
        "      E.g., $ sfdx scanner:run --target \"/some-project/\" --severity-threshold 2",
        "",
        "",
        "WARNING: We're constantly improving Salesforce Code Analyzer. Tell us what you think! Give feedback at https://research.net/r/SalesforceCA.",
        "WARNING: In September 2022, v3.x of the Salesforce Code Analyzer will become the default version,",
        "         and older versions, including your currently installed version, will no longer be supported.",
        "         You can manually update to v3.x earlier for a smoother transition.",
        "WARNING: As of April 27, 2022, v3.x of the Salesforce Code Analyzer is available as an open pilot.",
        "         To update to v3.x and try out our pilot features, run these commands:",
        "         > sfdx plugins:uninstall @salesforce/sfdx-scanner",
        "         > sfdx plugins:install @salesforce/sfdx-scanner@latest-pilot",
        "NAME                                               LANGUAGES    CATEGORIES        RULESETS [DEP]                                    ENGINE",
        "\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "VfCsrf                                             visualforce  Security          Basic VF                                          pmd",
        "VfHtmlStyleTagXss                                  visualforce  Security                                                            pmd",
        "VfUnescapeEl                                       visualforce  Security          Basic VF                                          pmd",
        "ApexAssertionsShouldIncludeMessage                 apex         Best Practices                                                      pmd",
        "ApexUnitTestClassShouldHaveAsserts                 apex         Best Practices    quickstart,ApexUnit,Default ruleset...            pmd",
        "ApexUnitTestMethodShouldHaveIsTestAnnotation       apex         Best Practices                                                      pmd",
        "ApexUnitTestShouldNotUseSeeAllDataTrue             apex         Best Practices    quickstart,ApexUnit,Default ruleset...            pmd",
        "AvoidGlobalModifier                                apex         Best Practices    quickstart,Default ruleset...,Style               pmd",
        "AvoidLogicInTrigger                                apex         Best Practices    quickstart,Default ruleset...,Style               pmd",
        "DebugsShouldUseLoggingLevel                        apex         Best Practices    quickstart                                        pmd",
        "UnusedLocalVariable                                apex         Best Practices                                                      pmd",
        "AvoidDebugStatements                               apex         Performance                                                         pmd",
        "AvoidDmlStatementsInLoops                          apex         Performance       Performance,Default ruleset...                    pmd",
        "AvoidSoqlInLoops                                   apex         Performance       Performance,Default ruleset...                    pmd",
        "AvoidSoslInLoops                                   apex         Performance       Performance,Default ruleset...                    pmd",
        "EagerlyLoadedDescribeSObjectResult                 apex         Performance                                                         pmd",
        "OperationWithLimitsInLoop                          apex         Performance       quickstart                                        pmd",
        "ApexBadCrypto                                      apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexCRUDViolation                                  apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexCSRF                                           apex         Security          Security                                          pmd",
        "ApexDangerousMethods                               apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexInsecureEndpoint                               apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexOpenRedirect                                   apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSharingViolations                              apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSOQLInjection                                  apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSuggestUsingNamedCred                          apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexXSSFromEscapeFalse                             apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexXSSFromURLParam                                apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ClassNamingConventions                             apex         Code Style        quickstart,Default ruleset...,Style               pmd",
        "IfElseStmtsMustUseBraces                           apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "IfStmtsMustUseBraces                               apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "FieldDeclarationsShouldBeAtStart                   apex         Code Style                                                          pmd",
        "FieldNamingConventions                             apex         Code Style        quickstart                                        pmd",
        "ForLoopsMustUseBraces                              apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "FormalParameterNamingConventions                   apex         Code Style        quickstart                                        pmd",
        "LocalVariableNamingConventions                     apex         Code Style        quickstart                                        pmd",
        "MethodNamingConventions                            apex         Code Style        quickstart,Default ruleset...,Style               pmd",
        "OneDeclarationPerLine                              apex         Code Style        quickstart,Default ruleset...                     pmd",
        "PropertyNamingConventions                          apex         Code Style        quickstart                                        pmd",
        "VariableNamingConventions                          apex         Code Style        Default ruleset...,Style                          pmd",
        "WhileLoopsMustUseBraces                            apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "AvoidDeeplyNestedIfStmts                           apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "CyclomaticComplexity                               apex         Design            quickstart,Default ruleset...,Metrics tempora...  pmd",
        "CognitiveComplexity                                apex         Design                                                              pmd",
        "ExcessiveClassLength                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ExcessiveParameterList                             apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ExcessivePublicCount                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssConstructorCount                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssMethodCount                                    apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssTypeCount                                      apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "StdCyclomaticComplexity                            apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "TooManyFields                                      apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ApexDoc                                            apex         Documentation     quickstart,Default ruleset...                     pmd",
        "ApexCSRF                                           apex         Error Prone       quickstart,Default ruleset...                     pmd",
        "AvoidDirectAccessTriggerMap                        apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "AvoidHardcodingId                                  apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "AvoidNonExistentAnnotations                        apex         Error Prone       quickstart,Default ruleset...                     pmd",
        "EmptyCatchBlock                                    apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyIfStmt                                        apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyStatementBlock                                apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyTryOrFinallyBlock                             apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyWhileStmt                                     apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "InaccessibleAuraEnabledGetter                      apex         Error Prone                                                         pmd",
        "MethodWithSameNameAsEnclosingClass                 apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "OverrideBothEqualsAndHashcode                      apex         Error Prone                                                         pmd",
        "TestMethodsMustBeInTestClasses                     apex         Error Prone                                                         pmd",
        "constructor-super                                  javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "for-direction                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "getter-return                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-async-promise-executor                          javascript   Possible Errors   Possible Errors                                   eslint",
        "no-case-declarations                               javascript   Best Practices    Best Practices                                    eslint",
        "no-class-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-compare-neg-zero                                javascript   Possible Errors   Possible Errors                                   eslint",
        "no-cond-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-const-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-constant-condition                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-control-regex                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-debugger                                        javascript   Possible Errors   Possible Errors                                   eslint",
        "no-delete-var                                      javascript   Variables         Variables                                         eslint",
        "no-dupe-args                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-dupe-class-members                              javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-dupe-keys                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-duplicate-case                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty                                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-character-class                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-pattern                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-ex-assign                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-boolean-cast                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-semi                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-fallthrough                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-func-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-global-assign                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-inner-declarations                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-invalid-regexp                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-irregular-whitespace                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-misleading-character-class                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-mixed-spaces-and-tabs                           javascript   Stylistic Issues  Stylistic Issues                                  eslint",
        "no-new-symbol                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-obj-calls                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-octal                                           javascript   Best Practices    Best Practices                                    eslint",
        "no-prototype-builtins                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-redeclare                                       javascript   Best Practices    Best Practices                                    eslint",
        "no-regex-spaces                                    javascript   Possible Errors   Possible Errors                                   eslint",
        "no-self-assign                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-shadow-restricted-names                         javascript   Variables         Variables                                         eslint",
        "no-sparse-arrays                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-this-before-super                               javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-undef                                           javascript   Variables         Variables                                         eslint",
        "no-unexpected-multiline                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unreachable                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-finally                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-negation                                 javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unused-labels                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-unused-vars                                     javascript   Variables         Variables                                         eslint",
        "no-useless-catch                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-useless-escape                                  javascript   Best Practices    Best Practices                                    eslint",
        "no-with                                            javascript   Best Practices    Best Practices                                    eslint",
        "require-yield                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "use-isnan                                          javascript   Possible Errors   Possible Errors                                   eslint",
        "valid-typeof                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "constructor-super                                  typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "for-direction                                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-async-promise-executor                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-case-declarations                               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-class-assign                                    typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-compare-neg-zero                                typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-cond-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-constant-condition                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-control-regex                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-debugger                                        typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-delete-var                                      typescript   Variables         Variables                                         eslint-typescript",
        "no-duplicate-case                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty                                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-character-class                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-pattern                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-ex-assign                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-extra-boolean-cast                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-fallthrough                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-func-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-global-assign                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-inner-declarations                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-invalid-regexp                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-irregular-whitespace                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-misleading-character-class                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-mixed-spaces-and-tabs                           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "no-obj-calls                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-octal                                           typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-prototype-builtins                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-regex-spaces                                    typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-self-assign                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-shadow-restricted-names                         typescript   Variables         Variables                                         eslint-typescript",
        "no-sparse-arrays                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unexpected-multiline                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-finally                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-negation                                 typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unused-labels                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-catch                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-escape                                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-var                                             typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-with                                            typescript   Best Practices    Best Practices                                    eslint-typescript",
        "prefer-const                                       typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-rest-params                                 typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-spread                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "require-yield                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "use-isnan                                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "@typescript-eslint/adjacent-overload-signatures    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/await-thenable                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/ban-types                       typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/consistent-type-assertions      typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/explicit-function-return-type   typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/member-delimiter-style          typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-array-constructor            typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-empty-function               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-empty-interface              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-explicit-any                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-for-in-array                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-inferrable-types             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-new                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-promises             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-namespace                    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-non-null-assertion           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-this-alias                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unnecessary-type-assertion   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unused-vars                  typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-use-before-define            typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-var-requires                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-includes                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-namespace-keyword        typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-regexp-exec              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-string-starts-ends-with  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/require-await                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/triple-slash-reference          typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/type-annotation-spacing         typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/unbound-method                  typescript   Best Practices    Best Practices                                    eslint-typescript"
    ],
    "sfdx-scanner-lwc": [
        "evaluate a selection of rules against a codebase",
        "",
        "USAGE",
        "  $ sfdx scanner:run -t <array> [-c <array>] [-r <array>] [-e <array>]",
        "    [-f csv|html|json|junit|sarif|table|xml] [-o <string>] [--tsconfig <string>]",
        "    [--eslintconfig <string>] [--pmdconfig <string>] [--env <string>] [-s",
        "    <integer> | undefined | [-v | --json]] [--normalize-severity] [--verbose]",
        "    [--loglevel",
        "    trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATAL]",
        "",
        "FLAGS",
        "  -c, --category=<value>",
        "      categor(ies) of rules to run",
        "",
        "  -e, --engine=<value>",
        "      engine(s) to run",
        "",
        "  -f, --format=(csv|html|json|junit|sarif|table|xml)",
        "      format of results",
        "",
        "  -o, --outfile=<value>",
        "      location of output file",
        "",
        "  -r, --ruleset=<value>",
        "      [deprecated] ruleset(s) of rules to run",
        "",
        "  -s, --severity-threshold=<value>",
        "      throws an error when violations of specific severity (or more severe) are",
        "      detected, invokes --normalize-severity",
        "",
        "  -t, --target=<value>",
        "      (required) location of source code",
        "",
        "  -v, --violations-cause-error",
        "      [deprecated] throws an error when violations are detected",
        "",
        "  --env=<value>",
        "      JSON-formatted string, overrides ESLint's default environment variables",
        "",
        "  --eslintconfig=<value>",
        "      location of eslintrc config to customize eslint engine",
        "",
        "  --json",
        "      format output as json",
        "",
        "  --loglevel=(trace|debug|info|warn|error|fatal|TRACE|DEBUG|INFO|WARN|ERROR|FATA",
        "  L)",
        "      [default: warn] logging level for this command invocation",
        "",
        "  --normalize-severity",
        "      A normalized severity 1 (high), 2 (moderate), and 3 (low) is returned in",
        "      addition to the engine specific severity",
        "",
        "  --pmdconfig=<value>",
        "      location of PMD rule reference XML file to customize rule selection",
        "",
        "  --tsconfig=<value>",
        "      location of tsconfig.json file",
        "",
        "  --verbose",
        "      emit additional command output to stdout",
        "",
        "DESCRIPTION",
        "  evaluate a selection of rules against a codebase",
        "",
        "EXAMPLES",
        "  Invoking without specifying any rules causes all rules to be run.",
        "    E.g., $ sfdx scanner:run --format xml --target \"somefile.js\"",
        "      Evaluates all rules against somefile.js.",
        "    Specifying multiple categories is treated as a logical OR.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category \"Design,Best Practices\"",
        "        Evaluates all rules in the Design or Best Practices categories.",
        "    Categories can be excluded by specifying the negation operator, the values must be enclosed in single quotes.",
        "      E.g., $ sfdx scanner:run --format xml --target \"somefile.js\" --category '!Design,!Best Practices'",
        "        Evaluates all rules except those in the Design or Best Practices categories.",
        "    Wrap globs in quotes.",
        "      Unix example:    $ sfdx scanner:run --target './**/*.js,!./**/IgnoreMe.js' ...",
        "      Windows example: > sfdx scanner:run --target \".\\**\\*.js,!.\\**\\IgnoreMe.js\" ...",
        "        Evaluate rules against all .js files below the current directory, except for IgnoreMe.js.",
        "    Specify tsconfig.json if the current working directory does not contain the tsconfig.json that corresponds to the TypeScript files being scanned.",
        "      E.g., sfdx scanner:run --target \"/my-project/**/*.ts\" --tsconfig \"/my-project/tsconfig.json\"",
        "        Scans the project contained in '/my-project' if the current working directory is another directory.",
        "    Use --env to override the default ESLint environment variables to add frameworks.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --env '{\"jasmine\": true}'",
        "        Evaluates rules against somefile.js, including Jasmine in the environment variables.",
        "    Use --violations-cause-error to throw exit with a non-zero code when violations are found.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --violations-cause-error",
        "        Evaluates rules against somefile.js. If any rules are violated, the exit code will be the severity of the most severe violation.",
        "    Use --engine to include or exclude engines. Any engine listed will be run, regardless of its current 'disabled' attribute.",
        "      E.g., $ sfdx scanner:run --target \"somefile.js\" --engine \"eslint-lwc,pmd\"",
        "        Evaluates rules against somefile.js, using eslint-lwc and pmd engines.",
        "    Use --engine to invoke engines that are not enabled by default.",
        "      E.g, $ sfdx scanner:run --target \"/some/dir\" --engine cpd",
        "        Executes CPD engine against known file extensions in \"/some/dir\". CPD helps detect blocks of code duplication in selected languages.",
        "    To use PMD with your own rule reference file, use --pmdconfig. Note that rule filters are not applied.",
        "      E.g, $ sfdx scanner:run --target \"src\" --pmdconfig \"pmd_rule_ref.xml\"",
        "    To use Eslint with your own .eslintrc.json file, use --eslintconfig. Make sure that the directory you run the command from has all the NPM dependencies installed.",
        "      E.g., $ sfdx scanner:run --target \"src\" --eslintconfig \"/home/my/setup/.eslintrc.json\"",
        "    Use --normalize-severity to output a normalized (across all engines) severity (1 [high], 2 [moderate], and 3 [low]) in addition to the engine specific severity (when shown).",
        "      E.g., $ sfdx scanner:run --target \"/some-project/\" --format csv --normalize-severity",
        "    Use --severity-threshold to throw a non-zero exit code when rule violations of a specific severity (or greater) are found. For this example, if there are any rule violations with a severity of 2 or more (which includes 1-high and 2-moderate), the exit code will be equal to the severity of the most severe violation.",
        "      E.g., $ sfdx scanner:run --target \"/some-project/\" --severity-threshold 2",
        "",
        "",
        "WARNING: We're constantly improving Salesforce Code Analyzer. Tell us what you think! Give feedback at https://research.net/r/SalesforceCA.",
        "WARNING: In September 2022, v3.x of the Salesforce Code Analyzer will become the default version,",
        "         and older versions, including your currently installed version, will no longer be supported.",
        "         You can manually update to v3.x earlier for a smoother transition.",
        "WARNING: As of April 27, 2022, v3.x of the Salesforce Code Analyzer is available as an open pilot.",
        "         To update to v3.x and try out our pilot features, run these commands:",
        "         > sfdx plugins:uninstall @salesforce/sfdx-scanner",
        "         > sfdx plugins:install @salesforce/sfdx-scanner@latest-pilot",
        "NAME                                               LANGUAGES    CATEGORIES        RULESETS [DEP]                                    ENGINE",
        "\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500",
        "VfCsrf                                             visualforce  Security          Basic VF                                          pmd",
        "VfHtmlStyleTagXss                                  visualforce  Security                                                            pmd",
        "VfUnescapeEl                                       visualforce  Security          Basic VF                                          pmd",
        "ApexAssertionsShouldIncludeMessage                 apex         Best Practices                                                      pmd",
        "ApexUnitTestClassShouldHaveAsserts                 apex         Best Practices    quickstart,ApexUnit,Default ruleset...            pmd",
        "ApexUnitTestMethodShouldHaveIsTestAnnotation       apex         Best Practices                                                      pmd",
        "ApexUnitTestShouldNotUseSeeAllDataTrue             apex         Best Practices    quickstart,ApexUnit,Default ruleset...            pmd",
        "AvoidGlobalModifier                                apex         Best Practices    quickstart,Default ruleset...,Style               pmd",
        "AvoidLogicInTrigger                                apex         Best Practices    quickstart,Default ruleset...,Style               pmd",
        "DebugsShouldUseLoggingLevel                        apex         Best Practices    quickstart                                        pmd",
        "UnusedLocalVariable                                apex         Best Practices                                                      pmd",
        "AvoidDebugStatements                               apex         Performance                                                         pmd",
        "AvoidDmlStatementsInLoops                          apex         Performance       Performance,Default ruleset...                    pmd",
        "AvoidSoqlInLoops                                   apex         Performance       Performance,Default ruleset...                    pmd",
        "AvoidSoslInLoops                                   apex         Performance       Performance,Default ruleset...                    pmd",
        "EagerlyLoadedDescribeSObjectResult                 apex         Performance                                                         pmd",
        "OperationWithLimitsInLoop                          apex         Performance       quickstart                                        pmd",
        "ApexBadCrypto                                      apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexCRUDViolation                                  apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexCSRF                                           apex         Security          Security                                          pmd",
        "ApexDangerousMethods                               apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexInsecureEndpoint                               apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexOpenRedirect                                   apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSharingViolations                              apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSOQLInjection                                  apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexSuggestUsingNamedCred                          apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexXSSFromEscapeFalse                             apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ApexXSSFromURLParam                                apex         Security          Security,quickstart,Default ruleset...            pmd",
        "ClassNamingConventions                             apex         Code Style        quickstart,Default ruleset...,Style               pmd",
        "IfElseStmtsMustUseBraces                           apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "IfStmtsMustUseBraces                               apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "FieldDeclarationsShouldBeAtStart                   apex         Code Style                                                          pmd",
        "FieldNamingConventions                             apex         Code Style        quickstart                                        pmd",
        "ForLoopsMustUseBraces                              apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "FormalParameterNamingConventions                   apex         Code Style        quickstart                                        pmd",
        "LocalVariableNamingConventions                     apex         Code Style        quickstart                                        pmd",
        "MethodNamingConventions                            apex         Code Style        quickstart,Default ruleset...,Style               pmd",
        "OneDeclarationPerLine                              apex         Code Style        quickstart,Default ruleset...                     pmd",
        "PropertyNamingConventions                          apex         Code Style        quickstart                                        pmd",
        "VariableNamingConventions                          apex         Code Style        Default ruleset...,Style                          pmd",
        "WhileLoopsMustUseBraces                            apex         Code Style        quickstart,Default ruleset...,Braces              pmd",
        "AvoidDeeplyNestedIfStmts                           apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "CyclomaticComplexity                               apex         Design            quickstart,Default ruleset...,Metrics tempora...  pmd",
        "CognitiveComplexity                                apex         Design                                                              pmd",
        "ExcessiveClassLength                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ExcessiveParameterList                             apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ExcessivePublicCount                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssConstructorCount                               apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssMethodCount                                    apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "NcssTypeCount                                      apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "StdCyclomaticComplexity                            apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "TooManyFields                                      apex         Design            Complexity,quickstart,Default ruleset...          pmd",
        "ApexDoc                                            apex         Documentation     quickstart,Default ruleset...                     pmd",
        "ApexCSRF                                           apex         Error Prone       quickstart,Default ruleset...                     pmd",
        "AvoidDirectAccessTriggerMap                        apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "AvoidHardcodingId                                  apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "AvoidNonExistentAnnotations                        apex         Error Prone       quickstart,Default ruleset...                     pmd",
        "EmptyCatchBlock                                    apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyIfStmt                                        apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyStatementBlock                                apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyTryOrFinallyBlock                             apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "EmptyWhileStmt                                     apex         Error Prone       quickstart,Default ruleset...,Empty Code          pmd",
        "InaccessibleAuraEnabledGetter                      apex         Error Prone                                                         pmd",
        "MethodWithSameNameAsEnclosingClass                 apex         Error Prone       quickstart,Default ruleset...,Style               pmd",
        "OverrideBothEqualsAndHashcode                      apex         Error Prone                                                         pmd",
        "TestMethodsMustBeInTestClasses                     apex         Error Prone                                                         pmd",
        "constructor-super                                  javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "for-direction                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "getter-return                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-async-promise-executor                          javascript   Possible Errors   Possible Errors                                   eslint",
        "no-case-declarations                               javascript   Best Practices    Best Practices                                    eslint",
        "no-class-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-compare-neg-zero                                javascript   Possible Errors   Possible Errors                                   eslint",
        "no-cond-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-const-assign                                    javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-constant-condition                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-control-regex                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-debugger                                        javascript   Possible Errors   Possible Errors                                   eslint",
        "no-delete-var                                      javascript   Variables         Variables                                         eslint",
        "no-dupe-args                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-dupe-class-members                              javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-dupe-keys                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-duplicate-case                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty                                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-character-class                           javascript   Possible Errors   Possible Errors                                   eslint",
        "no-empty-pattern                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-ex-assign                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-boolean-cast                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-extra-semi                                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-fallthrough                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-func-assign                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-global-assign                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-inner-declarations                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-invalid-regexp                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-irregular-whitespace                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-misleading-character-class                      javascript   Possible Errors   Possible Errors                                   eslint",
        "no-mixed-spaces-and-tabs                           javascript   Stylistic Issues  Stylistic Issues                                  eslint",
        "no-new-symbol                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-obj-calls                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "no-octal                                           javascript   Best Practices    Best Practices                                    eslint",
        "no-prototype-builtins                              javascript   Possible Errors   Possible Errors                                   eslint",
        "no-redeclare                                       javascript   Best Practices    Best Practices                                    eslint",
        "no-regex-spaces                                    javascript   Possible Errors   Possible Errors                                   eslint",
        "no-self-assign                                     javascript   Best Practices    Best Practices                                    eslint",
        "no-shadow-restricted-names                         javascript   Variables         Variables                                         eslint",
        "no-sparse-arrays                                   javascript   Possible Errors   Possible Errors                                   eslint",
        "no-this-before-super                               javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "no-undef                                           javascript   Variables         Variables                                         eslint",
        "no-unexpected-multiline                            javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unreachable                                     javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-finally                                  javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unsafe-negation                                 javascript   Possible Errors   Possible Errors                                   eslint",
        "no-unused-labels                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-unused-vars                                     javascript   Variables         Variables                                         eslint",
        "no-useless-catch                                   javascript   Best Practices    Best Practices                                    eslint",
        "no-useless-escape                                  javascript   Best Practices    Best Practices                                    eslint",
        "no-with                                            javascript   Best Practices    Best Practices                                    eslint",
        "require-yield                                      javascript   ECMAScript 6      ECMAScript 6                                      eslint",
        "use-isnan                                          javascript   Possible Errors   Possible Errors                                   eslint",
        "valid-typeof                                       javascript   Possible Errors   Possible Errors                                   eslint",
        "constructor-super                                  typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "for-direction                                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-async-promise-executor                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-case-declarations                               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-class-assign                                    typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-compare-neg-zero                                typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-cond-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-constant-condition                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-control-regex                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-debugger                                        typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-delete-var                                      typescript   Variables         Variables                                         eslint-typescript",
        "no-duplicate-case                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty                                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-character-class                           typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-empty-pattern                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-ex-assign                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-extra-boolean-cast                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-fallthrough                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-func-assign                                     typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-global-assign                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-inner-declarations                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-invalid-regexp                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-irregular-whitespace                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-misleading-character-class                      typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-mixed-spaces-and-tabs                           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "no-obj-calls                                       typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-octal                                           typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-prototype-builtins                              typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-regex-spaces                                    typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-self-assign                                     typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-shadow-restricted-names                         typescript   Variables         Variables                                         eslint-typescript",
        "no-sparse-arrays                                   typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unexpected-multiline                            typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-finally                                  typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unsafe-negation                                 typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "no-unused-labels                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-catch                                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-useless-escape                                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "no-var                                             typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "no-with                                            typescript   Best Practices    Best Practices                                    eslint-typescript",
        "prefer-const                                       typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-rest-params                                 typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "prefer-spread                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "require-yield                                      typescript   ECMAScript 6      ECMAScript 6                                      eslint-typescript",
        "use-isnan                                          typescript   Possible Errors   Possible Errors                                   eslint-typescript",
        "@typescript-eslint/adjacent-overload-signatures    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/await-thenable                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/ban-types                       typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/consistent-type-assertions      typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/explicit-function-return-type   typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/member-delimiter-style          typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-array-constructor            typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-empty-function               typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-empty-interface              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-explicit-any                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-for-in-array                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-inferrable-types             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-new                  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-misused-promises             typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-namespace                    typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-non-null-assertion           typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/no-this-alias                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unnecessary-type-assertion   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/no-unused-vars                  typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-use-before-define            typescript   Variables         Variables                                         eslint-typescript",
        "@typescript-eslint/no-var-requires                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-includes                 typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-namespace-keyword        typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-regexp-exec              typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/prefer-string-starts-ends-with  typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/require-await                   typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/triple-slash-reference          typescript   Best Practices    Best Practices                                    eslint-typescript",
        "@typescript-eslint/type-annotation-spacing         typescript   Stylistic Issues  Stylistic Issues                                  eslint-typescript",
        "@typescript-eslint/unbound-method                  typescript   Best Practices    Best Practices                                    eslint-typescript"
    ],
    "shellcheck": [
        "Usage: shellcheck [OPTIONS...] FILES...",
        "  -a                  --check-sourced            Include warnings from sourced files",
        "  -C[WHEN]            --color[=WHEN]             Use color (auto, always, never)",
        "  -i CODE1,CODE2..    --include=CODE1,CODE2..    Consider only given types of warnings",
        "  -e CODE1,CODE2..    --exclude=CODE1,CODE2..    Exclude types of warnings",
        "  -f FORMAT           --format=FORMAT            Output format (checkstyle, diff, gcc, json, json1, quiet, tty)",
        "                      --list-optional            List checks disabled by default",
        "                      --norc                     Don't look for .shellcheckrc files",
        "  -o check1,check2..  --enable=check1,check2..   List of optional checks to enable (or 'all')",
        "  -P SOURCEPATHS      --source-path=SOURCEPATHS  Specify path when looking for sourced files (\"SCRIPTDIR\" for script's dir)",
        "  -s SHELLNAME        --shell=SHELLNAME          Specify dialect (sh, bash, dash, ksh)",
        "  -S SEVERITY         --severity=SEVERITY        Minimum severity of errors to consider (error, warning, info, style)",
        "  -V                  --version                  Print version information",
        "  -W NUM              --wiki-link-count=NUM      The number of wiki links to show, when applicable",
        "  -x                  --external-sources         Allow 'source' outside of FILES",
        "                      --help                     Show this usage summary and exit",
        ""
    ],
    "shfmt": [
        "usage: shfmt [flags] [path ...]",
        "",
        "shfmt formats shell programs. If the only argument is a dash ('-') or no",
        "arguments are given, standard input will be used. If a given path is a",
        "directory, all shell scripts found under that directory will be used.",
        "",
        "  --version  show version and exit",
        "",
        "  -l,  --list      list files whose formatting differs from shfmt's",
        "  -w,  --write     write result to file instead of stdout",
        "  -d,  --diff      error with a diff when the formatting differs",
        "  -s,  --simplify  simplify the code",
        "  -mn, --minify    minify the code to reduce its size (implies -s)",
        "",
        "Parser options:",
        "",
        "  -ln, --language-dialect str  bash/posix/mksh/bats, default \"auto\"",
        "  -p,  --posix                 shorthand for -ln=posix",
        "  --filename str               provide a name for the standard input file",
        "",
        "Printer options:",
        "",
        "  -i,  --indent uint       0 for tabs (default), >0 for number of spaces",
        "  -bn, --binary-next-line  binary ops like && and | may start a line",
        "  -ci, --case-indent       switch cases will be indented",
        "  -sr, --space-redirects   redirect operators will be followed by a space",
        "  -kp, --keep-padding      keep column alignment paddings",
        "  -fn, --func-next-line    function opening braces are placed on a separate line",
        "",
        "Utilities:",
        "",
        "  -f, --find   recursively find all shell files and print the paths",
        "  --to-json    print syntax tree to stdout as a typed JSON",
        "  --from-json  read syntax tree from stdin as a typed JSON",
        "",
        "For more information, see 'man shfmt' and https://github.com/mvdan/sh."
    ],
    "snakefmt": [
        "Usage: snakefmt [OPTIONS] [SRC]...",
        "",
        "  The uncompromising Snakemake code formatter.",
        "",
        "  SRC specifies directories and files to format. Directories will be searched",
        "  for file names that conform to the include/exclude patterns provided.",
        "",
        "  Files are modified in-place by default; use diff, check, or  `snakefmt - <",
        "  Snakefile` to avoid this.",
        "",
        "Options:",
        "  -l, --line-length INT  Lines longer than INT will be wrapped. [default: 88]",
        "  --check                Don't write the files back, just return the status.",
        "                         Return code 0 means nothing would change. Return code",
        "                         1 means some files would be reformatted. Return code",
        "                         123 means there was an error.",
        "  -d, --diff             Don't write the files back, just output a diff for",
        "                         each file to stdout.",
        "  --compact-diff         Same as --diff but only shows lines that would change",
        "                         plus a few lines of context.",
        "  --include PATTERN      A regular expression that matches files and",
        "                         directories that should be included on recursive",
        "                         searches.  An empty value means all files are",
        "                         included regardless of the name.  Use forward slashes",
        "                         for directories on all platforms (Windows, too).",
        "                         Exclusions are calculated first, inclusions later.",
        "                         [default: (\\.smk$|^Snakefile)]",
        "  --exclude PATTERN      A regular expression that matches files and",
        "                         directories that should be excluded on recursive",
        "                         searches.  An empty value means no paths are",
        "                         excluded. Use forward slashes for directories on all",
        "                         platforms (Windows, too). Exclusions are calculated",
        "                         first, inclusions later.  [default: (\\.snakemake|\\.eg",
        "                         gs|\\.git|\\.hg|\\.mypy_cache|\\.nox|\\.tox|\\.venv|\\.svn|_",
        "                         build|buck-out|build|dist)]",
        "  -c, --config PATH      Read configuration from PATH. By default, will try to",
        "                         read from `./pyproject.toml`",
        "  -h, --help             Show this message and exit.",
        "  -V, --version          Show the version and exit.",
        "  -v, --verbose          Turns on debug-level logger."
    ],
    "snakemake": [
        "usage: snakemake [-h] [--dry-run] [--profile PROFILE] [--cache [RULE ...]]",
        "                 [--snakefile FILE] [--cores [N]] [--jobs [N]]",
        "                 [--local-cores N] [--resources [NAME=INT ...]]",
        "                 [--set-threads RULE=THREADS [RULE=THREADS ...]]",
        "                 [--max-threads MAX_THREADS]",
        "                 [--set-resources RULE:RESOURCE=VALUE [RULE:RESOURCE=VALUE ...]]",
        "                 [--set-scatter NAME=SCATTERITEMS [NAME=SCATTERITEMS ...]]",
        "                 [--set-resource-scopes RESOURCE=[global|local]",
        "                 [RESOURCE=[global|local] ...]]",
        "                 [--default-resources [NAME=INT ...]]",
        "                 [--preemption-default PREEMPTION_DEFAULT]",
        "                 [--preemptible-rules PREEMPTIBLE_RULES [PREEMPTIBLE_RULES ...]]",
        "                 [--config [KEY=VALUE ...]] [--configfile FILE [FILE ...]]",
        "                 [--envvars VARNAME [VARNAME ...]] [--directory DIR] [--touch]",
        "                 [--keep-going]",
        "                 [--rerun-triggers {mtime,params,input,software-env,code} [{mtime,params,input,software-env,code} ...]]",
        "                 [--force] [--forceall] [--forcerun [TARGET ...]]",
        "                 [--prioritize TARGET [TARGET ...]]",
        "                 [--batch RULE=BATCH/BATCHES] [--until TARGET [TARGET ...]]",
        "                 [--omit-from TARGET [TARGET ...]] [--rerun-incomplete]",
        "                 [--shadow-prefix DIR] [--scheduler [{ilp,greedy}]]",
        "                 [--wms-monitor [WMS_MONITOR]]",
        "                 [--wms-monitor-arg [NAME=VALUE ...]]",
        "                 [--scheduler-ilp-solver {PULP_CBC_CMD}]",
        "                 [--scheduler-solver-path SCHEDULER_SOLVER_PATH]",
        "                 [--conda-base-path CONDA_BASE_PATH] [--no-subworkflows]",
        "                 [--groups GROUPS [GROUPS ...]]",
        "                 [--group-components GROUP_COMPONENTS [GROUP_COMPONENTS ...]]",
        "                 [--report [FILE]] [--report-stylesheet CSSFILE]",
        "                 [--draft-notebook TARGET] [--edit-notebook TARGET]",
        "                 [--notebook-listen IP:PORT] [--lint [{text,json}]]",
        "                 [--generate-unit-tests [TESTPATH]] [--containerize]",
        "                 [--export-cwl FILE] [--list] [--list-target-rules] [--dag]",
        "                 [--rulegraph] [--filegraph] [--d3dag] [--summary]",
        "                 [--detailed-summary] [--archive FILE]",
        "                 [--cleanup-metadata FILE [FILE ...]] [--cleanup-shadow]",
        "                 [--skip-script-cleanup] [--unlock] [--list-version-changes]",
        "                 [--list-code-changes] [--list-input-changes]",
        "                 [--list-params-changes] [--list-untracked]",
        "                 [--delete-all-output] [--delete-temp-output]",
        "                 [--bash-completion] [--keep-incomplete] [--drop-metadata]",
        "                 [--version] [--reason] [--gui [PORT]] [--printshellcmds]",
        "                 [--debug-dag] [--stats FILE] [--nocolor]",
        "                 [--quiet [{progress,rules,all} ...]] [--print-compilation]",
        "                 [--verbose] [--force-use-threads] [--allow-ambiguity]",
        "                 [--nolock] [--ignore-incomplete]",
        "                 [--max-inventory-time SECONDS] [--latency-wait SECONDS]",
        "                 [--wait-for-files [FILE ...]] [--wait-for-files-file FILE]",
        "                 [--notemp] [--all-temp] [--keep-remote] [--keep-target-files]",
        "                 [--allowed-rules ALLOWED_RULES [ALLOWED_RULES ...]]",
        "                 [--local-groupid LOCAL_GROUPID]",
        "                 [--max-jobs-per-second MAX_JOBS_PER_SECOND]",
        "                 [--max-status-checks-per-second MAX_STATUS_CHECKS_PER_SECOND]",
        "                 [-T RETRIES] [--attempt ATTEMPT]",
        "                 [--wrapper-prefix WRAPPER_PREFIX]",
        "                 [--default-remote-provider {S3,GS,FTP,SFTP,S3Mocked,gfal,gridftp,iRODS,AzBlob,XRootD}]",
        "                 [--default-remote-prefix DEFAULT_REMOTE_PREFIX]",
        "                 [--no-shared-fs] [--greediness GREEDINESS] [--no-hooks]",
        "                 [--overwrite-shellcmd OVERWRITE_SHELLCMD] [--debug]",
        "                 [--runtime-profile FILE] [--mode {0,1,2}]",
        "                 [--show-failed-logs] [--log-handler-script FILE]",
        "                 [--log-service {none,slack,wms}]",
        "                 [--cluster CMD | --cluster-sync CMD | --drmaa [ARGS]]",
        "                 [--cluster-config FILE] [--immediate-submit]",
        "                 [--jobscript SCRIPT] [--jobname NAME]",
        "                 [--cluster-status CLUSTER_STATUS]",
        "                 [--cluster-cancel CLUSTER_CANCEL]",
        "                 [--cluster-cancel-nargs CLUSTER_CANCEL_NARGS]",
        "                 [--cluster-sidecar CLUSTER_SIDECAR] [--drmaa-log-dir DIR]",
        "                 [--kubernetes [NAMESPACE]] [--container-image IMAGE]",
        "                 [--tibanna] [--tibanna-sfn TIBANNA_SFN]",
        "                 [--precommand PRECOMMAND]",
        "                 [--tibanna-config TIBANNA_CONFIG [TIBANNA_CONFIG ...]]",
        "                 [--google-lifesciences]",
        "                 [--google-lifesciences-regions GOOGLE_LIFESCIENCES_REGIONS [GOOGLE_LIFESCIENCES_REGIONS ...]]",
        "                 [--google-lifesciences-location GOOGLE_LIFESCIENCES_LOCATION]",
        "                 [--google-lifesciences-keep-cache] [--tes URL] [--use-conda]",
        "                 [--conda-not-block-search-path-envvars] [--list-conda-envs]",
        "                 [--conda-prefix DIR] [--conda-cleanup-envs]",
        "                 [--conda-cleanup-pkgs [{tarballs,cache}]]",
        "                 [--conda-create-envs-only] [--conda-frontend {conda,mamba}]",
        "                 [--use-singularity] [--singularity-prefix DIR]",
        "                 [--singularity-args ARGS] [--use-envmodules]",
        "                 [target ...]",
        "",
        "Snakemake is a Python based language and execution environment for GNU Make-",
        "like workflows.",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "",
        "EXECUTION:",
        "  target                Targets to build. May be rules or files. (default:",
        "                        None)",
        "  --dry-run, --dryrun, -n",
        "                        Do not execute anything, and display what would be",
        "                        done. If you have a very large workflow, use --dry-run",
        "                        --quiet to just print a summary of the DAG of jobs.",
        "                        (default: False)",
        "  --profile PROFILE     Name of profile to use for configuring Snakemake.",
        "                        Snakemake will search for a corresponding folder in",
        "                        /etc/xdg/snakemake and /root/.config/snakemake.",
        "                        Alternatively, this can be an absolute or relative",
        "                        path. The profile folder has to contain a file",
        "                        'config.yaml'. This file can be used to set default",
        "                        values for command line options in YAML format. For",
        "                        example, '--cluster qsub' becomes 'cluster: qsub' in",
        "                        the YAML file. Profiles can be obtained from",
        "                        https://github.com/snakemake-profiles. The profile can",
        "                        also be set via the environment variable",
        "                        $SNAKEMAKE_PROFILE. [env var: SNAKEMAKE_PROFILE]",
        "                        (default: None)",
        "  --cache [RULE ...]    Store output files of given rules in a central cache",
        "                        given by the environment variable",
        "                        $SNAKEMAKE_OUTPUT_CACHE. Likewise, retrieve output",
        "                        files of the given rules from this cache if they have",
        "                        been created before (by anybody writing to the same",
        "                        cache), instead of actually executing the rules.",
        "                        Output files are identified by hashing all steps,",
        "                        parameters and software stack (conda envs or",
        "                        containers) needed to create them. (default: None)",
        "  --snakefile FILE, -s FILE",
        "                        The workflow definition in form of a",
        "                        snakefile.Usually, you should not need to specify",
        "                        this. By default, Snakemake will search for",
        "                        'Snakefile', 'snakefile', 'workflow/Snakefile',",
        "                        'workflow/snakefile' beneath the current working",
        "                        directory, in this order. Only if you definitely want",
        "                        a different layout, you need to use this parameter.",
        "                        (default: None)",
        "  --cores [N], -c [N]   Use at most N CPU cores/jobs in parallel. If N is",
        "                        omitted or 'all', the limit is set to the number of",
        "                        available CPU cores. In case of cluster/cloud",
        "                        execution, this argument sets the maximum number of",
        "                        cores requested from the cluster or cloud scheduler.",
        "                        (See https://snakemake.readthedocs.io/en/stable/snakef",
        "                        iles/rules.html#resources-remote-execution for more",
        "                        info)This number is available to rules via",
        "                        workflow.cores. (default: None)",
        "  --jobs [N], -j [N]    Use at most N CPU cluster/cloud jobs in parallel. For",
        "                        local execution this is an alias for --cores.",
        "                        (default: None)",
        "  --local-cores N       In cluster/cloud mode, use at most N cores of the host",
        "                        machine in parallel (default: number of CPU cores of",
        "                        the host). The cores are used to execute local rules.",
        "                        This option is ignored when not in cluster/cloud mode.",
        "                        (default: 2)",
        "  --resources [NAME=INT ...], --res [NAME=INT ...]",
        "                        Define additional resources that shall constrain the",
        "                        scheduling analogously to --cores (see above). A",
        "                        resource is defined as a name and an integer value.",
        "                        E.g. --resources mem_mb=1000. Rules can use resources",
        "                        by defining the resource keyword, e.g. resources:",
        "                        mem_mb=600. If now two rules require 600 of the",
        "                        resource 'mem_mb' they won't be run in parallel by the",
        "                        scheduler. In cluster/cloud mode, this argument will",
        "                        also constrain the amount of resources requested from",
        "                        the server. (See https://snakemake.readthedocs.io/en/s",
        "                        table/snakefiles/rules.html#resources-remote-execution",
        "                        for more info) (default: None)",
        "  --set-threads RULE=THREADS [RULE=THREADS ...]",
        "                        Overwrite thread usage of rules. This allows to fine-",
        "                        tune workflow parallelization. In particular, this is",
        "                        helpful to target certain cluster nodes by e.g.",
        "                        shifting a rule to use more, or less threads than",
        "                        defined in the workflow. Thereby, THREADS has to be a",
        "                        positive integer, and RULE has to be the name of the",
        "                        rule. (default: None)",
        "  --max-threads MAX_THREADS",
        "                        Define a global maximum number of threads available to",
        "                        any rule. Rules requesting more threads (via the",
        "                        threads keyword) will have their values reduced to the",
        "                        maximum. This can be useful when you want to restrict",
        "                        the maximum number of threads without modifying the",
        "                        workflow definition or overwriting rules individually",
        "                        with --set-threads. (default: None)",
        "  --set-resources RULE:RESOURCE=VALUE [RULE:RESOURCE=VALUE ...]",
        "                        Overwrite resource usage of rules. This allows to",
        "                        fine-tune workflow resources. In particular, this is",
        "                        helpful to target certain cluster nodes by e.g.",
        "                        defining a certain partition for a rule, or overriding",
        "                        a temporary directory. Thereby, VALUE has to be a",
        "                        positive integer or a string, RULE has to be the name",
        "                        of the rule, and RESOURCE has to be the name of the",
        "                        resource. (default: None)",
        "  --set-scatter NAME=SCATTERITEMS [NAME=SCATTERITEMS ...]",
        "                        Overwrite number of scatter items of scattergather",
        "                        processes. This allows to fine-tune workflow",
        "                        parallelization. Thereby, SCATTERITEMS has to be a",
        "                        positive integer, and NAME has to be the name of the",
        "                        scattergather process defined via a scattergather",
        "                        directive in the workflow. (default: None)",
        "  --set-resource-scopes RESOURCE=[global|local] [RESOURCE=[global|local] ...]",
        "                        Overwrite resource scopes. A scope determines how a",
        "                        constraint is reckoned in cluster execution. With",
        "                        RESOURCE=local, a constraint applied to RESOURCE using",
        "                        --resources will be considered the limit for each",
        "                        group submission. With RESOURCE=global, the constraint",
        "                        will apply across all groups cumulatively. By default,",
        "                        only `mem_mb` and `disk_mb` are considered local, all",
        "                        other resources are global. This may be modified in",
        "                        the snakefile using the `resource_scopes:` directive.",
        "                        Note that number of threads, specified via --cores, is",
        "                        always considered local. (See https://snakemake.readth",
        "                        edocs.io/en/stable/snakefiles/rules.html#resources-",
        "                        remote-execution for more info) (default: None)",
        "  --default-resources [NAME=INT ...], --default-res [NAME=INT ...]",
        "                        Define default values of resources for rules that do",
        "                        not define their own values. In addition to plain",
        "                        integers, python expressions over inputsize are",
        "                        allowed (e.g. '2*input.size_mb').When specifying this",
        "                        without any arguments (--default-resources), it",
        "                        defines 'mem_mb=max(2*input.size_mb, 1000)'",
        "                        'disk_mb=max(2*input.size_mb, 1000)' i.e., default",
        "                        disk and mem usage is twice the input file size but at",
        "                        least 1GB.In addition, the system temporary directory",
        "                        (as given by $TMPDIR, $TEMP, or $TMP) is used for the",
        "                        tmpdir resource. The tmpdir resource is automatically",
        "                        used by shell commands, scripts and wrappers to store",
        "                        temporary data (as it is mirrored into $TMPDIR, $TEMP,",
        "                        and $TMP for the executed subprocesses). If this",
        "                        argument is not specified at all, Snakemake just uses",
        "                        the tmpdir resource as outlined above. (default: None)",
        "  --preemption-default PREEMPTION_DEFAULT",
        "                        A preemptible instance can be requested when using the",
        "                        Google Life Sciences API. If you set a --preemption-",
        "                        default,all rules will be subject to the default.",
        "                        Specifically, this integer is the number of restart",
        "                        attempts that will be made given that the instance is",
        "                        killed unexpectedly. Note that preemptible instances",
        "                        have a maximum running time of 24 hours. If you want",
        "                        to set preemptible instances for only a subset of",
        "                        rules, use --preemptible-rules instead. (default:",
        "                        None)",
        "  --preemptible-rules PREEMPTIBLE_RULES [PREEMPTIBLE_RULES ...]",
        "                        A preemptible instance can be requested when using the",
        "                        Google Life Sciences API. If you want to use these",
        "                        instances for a subset of your rules, you can use",
        "                        --preemptible-rules and then specify a list of rule",
        "                        and integer pairs, where each integer indicates the",
        "                        number of restarts to use for the rule's instance in",
        "                        the case that the instance is terminated unexpectedly.",
        "                        --preemptible-rules can be used in combination with",
        "                        --preemption-default, and will take priority. Note",
        "                        that preemptible instances have a maximum running time",
        "                        of 24. If you want to apply a consistent number of",
        "                        retries across all your rules, use --premption-default",
        "                        instead. Example: snakemake --preemption-default 10",
        "                        --preemptible-rules map_reads=3 call_variants=0",
        "                        (default: None)",
        "  --config [KEY=VALUE ...], -C [KEY=VALUE ...]",
        "                        Set or overwrite values in the workflow config object.",
        "                        The workflow config object is accessible as variable",
        "                        config inside the workflow. Default values can be set",
        "                        by providing a JSON file (see Documentation).",
        "                        (default: None)",
        "  --configfile FILE [FILE ...], --configfiles FILE [FILE ...]",
        "                        Specify or overwrite the config file of the workflow",
        "                        (see the docs). Values specified in JSON or YAML",
        "                        format are available in the global config dictionary",
        "                        inside the workflow. Multiple files overwrite each",
        "                        other in the given order. Thereby missing keys in",
        "                        previous config files are extended by following",
        "                        configfiles. Note that this order also includes a",
        "                        config file defined in the workflow definition itself",
        "                        (which will come first). (default: None)",
        "  --envvars VARNAME [VARNAME ...]",
        "                        Environment variables to pass to cloud jobs. (default:",
        "                        None)",
        "  --directory DIR, -d DIR",
        "                        Specify working directory (relative paths in the",
        "                        snakefile will use this as their origin). (default:",
        "                        None)",
        "  --touch, -t           Touch output files (mark them up to date without",
        "                        really changing them) instead of running their",
        "                        commands. This is used to pretend that the rules were",
        "                        executed, in order to fool future invocations of",
        "                        snakemake. Fails if a file does not yet exist. Note",
        "                        that this will only touch files that would otherwise",
        "                        be recreated by Snakemake (e.g. because their input",
        "                        files are newer). For enforcing a touch, combine this",
        "                        with --force, --forceall, or --forcerun. Note however",
        "                        that you loose the provenance information when the",
        "                        files have been created in realitiy. Hence, this",
        "                        should be used only as a last resort. (default: False)",
        "  --keep-going, -k      Go on with independent jobs if a job fails. (default:",
        "                        False)",
        "  --rerun-triggers {mtime,params,input,software-env,code} [{mtime,params,input,software-env,code} ...]",
        "                        Define what triggers the rerunning of a job. By",
        "                        default, all triggers are used, which guarantees that",
        "                        results are consistent with the workflow code and",
        "                        configuration. If you rather prefer the traditional",
        "                        way of just considering file modification dates, use '",
        "                        --rerun-trigger mtime'. (default: ['mtime', 'params',",
        "                        'input', 'software-env', 'code'])",
        "  --force, -f           Force the execution of the selected target or the",
        "                        first rule regardless of already created output.",
        "                        (default: False)",
        "  --forceall, -F        Force the execution of the selected (or the first)",
        "                        rule and all rules it is dependent on regardless of",
        "                        already created output. (default: False)",
        "  --forcerun [TARGET ...], -R [TARGET ...]",
        "                        Force the re-execution or creation of the given rules",
        "                        or files. Use this option if you changed a rule and",
        "                        want to have all its output in your workflow updated.",
        "                        (default: None)",
        "  --prioritize TARGET [TARGET ...], -P TARGET [TARGET ...]",
        "                        Tell the scheduler to assign creation of given targets",
        "                        (and all their dependencies) highest priority.",
        "                        (EXPERIMENTAL) (default: None)",
        "  --batch RULE=BATCH/BATCHES",
        "                        Only create the given BATCH of the input files of the",
        "                        given RULE. This can be used to iteratively run parts",
        "                        of very large workflows. Only the execution plan of",
        "                        the relevant part of the workflow has to be",
        "                        calculated, thereby speeding up DAG computation. It is",
        "                        recommended to provide the most suitable rule for",
        "                        batching when documenting a workflow. It should be",
        "                        some aggregating rule that would be executed only",
        "                        once, and has a large number of input files. For",
        "                        example, it can be a rule that aggregates over",
        "                        samples. (default: None)",
        "  --until TARGET [TARGET ...], -U TARGET [TARGET ...]",
        "                        Runs the pipeline until it reaches the specified rules",
        "                        or files. Only runs jobs that are dependencies of the",
        "                        specified rule or files, does not run sibling DAGs.",
        "                        (default: None)",
        "  --omit-from TARGET [TARGET ...], -O TARGET [TARGET ...]",
        "                        Prevent the execution or creation of the given rules",
        "                        or files as well as any rules or files that are",
        "                        downstream of these targets in the DAG. Also runs jobs",
        "                        in sibling DAGs that are independent of the rules or",
        "                        files specified here. (default: None)",
        "  --rerun-incomplete, --ri",
        "                        Re-run all jobs the output of which is recognized as",
        "                        incomplete. (default: False)",
        "  --shadow-prefix DIR   Specify a directory in which the 'shadow' directory is",
        "                        created. If not supplied, the value is set to the",
        "                        '.snakemake' directory relative to the working",
        "                        directory. (default: None)",
        "  --scheduler [{ilp,greedy}]",
        "                        Specifies if jobs are selected by a greedy algorithm",
        "                        or by solving an ilp. The ilp scheduler aims to reduce",
        "                        runtime and hdd usage by best possible use of",
        "                        resources. (default: greedy)",
        "  --wms-monitor [WMS_MONITOR]",
        "                        IP and port of workflow management system to monitor",
        "                        the execution of snakemake (e.g.",
        "                        http://127.0.0.1:5000) Note that if your service",
        "                        requires an authorization token, you must export",
        "                        WMS_MONITOR_TOKEN in the environment. (default: None)",
        "  --wms-monitor-arg [NAME=VALUE ...]",
        "                        If the workflow management service accepts extra",
        "                        arguments, provide. them in key value pairs with",
        "                        --wms-monitor-arg. For example, to run an existing",
        "                        workflow using a wms monitor, you can provide the pair",
        "                        id=12345 and the arguments will be provided to the",
        "                        endpoint to first interact with the workflow (default:",
        "                        None)",
        "  --scheduler-ilp-solver {PULP_CBC_CMD}",
        "                        Specifies solver to be utilized when selecting ilp-",
        "                        scheduler. (default: COIN_CMD)",
        "  --scheduler-solver-path SCHEDULER_SOLVER_PATH",
        "                        Set the PATH to search for scheduler solver binaries",
        "                        (internal use only). (default: None)",
        "  --conda-base-path CONDA_BASE_PATH",
        "                        Path of conda base installation (home of conda, mamba,",
        "                        activate) (internal use only). (default: None)",
        "  --no-subworkflows, --nosw",
        "                        Do not evaluate or execute subworkflows. (default:",
        "                        False)",
        "",
        "GROUPING:",
        "  --groups GROUPS [GROUPS ...]",
        "                        Assign rules to groups (this overwrites any group",
        "                        definitions from the workflow). (default: None)",
        "  --group-components GROUP_COMPONENTS [GROUP_COMPONENTS ...]",
        "                        Set the number of connected components a group is",
        "                        allowed to span. By default, this is 1, but this flag",
        "                        allows to extend this. This can be used to run e.g. 3",
        "                        jobs of the same rule in the same group, although they",
        "                        are not connected. It can be helpful for putting",
        "                        together many small jobs or benefitting of shared",
        "                        memory setups. (default: None)",
        "",
        "REPORTS:",
        "  --report [FILE]       Create an HTML report with results and statistics.",
        "                        This can be either a .html file or a .zip file. In the",
        "                        former case, all results are embedded into the .html",
        "                        (this only works for small data). In the latter case,",
        "                        results are stored along with a file report.html in",
        "                        the zip archive. If no filename is given, an embedded",
        "                        report.html is the default. (default: None)",
        "  --report-stylesheet CSSFILE",
        "                        Custom stylesheet to use for report. In particular,",
        "                        this can be used for branding the report with e.g. a",
        "                        custom logo, see docs. (default: None)",
        "",
        "NOTEBOOKS:",
        "  --draft-notebook TARGET",
        "                        Draft a skeleton notebook for the rule used to",
        "                        generate the given target file. This notebook can then",
        "                        be opened in a jupyter server, exeucted and",
        "                        implemented until ready. After saving, it will",
        "                        automatically be reused in non-interactive mode by",
        "                        Snakemake for subsequent jobs. (default: None)",
        "  --edit-notebook TARGET",
        "                        Interactively edit the notebook associated with the",
        "                        rule used to generate the given target file. This will",
        "                        start a local jupyter notebook server. Any changes to",
        "                        the notebook should be saved, and the server has to be",
        "                        stopped by closing the notebook and hitting the 'Quit'",
        "                        button on the jupyter dashboard. Afterwards, the",
        "                        updated notebook will be automatically stored in the",
        "                        path defined in the rule. If the notebook is not yet",
        "                        present, this will create an empty draft. (default:",
        "                        None)",
        "  --notebook-listen IP:PORT",
        "                        The IP address and PORT the notebook server used for",
        "                        editing the notebook (--edit-notebook) will listen on.",
        "                        (default: localhost:8888)",
        "",
        "UTILITIES:",
        "  --lint [{text,json}]  Perform linting on the given workflow. This will print",
        "                        snakemake specific suggestions to improve code quality",
        "                        (work in progress, more lints to be added in the",
        "                        future). If no argument is provided, plain text output",
        "                        is used. (default: None)",
        "  --generate-unit-tests [TESTPATH]",
        "                        Automatically generate unit tests for each workflow",
        "                        rule. This assumes that all input files of each job",
        "                        are already present. Rules without a job with present",
        "                        input files will be skipped (a warning will be",
        "                        issued). For each rule, one test case will be created",
        "                        in the specified test folder (.tests/unit by default).",
        "                        After successfull execution, tests can be run with",
        "                        'pytest TESTPATH'. (default: None)",
        "  --containerize        Print a Dockerfile that provides an execution",
        "                        environment for the workflow, including all conda",
        "                        environments. (default: False)",
        "  --export-cwl FILE     Compile workflow to CWL and store it in given FILE.",
        "                        (default: None)",
        "  --list, -l            Show available rules in given Snakefile. (default:",
        "                        False)",
        "  --list-target-rules, --lt",
        "                        Show available target rules in given Snakefile.",
        "                        (default: False)",
        "  --dag                 Do not execute anything and print the directed acyclic",
        "                        graph of jobs in the dot language. Recommended use on",
        "                        Unix systems: snakemake --dag | dot | displayNote",
        "                        print statements in your Snakefile may interfere with",
        "                        visualization. (default: False)",
        "  --rulegraph           Do not execute anything and print the dependency graph",
        "                        of rules in the dot language. This will be less",
        "                        crowded than above DAG of jobs, but also show less",
        "                        information. Note that each rule is displayed once,",
        "                        hence the displayed graph will be cyclic if a rule",
        "                        appears in several steps of the workflow. Use this if",
        "                        above option leads to a DAG that is too large.",
        "                        Recommended use on Unix systems: snakemake --rulegraph",
        "                        | dot | displayNote print statements in your Snakefile",
        "                        may interfere with visualization. (default: False)",
        "  --filegraph           Do not execute anything and print the dependency graph",
        "                        of rules with their input and output files in the dot",
        "                        language. This is an intermediate solution between",
        "                        above DAG of jobs and the rule graph. Note that each",
        "                        rule is displayed once, hence the displayed graph will",
        "                        be cyclic if a rule appears in several steps of the",
        "                        workflow. Use this if above option leads to a DAG that",
        "                        is too large. Recommended use on Unix systems:",
        "                        snakemake --filegraph | dot | displayNote print",
        "                        statements in your Snakefile may interfere with",
        "                        visualization. (default: False)",
        "  --d3dag               Print the DAG in D3.js compatible JSON format.",
        "                        (default: False)",
        "  --summary, -S         Print a summary of all files created by the workflow.",
        "                        The has the following columns: filename, modification",
        "                        time, rule version, status, plan. Thereby rule version",
        "                        contains the versionthe file was created with (see the",
        "                        version keyword of rules), and status denotes whether",
        "                        the file is missing, its input files are newer or if",
        "                        version or implementation of the rule changed since",
        "                        file creation. Finally the last column denotes whether",
        "                        the file will be updated or created during the next",
        "                        workflow execution. (default: False)",
        "  --detailed-summary, -D",
        "                        Print a summary of all files created by the workflow.",
        "                        The has the following columns: filename, modification",
        "                        time, rule version, input file(s), shell command,",
        "                        status, plan. Thereby rule version contains the",
        "                        version the file was created with (see the version",
        "                        keyword of rules), and status denotes whether the file",
        "                        is missing, its input files are newer or if version or",
        "                        implementation of the rule changed since file",
        "                        creation. The input file and shell command columns are",
        "                        self explanatory. Finally the last column denotes",
        "                        whether the file will be updated or created during the",
        "                        next workflow execution. (default: False)",
        "  --archive FILE        Archive the workflow into the given tar archive FILE.",
        "                        The archive will be created such that the workflow can",
        "                        be re-executed on a vanilla system. The function needs",
        "                        conda and git to be installed. It will archive every",
        "                        file that is under git version control. Note that it",
        "                        is best practice to have the Snakefile, config files,",
        "                        and scripts under version control. Hence, they will be",
        "                        included in the archive. Further, it will add input",
        "                        files that are not generated by by the workflow itself",
        "                        and conda environments. Note that symlinks are",
        "                        dereferenced. Supported formats are .tar, .tar.gz,",
        "                        .tar.bz2 and .tar.xz. (default: None)",
        "  --cleanup-metadata FILE [FILE ...], --cm FILE [FILE ...]",
        "                        Cleanup the metadata of given files. That means that",
        "                        snakemake removes any tracked version info, and any",
        "                        marks that files are incomplete. (default: None)",
        "  --cleanup-shadow      Cleanup old shadow directories which have not been",
        "                        deleted due to failures or power loss. (default:",
        "                        False)",
        "  --skip-script-cleanup",
        "                        Don't delete wrapper scripts used for execution",
        "                        (default: False)",
        "  --unlock              Remove a lock on the working directory. (default:",
        "                        False)",
        "  --list-version-changes, --lv",
        "                        List all output files that have been created with a",
        "                        different version (as determined by the version",
        "                        keyword). (default: False)",
        "  --list-code-changes, --lc",
        "                        List all output files for which the rule body (run or",
        "                        shell) have changed in the Snakefile. (default: False)",
        "  --list-input-changes, --li",
        "                        List all output files for which the defined input",
        "                        files have changed in the Snakefile (e.g. new input",
        "                        files were added in the rule definition or files were",
        "                        renamed). For listing input file modification in the",
        "                        filesystem, use --summary. (default: False)",
        "  --list-params-changes, --lp",
        "                        List all output files for which the defined params",
        "                        have changed in the Snakefile. (default: False)",
        "  --list-untracked, --lu",
        "                        List all files in the working directory that are not",
        "                        used in the workflow. This can be used e.g. for",
        "                        identifying leftover files. Hidden files and",
        "                        directories are ignored. (default: False)",
        "  --delete-all-output   Remove all files generated by the workflow. Use",
        "                        together with --dry-run to list files without actually",
        "                        deleting anything. Note that this will not recurse",
        "                        into subworkflows. Write-protected files are not",
        "                        removed. Nevertheless, use with care! (default: False)",
        "  --delete-temp-output  Remove all temporary files generated by the workflow.",
        "                        Use together with --dry-run to list files without",
        "                        actually deleting anything. Note that this will not",
        "                        recurse into subworkflows. (default: False)",
        "  --bash-completion     Output code to register bash completion for snakemake.",
        "                        Put the following in your .bashrc (including the",
        "                        accents): `snakemake --bash-completion` or issue it in",
        "                        an open terminal session. (default: False)",
        "  --keep-incomplete     Do not remove incomplete output files by failed jobs.",
        "                        (default: False)",
        "  --drop-metadata       Drop metadata file tracking information after job",
        "                        finishes. Provenance-information based reports (e.g.",
        "                        --report and the --list_x_changes functions) will be",
        "                        empty or incomplete. (default: False)",
        "  --version, -v         show program's version number and exit",
        "",
        "OUTPUT:",
        "  --reason, -r          Print the reason for each executed rule (deprecated,",
        "                        always true now). (default: False)",
        "  --gui [PORT]          Serve an HTML based user interface to the given",
        "                        network and port e.g. 168.129.10.15:8000. By default",
        "                        Snakemake is only available in the local network",
        "                        (default port: 8000). To make Snakemake listen to all",
        "                        ip addresses add the special host address 0.0.0.0 to",
        "                        the url (0.0.0.0:8000). This is important if Snakemake",
        "                        is used in a virtualised environment like Docker. If",
        "                        possible, a browser window is opened. (default: None)",
        "  --printshellcmds, -p  Print out the shell commands that will be executed.",
        "                        (default: False)",
        "  --debug-dag           Print candidate and selected jobs (including their",
        "                        wildcards) while inferring DAG. This can help to debug",
        "                        unexpected DAG topology or errors. (default: False)",
        "  --stats FILE          Write stats about Snakefile execution in JSON format",
        "                        to the given file. (default: None)",
        "  --nocolor             Do not use a colored output. (default: False)",
        "  --quiet [{progress,rules,all} ...], -q [{progress,rules,all} ...]",
        "                        Do not output certain information. If used without",
        "                        arguments, do not output any progress or rule",
        "                        information. Defining 'all' results in no information",
        "                        being printed at all. (default: None)",
        "  --print-compilation   Print the python representation of the workflow.",
        "                        (default: False)",
        "  --verbose             Print debugging output. (default: False)",
        "",
        "BEHAVIOR:",
        "  --force-use-threads   Force threads rather than processes. Helpful if shared",
        "                        memory (/dev/shm) is full or unavailable. (default:",
        "                        False)",
        "  --allow-ambiguity, -a",
        "                        Don't check for ambiguous rules and simply use the",
        "                        first if several can produce the same file. This",
        "                        allows the user to prioritize rules by their order in",
        "                        the snakefile. (default: False)",
        "  --nolock              Do not lock the working directory (default: False)",
        "  --ignore-incomplete, --ii",
        "                        Do not check for incomplete output files. (default:",
        "                        False)",
        "  --max-inventory-time SECONDS",
        "                        Spend at most SECONDS seconds to create a file",
        "                        inventory for the working directory. The inventory",
        "                        vastly speeds up file modification and existence",
        "                        checks when computing which jobs need to be executed.",
        "                        However, creating the inventory itself can be slow,",
        "                        e.g. on network file systems. Hence, we do not spend",
        "                        more than a given amount of time and fall back to",
        "                        individual checks for the rest. (default: 20)",
        "  --latency-wait SECONDS, --output-wait SECONDS, -w SECONDS",
        "                        Wait given seconds if an output file of a job is not",
        "                        present after the job finished. This helps if your",
        "                        filesystem suffers from latency (default 5). (default:",
        "                        5)",
        "  --wait-for-files [FILE ...]",
        "                        Wait --latency-wait seconds for these files to be",
        "                        present before executing the workflow. This option is",
        "                        used internally to handle filesystem latency in",
        "                        cluster environments. (default: None)",
        "  --wait-for-files-file FILE",
        "                        Same behaviour as --wait-for-files, but file list is",
        "                        stored in file instead of being passed on the",
        "                        commandline. This is useful when the list of files is",
        "                        too long to be passed on the commandline. (default:",
        "                        None)",
        "  --notemp, --nt        Ignore temp() declarations. This is useful when",
        "                        running only a part of the workflow, since temp()",
        "                        would lead to deletion of probably needed files by",
        "                        other parts of the workflow. (default: False)",
        "  --all-temp            Mark all output files as temp files. This can be",
        "                        useful for CI testing, in order to save space.",
        "                        (default: False)",
        "  --keep-remote         Keep local copies of remote input files. (default:",
        "                        False)",
        "  --keep-target-files   Do not adjust the paths of given target files relative",
        "                        to the working directory. (default: False)",
        "  --allowed-rules ALLOWED_RULES [ALLOWED_RULES ...]",
        "                        Only consider given rules. If omitted, all rules in",
        "                        Snakefile are used. Note that this is intended",
        "                        primarily for internal use and may lead to unexpected",
        "                        results otherwise. (default: None)",
        "  --local-groupid LOCAL_GROUPID",
        "                        Name for local groupid, meant for internal use only.",
        "                        (default: local)",
        "  --max-jobs-per-second MAX_JOBS_PER_SECOND",
        "                        Maximal number of cluster/drmaa jobs per second,",
        "                        default is 10, fractions allowed. (default: 10)",
        "  --max-status-checks-per-second MAX_STATUS_CHECKS_PER_SECOND",
        "                        Maximal number of job status checks per second,",
        "                        default is 10, fractions allowed. (default: 10)",
        "  -T RETRIES, --retries RETRIES, --restart-times RETRIES",
        "                        Number of times to restart failing jobs (defaults to",
        "                        0). (default: 0)",
        "  --attempt ATTEMPT     Internal use only: define the initial value of the",
        "                        attempt parameter (default: 1). (default: 1)",
        "  --wrapper-prefix WRAPPER_PREFIX",
        "                        Prefix for URL created from wrapper directive",
        "                        (default: https://github.com/snakemake/snakemake-",
        "                        wrappers/raw/). Set this to a different URL to use",
        "                        your fork or a local clone of the repository, e.g.,",
        "                        use a git URL like",
        "                        'git+file://path/to/your/local/clone@'. (default:",
        "                        https://github.com/snakemake/snakemake-wrappers/raw/)",
        "  --default-remote-provider {S3,GS,FTP,SFTP,S3Mocked,gfal,gridftp,iRODS,AzBlob,XRootD}",
        "                        Specify default remote provider to be used for all",
        "                        input and output files that don't yet specify one.",
        "                        (default: None)",
        "  --default-remote-prefix DEFAULT_REMOTE_PREFIX",
        "                        Specify prefix for default remote provider. E.g. a",
        "                        bucket name. (default: )",
        "  --no-shared-fs        Do not assume that jobs share a common file system.",
        "                        When this flag is activated, Snakemake will assume",
        "                        that the filesystem on a cluster node is not shared",
        "                        with other nodes. For example, this will lead to",
        "                        downloading remote files on each cluster node",
        "                        separately. Further, it won't take special measures to",
        "                        deal with filesystem latency issues. This option will",
        "                        in most cases only make sense in combination with",
        "                        --default-remote-provider. Further, when using",
        "                        --cluster you will have to also provide --cluster-",
        "                        status. Only activate this if you know what you are",
        "                        doing. (default: False)",
        "  --greediness GREEDINESS",
        "                        Set the greediness of scheduling. This value between 0",
        "                        and 1 determines how careful jobs are selected for",
        "                        execution. The default value (1.0) provides the best",
        "                        speed and still acceptable scheduling quality.",
        "                        (default: None)",
        "  --no-hooks            Do not invoke onstart, onsuccess or onerror hooks",
        "                        after execution. (default: False)",
        "  --overwrite-shellcmd OVERWRITE_SHELLCMD",
        "                        Provide a shell command that shall be executed instead",
        "                        of those given in the workflow. This is for debugging",
        "                        purposes only. (default: None)",
        "  --debug               Allow to debug rules with e.g. PDB. This flag allows",
        "                        to set breakpoints in run blocks. (default: False)",
        "  --runtime-profile FILE",
        "                        Profile Snakemake and write the output to FILE. This",
        "                        requires yappi to be installed. (default: None)",
        "  --mode {0,1,2}        Set execution mode of Snakemake (internal use only).",
        "                        (default: 0)",
        "  --show-failed-logs    Automatically display logs of failed jobs. (default:",
        "                        False)",
        "  --log-handler-script FILE",
        "                        Provide a custom script containing a function 'def",
        "                        log_handler(msg):'. Snakemake will call this function",
        "                        for every logging output (given as a dictionary",
        "                        msg)allowing to e.g. send notifications in the form of",
        "                        e.g. slack messages or emails. (default: None)",
        "  --log-service {none,slack,wms}",
        "                        Set a specific messaging service for logging",
        "                        output.Snakemake will notify the service on errors and",
        "                        completed execution.Currently slack and workflow",
        "                        management system (wms) are supported. (default: None)",
        "",
        "CLUSTER:",
        "  --cluster CMD         Execute snakemake rules with the given submit command,",
        "                        e.g. qsub. Snakemake compiles jobs into scripts that",
        "                        are submitted to the cluster with the given command,",
        "                        once all input files for a particular job are present.",
        "                        The submit command can be decorated to make it aware",
        "                        of certain job properties (name, rulename, input,",
        "                        output, params, wildcards, log, threads and",
        "                        dependencies (see the argument below)), e.g.: $",
        "                        snakemake --cluster 'qsub -pe threaded {threads}'.",
        "                        (default: None)",
        "  --cluster-sync CMD    cluster submission command will block, returning the",
        "                        remote exitstatus upon remote termination (for",
        "                        example, this should be usedif the cluster command is",
        "                        'qsub -sync y' (SGE) (default: None)",
        "  --drmaa [ARGS]        Execute snakemake on a cluster accessed via DRMAA,",
        "                        Snakemake compiles jobs into scripts that are",
        "                        submitted to the cluster with the given command, once",
        "                        all input files for a particular job are present. ARGS",
        "                        can be used to specify options of the underlying",
        "                        cluster system, thereby using the job properties name,",
        "                        rulename, input, output, params, wildcards, log,",
        "                        threads and dependencies, e.g.: --drmaa ' -pe threaded",
        "                        {threads}'. Note that ARGS must be given in quotes and",
        "                        with a leading whitespace. (default: None)",
        "  --cluster-config FILE, -u FILE",
        "                        A JSON or YAML file that defines the wildcards used in",
        "                        'cluster'for specific rules, instead of having them",
        "                        specified in the Snakefile. For example, for rule",
        "                        'job' you may define: { 'job' : { 'time' : '24:00:00'",
        "                        } } to specify the time for rule 'job'. You can",
        "                        specify more than one file. The configuration files",
        "                        are merged with later values overriding earlier ones.",
        "                        This option is deprecated in favor of using --profile,",
        "                        see docs. (default: [])",
        "  --immediate-submit, --is",
        "                        Immediately submit all jobs to the cluster instead of",
        "                        waiting for present input files. This will fail,",
        "                        unless you make the cluster aware of job dependencies,",
        "                        e.g. via: $ snakemake --cluster 'sbatch --dependency",
        "                        {dependencies}. Assuming that your submit script (here",
        "                        sbatch) outputs the generated job id to the first",
        "                        stdout line, {dependencies} will be filled with space",
        "                        separated job ids this job depends on. Does not work",
        "                        for workflows that contain checkpoint rules. (default:",
        "                        False)",
        "  --jobscript SCRIPT, --js SCRIPT",
        "                        Provide a custom job script for submission to the",
        "                        cluster. The default script resides as 'jobscript.sh'",
        "                        in the installation directory. (default: None)",
        "  --jobname NAME, --jn NAME",
        "                        Provide a custom name for the jobscript that is",
        "                        submitted to the cluster (see --cluster). NAME is",
        "                        \"snakejob.{name}.{jobid}.sh\" per default. The wildcard",
        "                        {jobid} has to be present in the name. (default:",
        "                        snakejob.{name}.{jobid}.sh)",
        "  --cluster-status CLUSTER_STATUS",
        "                        Status command for cluster execution. This is only",
        "                        considered in combination with the --cluster flag. If",
        "                        provided, Snakemake will use the status command to",
        "                        determine if a job has finished successfully or",
        "                        failed. For this it is necessary that the submit",
        "                        command provided to --cluster returns the cluster job",
        "                        id. Then, the status command will be invoked with the",
        "                        job id. Snakemake expects it to return 'success' if",
        "                        the job was successfull, 'failed' if the job failed",
        "                        and 'running' if the job still runs. (default: None)",
        "  --cluster-cancel CLUSTER_CANCEL",
        "                        Specify a command that allows to stop currently",
        "                        running jobs. The command will be passed a single",
        "                        argument, the job id. (default: None)",
        "  --cluster-cancel-nargs CLUSTER_CANCEL_NARGS",
        "                        Specify maximal number of job ids to pass to",
        "                        --cluster-cancel command, defaults to 1000. (default:",
        "                        1000)",
        "  --cluster-sidecar CLUSTER_SIDECAR",
        "                        Optional command to start a sidecar process during",
        "                        cluster execution. Only active when --cluster is given",
        "                        as well. (default: None)",
        "  --drmaa-log-dir DIR   Specify a directory in which stdout and stderr files",
        "                        of DRMAA jobs will be written. The value may be given",
        "                        as a relative path, in which case Snakemake will use",
        "                        the current invocation directory as the origin. If",
        "                        given, this will override any given '-o' and/or '-e'",
        "                        native specification. If not given, all DRMAA stdout",
        "                        and stderr files are written to the current working",
        "                        directory. (default: None)",
        "",
        "KUBERNETES:",
        "  --kubernetes [NAMESPACE]",
        "                        Execute workflow in a kubernetes cluster (in the",
        "                        cloud). NAMESPACE is the namespace you want to use for",
        "                        your job (if nothing specified: 'default'). Usually,",
        "                        this requires --default-remote-provider and --default-",
        "                        remote-prefix to be set to a S3 or GS bucket where",
        "                        your . data shall be stored. It is further advisable",
        "                        to activate conda integration via --use-conda.",
        "                        (default: None)",
        "  --container-image IMAGE",
        "                        Docker image to use, e.g., when submitting jobs to",
        "                        kubernetes Defaults to",
        "                        'https://hub.docker.com/r/snakemake/snakemake', tagged",
        "                        with the same version as the currently running",
        "                        Snakemake instance. Note that overwriting this value",
        "                        is up to your responsibility. Any used image has to",
        "                        contain a working snakemake installation that is",
        "                        compatible with (or ideally the same as) the currently",
        "                        running version. (default: None)",
        "",
        "TIBANNA:",
        "  --tibanna             Execute workflow on AWS cloud using Tibanna. This",
        "                        requires --default-remote-prefix to be set to S3",
        "                        bucket name and prefix (e.g.",
        "                        'bucketname/subdirectory') where input is already",
        "                        stored and output will be sent to. Using --tibanna",
        "                        implies --default-resources is set as default.",
        "                        Optionally, use --precommand to specify any",
        "                        preparation command to run before snakemake command on",
        "                        the cloud (inside snakemake container on Tibanna VM).",
        "                        Also, --use-conda, --use-singularity, --config,",
        "                        --configfile are supported and will be carried over.",
        "                        (default: False)",
        "  --tibanna-sfn TIBANNA_SFN",
        "                        Name of Tibanna Unicorn step function (e.g.",
        "                        tibanna_unicorn_monty).This works as serverless",
        "                        scheduler/resource allocator and must be deployed",
        "                        first using tibanna cli. (e.g. tibanna deploy_unicorn",
        "                        --usergroup=monty --buckets=bucketname) (default:",
        "                        None)",
        "  --precommand PRECOMMAND",
        "                        Any command to execute before snakemake command on AWS",
        "                        cloud such as wget, git clone, unzip, etc. This is",
        "                        used with --tibanna.Do not include input/output",
        "                        download/upload commands - file transfer between S3",
        "                        bucket and the run environment (container) is",
        "                        automatically handled by Tibanna. (default: None)",
        "  --tibanna-config TIBANNA_CONFIG [TIBANNA_CONFIG ...]",
        "                        Additional tibanna config e.g. --tibanna-config",
        "                        spot_instance=true subnet=<subnet_id> security",
        "                        group=<security_group_id> (default: None)",
        "",
        "GOOGLE_LIFE_SCIENCE:",
        "  --google-lifesciences",
        "                        Execute workflow on Google Cloud cloud using the",
        "                        Google Life. Science API. This requires default",
        "                        application credentials (json) to be created and",
        "                        export to the environment to use Google Cloud Storage,",
        "                        Compute Engine, and Life Sciences. The credential file",
        "                        should be exported as GOOGLE_APPLICATION_CREDENTIALS",
        "                        for snakemake to discover. Also, --use-conda, --use-",
        "                        singularity, --config, --configfile are supported and",
        "                        will be carried over. (default: False)",
        "  --google-lifesciences-regions GOOGLE_LIFESCIENCES_REGIONS [GOOGLE_LIFESCIENCES_REGIONS ...]",
        "                        Specify one or more valid instance regions (defaults",
        "                        to US) (default: ['us-east1', 'us-west1', 'us-",
        "                        central1'])",
        "  --google-lifesciences-location GOOGLE_LIFESCIENCES_LOCATION",
        "                        The Life Sciences API service used to schedule the",
        "                        jobs. E.g., us-centra1 (Iowa) and europe-west2",
        "                        (London) Watch the terminal output to see all options",
        "                        found to be available. If not specified, defaults to",
        "                        the first found with a matching prefix from regions",
        "                        specified with --google-lifesciences-regions.",
        "                        (default: None)",
        "  --google-lifesciences-keep-cache",
        "                        Cache workflows in your Google Cloud Storage Bucket",
        "                        specified by --default-remote-prefix/{source}/{cache}.",
        "                        Each workflow working directory is compressed to a",
        "                        .tar.gz, named by the hash of the contents, and kept",
        "                        in Google Cloud Storage. By default, the caches are",
        "                        deleted at the shutdown step of the workflow.",
        "                        (default: False)",
        "",
        "TES:",
        "  --tes URL             Send workflow tasks to GA4GH TES server specified by",
        "                        url. (default: None)",
        "",
        "CONDA:",
        "  --use-conda           If defined in the rule, run job in a conda",
        "                        environment. If this flag is not set, the conda",
        "                        directive is ignored. (default: False)",
        "  --conda-not-block-search-path-envvars",
        "                        Do not block environment variables that modify the",
        "                        search path (R_LIBS, PYTHONPATH, PERL5LIB, PERLLIB)",
        "                        when using conda environments. (default: False)",
        "  --list-conda-envs     List all conda environments and their location on",
        "                        disk. (default: False)",
        "  --conda-prefix DIR    Specify a directory in which the 'conda' and 'conda-",
        "                        archive' directories are created. These are used to",
        "                        store conda environments and their archives,",
        "                        respectively. If not supplied, the value is set to the",
        "                        '.snakemake' directory relative to the invocation",
        "                        directory. If supplied, the `--use-conda` flag must",
        "                        also be set. The value may be given as a relative",
        "                        path, which will be extrapolated to the invocation",
        "                        directory, or as an absolute path. The value can also",
        "                        be provided via the environment variable",
        "                        $SNAKEMAKE_CONDA_PREFIX. (default: None)",
        "  --conda-cleanup-envs  Cleanup unused conda environments. (default: False)",
        "  --conda-cleanup-pkgs [{tarballs,cache}]",
        "                        Cleanup conda packages after creating environments. In",
        "                        case of 'tarballs' mode, will clean up all downloaded",
        "                        package tarballs. In case of 'cache' mode, will",
        "                        additionally clean up unused package caches. If mode",
        "                        is omitted, will default to only cleaning up the",
        "                        tarballs. (default: None)",
        "  --conda-create-envs-only",
        "                        If specified, only creates the job-specific conda",
        "                        environments then exits. The `--use-conda` flag must",
        "                        also be set. (default: False)",
        "  --conda-frontend {conda,mamba}",
        "                        Choose the conda frontend for installing environments.",
        "                        Mamba is much faster and highly recommended. (default:",
        "                        mamba)",
        "",
        "SINGULARITY:",
        "  --use-singularity     If defined in the rule, run job within a singularity",
        "                        container. If this flag is not set, the singularity",
        "                        directive is ignored. (default: False)",
        "  --singularity-prefix DIR",
        "                        Specify a directory in which singularity images will",
        "                        be stored.If not supplied, the value is set to the",
        "                        '.snakemake' directory relative to the invocation",
        "                        directory. If supplied, the `--use-singularity` flag",
        "                        must also be set. The value may be given as a relative",
        "                        path, which will be extrapolated to the invocation",
        "                        directory, or as an absolute path. (default: None)",
        "  --singularity-args ARGS",
        "                        Pass additional args to singularity. (default: )",
        "",
        "ENVIRONMENT MODULES:",
        "  --use-envmodules      If defined in the rule, run job within the given",
        "                        environment modules, loaded in the given order. This",
        "                        can be combined with --use-conda and --use-",
        "                        singularity, which will then be only used as a",
        "                        fallback for rules which don't define environment",
        "                        modules. (default: False)",
        "",
        " If an arg is specified in more than one place, then commandline values",
        "override environment variables which override defaults."
    ],
    "spectral": [
        "spectral lint [documents..]",
        "",
        "lint JSON/YAML documents from files or URLs",
        "",
        "Positionals:",
        "  documents  Location of JSON/YAML documents. Can be either a file, a glob or fetchable resource(s) on the web.  [array] [default: []]",
        "",
        "Options:",
        "  --version                    Show version number  [boolean]",
        "  --help                       Show help  [boolean]",
        "  --encoding, -e               text encoding to use  [string] [default: \"utf8\"]",
        "  --format, -f                 formatter to use for outputting results  [string] [choices: \"json\", \"stylish\", \"junit\", \"html\", \"text\", \"teamcity\"] [default: \"stylish\"]",
        "  --output, -o                 output to a file instead of stdout  [string]",
        "  --resolver                   path to custom json-ref-resolver instance  [string]",
        "  --ruleset, -r                path/URL to a ruleset file  [string]",
        "  --skip-rule, -s              ignore certain rules if they are causing trouble  [string]",
        "  --fail-severity, -F          results of this level or above will trigger a failure exit code  [string] [choices: \"error\", \"warn\", \"info\", \"hint\"] [default: \"error\"]",
        "  --display-only-failures, -D  only output results equal to or greater than --fail-severity  [boolean] [default: false]",
        "  --ignore-unknown-format      do not warn about unmatched formats  [boolean] [default: false]",
        "  --show-unmatched-globs       show unmatched glob patterns  [deprecated: use --fail-on-unmatched-globs] [boolean] [default: false]",
        "  --fail-on-unmatched-globs    fail on unmatched glob patterns  [boolean] [default: false]",
        "  --verbose, -v                increase verbosity  [boolean]",
        "  --quiet, -q                  no logging - output only  [boolean]"
    ],
    "sql-lint": [
        "Usage: sql-lint [options]",
        "",
        "Lint sql files and stdin for errors, oddities, and bad practices.",
        "",
        "Options:",
        "  -V, --version                output the version number",
        "  --fix [string]               The .sql string to fix (experimental and alpha)",
        "  -d, --driver <string>        The driver to use, must be one of ['mysql',",
        "                               'postgres']",
        "  -v, --verbose                Brings back information on the what it's linting",
        "                               and the tokens generated",
        "  --format <string>            The format of the output, can be one of",
        "                               ['simple', 'json'] (default: \"simple\")",
        "  --host <string>              The host for the database connection",
        "  --user <string>              The user for the database connection",
        "  --password <string>          The password for the database connection",
        "  --port <string>              The port for the database connection",
        "  --config <string>            The path to the configuration file",
        "  --ignore-errors <string...>  The errors to ignore (comma separated)",
        "  -h, --help                   display help for command"
    ],
    "sqlfluff": [
        "Usage: sqlfluff [OPTIONS] COMMAND [ARGS]...",
        "",
        "  SQLFluff is a modular SQL linter for humans.",
        "",
        "Options:",
        "  --version   Show the version and exit.",
        "  -h, --help  Show this message and exit.",
        "",
        "Commands:",
        "  dialects  Show the current dialects available.",
        "  fix       Fix SQL files.",
        "  lint      Lint SQL files via passing a list of files or using stdin.",
        "  parse     Parse SQL files and just spit out the result.",
        "  rules     Show the current rules in use.",
        "  version   Show the version of sqlfluff."
    ],
    "standard": [
        "standard - Use JavaScript Standard Style (https://standardjs.com)",
        "",
        "Usage:",
        "    standard <flags> [FILES...]",
        "",
        "    If FILES is omitted, all JavaScript source files (*.js, *.jsx, *.mjs, *.cjs)",
        "    in the current working directory are checked, recursively.",
        "",
        "    Certain paths (node_modules/, coverage/, vendor/, *.min.js, bundle.js, and",
        "    files/folders that begin with '.' like .git/) are automatically ignored.",
        "",
        "    Paths in a project's root .gitignore file are also automatically ignored.",
        "",
        "Flags:",
        "        --fix       Automatically fix problems",
        "    -v, --verbose   Show rule names for errors (to ignore specific rules)",
        "        --version   Show current version",
        "    -h, --help      Show usage information",
        "",
        "Flags (advanced):",
        "        --stdin     Read file text from stdin",
        "        --global    Declare global variable",
        "        --plugin    Use custom eslint plugin",
        "        --env       Use custom eslint environment",
        "        --parser    Use custom js parser (e.g. babel-eslint)",
        ""
    ],
    "stylelint": [
        "",
        "  A mighty, modern CSS linter.",
        "",
        "  Usage: stylelint [input] [options]",
        "",
        "  Input: Files(s), glob(s), or nothing to use stdin.",
        "",
        "    If an input argument is wrapped in quotation marks, it will be passed to",
        "    globby for cross-platform glob support. node_modules are always ignored.",
        "    You can also pass no input and use stdin, instead.",
        "",
        "  Options:",
        "",
        "    --config",
        "",
        "      Path to a specific configuration file (JSON, YAML, or CommonJS), or the",
        "      name of a module in node_modules that points to one. If no --config",
        "      argument is provided, stylelint will search for configuration files in",
        "      the following places, in this order:",
        "        - a stylelint property in package.json",
        "        - a .stylelintrc file (with or without filename extension:",
        "          .json, .yaml, .yml, and .js are available)",
        "        - a stylelint.config.js file exporting a JS object",
        "      The search will begin in the working directory and move up the directory",
        "      tree until a configuration file is found.",
        "",
        "    --config-basedir",
        "",
        "      An absolute path to the directory that relative paths defining \"extends\"",
        "      and \"plugins\" are *relative to*. Only necessary if these values are",
        "      relative paths.",
        "",
        "    --print-config",
        "",
        "      Print the configuration for the given path.",
        "",
        "    --ignore-path, -i",
        "",
        "      Path to a file containing patterns that describe files to ignore. The",
        "      path can be absolute or relative to process.cwd(). By default, stylelint",
        "      looks for .stylelintignore in process.cwd().",
        "",
        "    --ignore-pattern, --ip",
        "",
        "      Pattern of files to ignore (in addition to those in .stylelintignore)",
        "",
        "    --fix",
        "",
        "      Automatically fix problems of certain rules.",
        "",
        "    --custom-syntax",
        "",
        "      Module name or path to a JS file exporting a PostCSS-compatible syntax.",
        "",
        "    --stdin",
        "",
        "      Accept stdin input even if it is empty.",
        "",
        "    --stdin-filename",
        "",
        "      A filename to assign stdin input.",
        "",
        "    --ignore-disables, --id",
        "",
        "      Ignore stylelint-disable comments.",
        "",
        "    --disable-default-ignores, --di",
        "",
        "      Allow linting of node_modules.",
        "",
        "    --cache                       [default: false]",
        "",
        "      Store the info about processed files in order to only operate on the",
        "      changed ones the next time you run stylelint. By default, the cache",
        "      is stored in \"./.stylelintcache\". To adjust this, use --cache-location.",
        "",
        "    --cache-location              [default: '.stylelintcache']",
        "",
        "      Path to a file or directory to be used for the cache location.",
        "      Default is \"./.stylelintcache\". If a directory is specified, a cache",
        "      file will be created inside the specified folder, with a name derived",
        "      from a hash of the current working directory.",
        "",
        "      If the directory for the cache does not exist, make sure you add a trailing \"/\"",
        "      on *nix systems or \"\\\" on Windows. Otherwise the path will be assumed to be a file.",
        "",
        "    --formatter, -f               [default: \"string\"]",
        "",
        "      The output formatter: \"compact\", \"json\", \"string\", \"tap\", \"unix\" or \"verbose\".",
        "",
        "    --custom-formatter",
        "",
        "      Path to a JS file exporting a custom formatting function.",
        "",
        "    --quiet, -q",
        "",
        "      Only register problems for rules with an \"error\"-level severity (ignore",
        "      \"warning\"-level).",
        "",
        "    --color",
        "    --no-color",
        "",
        "      Force enabling/disabling of color.",
        "",
        "    --report-needless-disables, --rd",
        "",
        "      Also report errors for stylelint-disable comments that are not blocking a lint warning.",
        "      The process will exit with code 2 if needless disables are found.",
        "",
        "    --report-invalid-scope-disables, --risd",
        "",
        "      Report stylelint-disable comments that used for rules that don't exist within the configuration object.",
        "      The process will exit with code 2 if invalid scope disables are found.",
        "",
        "    --report-descriptionless-disables, --rdd",
        "",
        "      Report stylelint-disable comments without a description.",
        "      The process will exit with code 2 if descriptionless disables are found.",
        "",
        "    --max-warnings, --mw",
        "",
        "      Number of warnings above which the process will exit with code 2.",
        "      Useful when setting \"defaultSeverity\" to \"warning\" and expecting the",
        "      process to fail on warnings (e.g. CI build).",
        "",
        "    --output-file, -o",
        "",
        "      Path of file to write report.",
        "",
        "    --version, -v",
        "",
        "      Show the currently installed version of stylelint.",
        "",
        "    --allow-empty-input, --aei",
        "",
        "      When glob pattern matches no files, the process will exit without throwing an error.",
        ""
    ],
    "swiftlint": [
        "OVERVIEW: A tool to enforce Swift style and conventions.",
        "",
        "USAGE: swiftlint <subcommand>",
        "",
        "OPTIONS:",
        "  --version               Show the version.",
        "  -h, --help              Show help information.",
        "",
        "SUBCOMMANDS:",
        "  analyze                 Run analysis rules",
        "  docs                    Open SwiftLint documentation website in the default",
        "                          web browser",
        "  generate-docs           Generates markdown documentation for all rules",
        "  lint (default)          Print lint warnings and errors",
        "  rules                   Display the list of rules and their identifiers",
        "  version                 Display the current version of SwiftLint",
        "",
        "  See 'swiftlint help <subcommand>' for detailed help."
    ],
    "syft": [
        "Generate a packaged-based Software Bill Of Materials (SBOM) from container images and filesystems",
        "",
        "Usage:",
        "   [flags]",
        "   [command]",
        "",
        "Examples:",
        "  syft packages alpine:latest                                a summary of discovered packages",
        "  syft packages alpine:latest -o json                        show all possible cataloging details",
        "  syft packages alpine:latest -o cyclonedx                   show a CycloneDX formatted SBOM",
        "  syft packages alpine:latest -o cyclonedx-json              show a CycloneDX JSON formatted SBOM",
        "  syft packages alpine:latest -o spdx                        show a SPDX 2.2 Tag-Value formatted SBOM",
        "  syft packages alpine:latest -o spdx-json                   show a SPDX 2.2 JSON formatted SBOM",
        "  syft packages alpine:latest -vv                            show verbose debug information",
        "  syft packages alpine:latest -o template -t my_format.tmpl  show a SBOM formatted according to given template file",
        "",
        "  Supports the following image sources:",
        "    syft packages yourrepo/yourimage:tag     defaults to using images from a Docker daemon. If Docker is not present, the image is pulled directly from the registry.",
        "    syft packages path/to/a/file/or/dir      a Docker tar, OCI tar, OCI directory, or generic filesystem directory",
        "",
        "  You can also explicitly specify the scheme to use:",
        "    syft packages docker:yourrepo/yourimage:tag            explicitly use the Docker daemon",
        "    syft packages podman:yourrepo/yourimage:tag             explicitly use the Podman daemon",
        "    syft packages registry:yourrepo/yourimage:tag          pull image directly from a registry (no container runtime required)",
        "    syft packages docker-archive:path/to/yourimage.tar     use a tarball from disk for archives created from \"docker save\"",
        "    syft packages oci-archive:path/to/yourimage.tar        use a tarball from disk for OCI archives (from Skopeo or otherwise)",
        "    syft packages oci-dir:path/to/yourimage                read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)",
        "    syft packages singularity:path/to/yourimage.sif        read directly from a Singularity Image Format (SIF) container on disk",
        "    syft packages dir:path/to/yourproject                  read directly from a path on disk (any directory)",
        "    syft packages file:path/to/yourproject/file            read directly from a path on disk (any single file)",
        "",
        "",
        "Available Commands:",
        "  attest      Generate a package SBOM as an attestation for the given [SOURCE] container image",
        "  completion  Generate a shell completion for Syft (listing local docker images)",
        "  convert     Convert between SBOM formats",
        "  help        Help about any command",
        "  login       Log in to a registry",
        "  packages    Generate a package SBOM",
        "  version     show the version",
        "",
        "Flags:",
        "      --catalogers stringArray     enable one or more package catalogers",
        "  -c, --config string              application config file",
        "  -d, --dockerfile string          include dockerfile for upload to Anchore Enterprise",
        "      --exclude stringArray        exclude paths from being scanned using a glob expression",
        "      --file string                file to write the default report output to (default is STDOUT)",
        "  -h, --help                       help for this command",
        "  -H, --host string                the hostname or URL of the Anchore Enterprise instance to upload to",
        "      --import-timeout uint        set a timeout duration (in seconds) for the upload to Anchore Enterprise (default 30)",
        "  -o, --output stringArray         report output format, options=[syft-json cyclonedx-xml cyclonedx-json github github-json spdx-tag-value spdx-json table text template] (default [table])",
        "      --overwrite-existing-image   overwrite an existing image during the upload to Anchore Enterprise",
        "  -p, --password string            the password to authenticate against Anchore Enterprise",
        "      --platform string            an optional platform specifier for container image sources (e.g. 'linux/arm64', 'linux/arm64/v8', 'arm64', 'linux')",
        "  -q, --quiet                      suppress all logging output",
        "  -s, --scope string               selection of layers to catalog, options=[Squashed AllLayers] (default \"Squashed\")",
        "  -t, --template string            specify the path to a Go template file",
        "  -u, --username string            the username to authenticate against Anchore Enterprise",
        "  -v, --verbose count              increase verbosity (-v = info, -vv = debug)",
        "      --version                    version for this command",
        "",
        "Use \" [command] --help\" for more information about a command."
    ],
    "tekton-lint": [
        "Usage:",
        "tekton-lint <path-to-yaml-files>",
        "",
        "Options:",
        "$ tekton-lint --watch                # Run tekton-lint in watch mode",
        "$ tekton-lint --version              # Show version number",
        "$ tekton-lint --help                 # Show help",
        "$ tekton-lint --color / --no-color   # Forcefully enable/disable colored output",
        "$ tekton-lint --format               # Format output. Available formatters: vscode (default) | stylish | json",
        "$ tekton-lint --quiet                # Report errors only - default: false",
        "$ tekton-lint --max-warnings <Int>   # Number of warnings to trigger nonzero exit code - default: -1",
        "",
        "Examples:",
        "# Globstar matching",
        "$ tekton-lint '**/*.yaml'",
        "",
        "# Exact file path",
        "$ tekton-lint my-pipeline.yaml my-task.yaml",
        "",
        "# Multiple glob patterns",
        "$ tekton-lint path/to/my/pipeline.yaml 'path/to/my/tasks/*.yaml'",
        "",
        "# Watch mode",
        "$ tekton-lint --watch '**/*.yaml'",
        ""
    ],
    "terraform-fmt": [
        "Usage: terraform [global options] <subcommand> [args]",
        "",
        "The available commands for execution are listed below.",
        "The primary workflow commands are given first, followed by",
        "less common or more advanced commands.",
        "",
        "Main commands:",
        "  init          Prepare your working directory for other commands",
        "  validate      Check whether the configuration is valid",
        "  plan          Show changes required by the current configuration",
        "  apply         Create or update infrastructure",
        "  destroy       Destroy previously-created infrastructure",
        "",
        "All other commands:",
        "  console       Try Terraform expressions at an interactive command prompt",
        "  fmt           Reformat your configuration in the standard style",
        "  force-unlock  Release a stuck lock on the current workspace",
        "  get           Install or upgrade remote Terraform modules",
        "  graph         Generate a Graphviz graph of the steps in an operation",
        "  import        Associate existing infrastructure with a Terraform resource",
        "  login         Obtain and save credentials for a remote host",
        "  logout        Remove locally-stored credentials for a remote host",
        "  output        Show output values from your root module",
        "  providers     Show the providers required for this configuration",
        "  refresh       Update the state to match remote systems",
        "  show          Show the current state or a saved plan",
        "  state         Advanced state management",
        "  taint         Mark a resource instance as not fully functional",
        "  test          Experimental support for module integration testing",
        "  untaint       Remove the 'tainted' state from a resource instance",
        "  version       Show the current Terraform version",
        "  workspace     Workspace management",
        "",
        "Global options (use these before the subcommand, if any):",
        "  -chdir=DIR    Switch to a different working directory before executing the",
        "                given subcommand.",
        "  -help         Show this help output, or the help for a specified subcommand.",
        "  -version      An alias for the \"version\" subcommand."
    ],
    "terragrunt": [
        "DESCRIPTION:",
        "   terragrunt - Terragrunt is a thin wrapper for Terraform that provides extra tools for working with multiple",
        "   Terraform modules, remote state, and locking. For documentation, see https://github.com/gruntwork-io/terragrunt/.",
        "",
        "USAGE:",
        "   terragrunt <COMMAND> [GLOBAL OPTIONS]",
        "",
        "COMMANDS:",
        "   run-all               Run a terraform command against a 'stack' by running the specified command in each subfolder. E.g., to run 'terragrunt apply' in each subfolder, use 'terragrunt run-all apply'.",
        "   terragrunt-info       Emits limited terragrunt state on stdout and exits",
        "   validate-inputs       Checks if the terragrunt configured inputs align with the terraform defined variables.",
        "   graph-dependencies    Prints the terragrunt dependency graph to stdout",
        "   hclfmt                Recursively find hcl files and rewrite them into a canonical format.",
        "   aws-provider-patch    Overwrite settings on nested AWS providers to work around a Terraform bug (issue #13018)",
        "   render-json           Render the final terragrunt config, with all variables, includes, and functions resolved, as json. This is useful for enforcing policies using static analysis tools like Open Policy Agent, or for debugging your terragrunt config.",
        "   *                     Terragrunt forwards all other commands directly to Terraform",
        "",
        "GLOBAL OPTIONS:",
        "   terragrunt-config                            Path to the Terragrunt config file. Default is terragrunt.hcl.",
        "   terragrunt-tfpath                            Path to the Terraform binary. Default is terraform (on PATH).",
        "   terragrunt-no-auto-init                      Don't automatically run 'terraform init' during other terragrunt commands. You must run 'terragrunt init' manually.",
        "   terragrunt-no-auto-retry                     Don't automatically re-run command in case of transient errors.",
        "   terragrunt-non-interactive                   Assume \"yes\" for all prompts.",
        "   terragrunt-working-dir                       The path to the Terraform templates. Default is current directory.",
        "   terragrunt-download-dir                      The path where to download Terraform code. Default is .terragrunt-cache in the working directory.",
        "   terragrunt-source                            Download Terraform configurations from the specified source into a temporary folder, and run Terraform in that temporary folder.",
        "   terragrunt-source-update                     Delete the contents of the temporary folder to clear out any old, cached source code before downloading new source code into it.",
        "   terragrunt-iam-role                          Assume the specified IAM role before executing Terraform. Can also be set via the TERRAGRUNT_IAM_ROLE environment variable.",
        "   terragrunt-iam-assume-role-duration          Session duration for IAM Assume Role session. Can also be set via the TERRAGRUNT_IAM_ASSUME_ROLE_DURATION environment variable.",
        "   terragrunt-iam-assume-role-session-name      Name for the IAM Assummed Role session. Can also be set via TERRAGRUNT_IAM_ASSUME_ROLE_SESSION_NAME environment variable.",
        "   terragrunt-ignore-dependency-errors          *-all commands continue processing components even if a dependency fails.",
        "   terragrunt-ignore-dependency-order           *-all commands will be run disregarding the dependencies",
        "   terragrunt-ignore-external-dependencies      *-all commands will not attempt to include external dependencies",
        "   terragrunt-include-external-dependencies     *-all commands will include external dependencies",
        "   terragrunt-parallelism <N>                   *-all commands parallelism set to at most N modules",
        "   terragrunt-exclude-dir                       Unix-style glob of directories to exclude when running *-all commands",
        "   terragrunt-include-dir                       Unix-style glob of directories to include when running *-all commands",
        "   terragrunt-check                             Enable check mode in the hclfmt command.",
        "   terragrunt-hclfmt-file                       The path to a single hcl file that the hclfmt command should run on.",
        "   terragrunt-override-attr                     A key=value attribute to override in a provider block as part of the aws-provider-patch command. May be specified multiple times.",
        "   terragrunt-debug                             Write terragrunt-debug.tfvars to working folder to help root-cause issues.",
        "   terragrunt-log-level                         Sets the logging level for Terragrunt. Supported levels: panic, fatal, error, warn (default), info, debug, trace.",
        "   terragrunt-strict-validate                   Sets strict mode for the validate-inputs command. By default, strict mode is off. When this flag is passed, strict mode is turned on. When strict mode is turned off, the validate-inputs command will only return an error if required inputs are missing from all input sources (env vars, var files, etc). When strict mode is turned on, an error will be returned if required inputs are missing OR if unused variables are passed to Terragrunt.",
        "   terragrunt-json-out                          The file path that terragrunt should use when rendering the terragrunt.hcl config as json. Only used in the render-json command. Defaults to terragrunt_rendered.json.",
        "",
        "VERSION:",
        "   v0.38.7",
        "",
        "AUTHOR(S):",
        "   Gruntwork <www.gruntwork.io>",
        ""
    ],
    "terrascan": [
        "Terrascan",
        "",
        "Detect compliance and security violations across Infrastructure as Code to mitigate risk before provisioning cloud native infrastructure.",
        "For more information, please visit https://runterrascan.io/",
        "",
        "Usage:",
        "  terrascan [command]",
        "",
        "Available Commands:",
        "  init        Initializes Terrascan and clones policies from the Terrascan GitHub repository.",
        "  scan        Detect compliance and security violations across Infrastructure as Code.",
        "  server      Run Terrascan as an API server",
        "  version     Terrascan version",
        "",
        "Flags:",
        "  -c, --config-path string      config file path",
        "  -l, --log-level string        log level (debug, info, warn, error, panic, fatal) (default \"info\")",
        "      --log-output-dir string   directory path to write the log and output files",
        "  -x, --log-type string         log output type (console, json) (default \"console\")",
        "  -o, --output string           output type (human, json, yaml, xml, junit-xml, sarif, github-sarif) (default \"human\")",
        "      --temp-dir string         temporary directory path to download remote repository,module and templates",
        "",
        "Use \"terrascan [command] --help\" for more information about a command."
    ],
    "tflint": [
        "Usage:",
        "  tflint [OPTIONS] [FILE or DIR...]",
        "",
        "Application Options:",
        "  -v, --version                                                 Print TFLint",
        "                                                                version",
        "      --init                                                    Install plugins",
        "      --langserver                                              Start language",
        "                                                                server",
        "  -f, --format=[default|json|checkstyle|junit|compact|sarif]    Output format",
        "                                                                (default:",
        "                                                                default)",
        "  -c, --config=FILE                                             Config file",
        "                                                                name (default:",
        "                                                                .tflint.hcl)",
        "      --ignore-module=SOURCE                                    Ignore module",
        "                                                                sources",
        "      --enable-rule=RULE_NAME                                   Enable rules",
        "                                                                from the",
        "                                                                command line",
        "      --disable-rule=RULE_NAME                                  Disable rules",
        "                                                                from the",
        "                                                                command line",
        "      --only=RULE_NAME                                          Enable only",
        "                                                                this rule,",
        "                                                                disabling all",
        "                                                                other defaults.",
        "                                                                Can be",
        "                                                                specified",
        "                                                                multiple times",
        "      --enable-plugin=PLUGIN_NAME                               Enable plugins",
        "                                                                from the",
        "                                                                command line",
        "      --var-file=FILE                                           Terraform",
        "                                                                variable file",
        "                                                                name",
        "      --var='foo=bar'                                           Set a Terraform",
        "                                                                variable",
        "      --module                                                  Inspect modules",
        "      --force                                                   Return zero",
        "                                                                exit status",
        "                                                                even if issues",
        "                                                                found",
        "      --no-color                                                Disable",
        "                                                                colorized output",
        "      --loglevel=[trace|debug|info|warn|error]                  Change the",
        "                                                                loglevel",
        "",
        "Help Options:",
        "  -h, --help                                                    Show this help",
        "                                                                message",
        ""
    ],
    "trivy": [
        "NAME:",
        "   trivy - Scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues and hard-coded secrets",
        "",
        "USAGE:",
        "   trivy [global options] command [command options] target",
        "",
        "VERSION:",
        "   0.29.2",
        "",
        "COMMANDS:",
        "   image, i          scan an image",
        "   filesystem, fs    scan local filesystem for language-specific dependencies and config files",
        "   rootfs            scan rootfs",
        "   repository, repo  scan remote repository",
        "   server, s         server mode",
        "   config, conf      scan config files",
        "   plugin, p         manage plugins",
        "   module, m         manage modules",
        "   kubernetes, k8s   scan kubernetes vulnerabilities, secrets and misconfigurations",
        "   sbom              generate SBOM for an artifact",
        "   version           print the version",
        "   help, h           Shows a list of commands or help for one command",
        "",
        "GLOBAL OPTIONS:",
        "   --cache-dir value  cache directory (default: \"/root/.cache/trivy\") [$TRIVY_CACHE_DIR]",
        "   --debug, -d        debug mode (default: false) [$TRIVY_DEBUG]",
        "   --help, -h         show help (default: false)",
        "   --quiet, -q        suppress progress bar and log output (default: false) [$TRIVY_QUIET]",
        "   --version, -v      print the version (default: false)",
        ""
    ],
    "tsqllint": [
        "running tsqllint",
        "",
        "tsqllint [options] [file.sql] | [dir] | [file.sql | dir]",
        "",
        "  -c, --config          Used to specify a .tsqllintrc file path other than the",
        "                        default",
        "  -f, --force           Used to force generation of default config file when",
        "                        one already exists",
        "  -i, --init            Generate default .tsqllintrc config file",
        "  -p, --print-config    Print path to config file",
        "  -l, --list-plugins    List the loaded plugins",
        "  -v, --version         Display tsqllint version",
        "  -h, --help            Display this help dialog",
        ""
    ],
    "v8r": [
        "\u2139 No config file found",
        "v8r <patterns..>",
        "",
        "Validate local json/yaml files against schema(s)",
        "",
        "Positionals:",
        "  patterns  One or more filenames or glob patterns describing local file or file",
        "            s to validate",
        "",
        "Options:",
        "      --help           Show help                                       [boolean]",
        "      --version        Show version number                             [boolean]",
        "  -v, --verbose        Run with verbose logging. Can be stacked e.g: -vv -vvv",
        "                                                                         [count]",
        "  -s, --schema         Local path or URL of a schema to validate against. If not",
        "                        supplied, we will attempt to find an appropriate schema",
        "                       on schemastore.org using the filename. If passed with glo",
        "                       b pattern(s) matching multiple files, all matching files",
        "                       will be validated against this schema            [string]",
        "  -c, --catalogs       Local path or URL of custom catalogs to use prior to sche",
        "                       mastore.org                                       [array]",
        "      --ignore-errors  Exit with code 0 even if an error was encountered. Passin",
        "                       g this flag means a non-zero exit code is only issued if",
        "                       validation could be completed successfully and one or mor",
        "                       e files were invalid           [boolean] [default: false]",
        "      --cache-ttl      Remove cached HTTP responses older than <cache-ttl> secon",
        "                       ds old. Passing 0 clears and disables cache completely",
        "                                                         [number] [default: 600]",
        "      --format         Output format for validation results",
        "                            [string] [choices: \"text\", \"json\"] [default: \"text\"]",
        "",
        "Examples:",
        "  v8r file.json                 Validate a single file",
        "  v8r file1.json file2.json     Validate multiple files",
        "  v8r 'dir/*.yml' 'dir/*.yaml'  Specify files to validate with glob patterns"
    ],
    "xmllint": [
        "Unknown option --help",
        "Usage : xmllint [options] XMLfiles ...",
        "  Parse the XML files and output the result of the parsing",
        "  --version : display the version of the XML library used",
        "  --debug : dump a debug tree of the in-memory document",
        "  --shell : run a navigating shell",
        "  --debugent : debug the entities defined in the document",
        "  --copy : used to test the internal copy implementation",
        "  --recover : output what was parsable on broken XML documents",
        "  --huge : remove any internal arbitrary parser limits",
        "  --noent : substitute entity references by their value",
        "  --noenc : ignore any encoding specified inside the document",
        "  --noout : don't output the result tree",
        "  --path 'paths': provide a set of paths for resources",
        "  --load-trace : print trace of all external entities loaded",
        "  --nonet : refuse to fetch DTDs or entities over network",
        "  --nocompact : do not generate compact text nodes",
        "  --htmlout : output results as HTML",
        "  --nowrap : do not put HTML doc wrapper",
        "  --valid : validate the document in addition to std well-formed check",
        "  --postvalid : do a posteriori validation, i.e after parsing",
        "  --dtdvalid URL : do a posteriori validation against a given DTD",
        "  --dtdvalidfpi FPI : same but name the DTD with a Public Identifier",
        "  --quiet : be quiet when succeeded",
        "  --timing : print some timings",
        "  --output file or -o file: save to a given file",
        "  --repeat : repeat 100 times, for timing or profiling",
        "  --insert : ad-hoc test for valid insertions",
        "  --compress : turn on gzip compression of output",
        "  --html : use the HTML parser",
        "  --xmlout : force to use the XML serializer when using --html",
        "  --nodefdtd : do not default HTML doctype",
        "  --push : use the push mode of the parser",
        "  --pushsmall : use the push mode of the parser using tiny increments",
        "  --memory : parse from memory",
        "  --maxmem nbbytes : limits memory allocation to nbbytes bytes",
        "  --nowarning : do not emit warnings from parser/validator",
        "  --noblanks : drop (ignorable?) blanks spaces",
        "  --nocdata : replace cdata section with text nodes",
        "  --format : reformat/reindent the output",
        "  --encode encoding : output in the given encoding",
        "  --dropdtd : remove the DOCTYPE of the input docs",
        "  --pretty STYLE : pretty-print in a particular style",
        "                   0 Do not pretty print",
        "                   1 Format the XML content, as --format",
        "                   2 Add whitespace inside tags, preserving content",
        "  --c14n : save in W3C canonical format v1.0 (with comments)",
        "  --c14n11 : save in W3C canonical format v1.1 (with comments)",
        "  --exc-c14n : save in W3C exclusive canonical format (with comments)",
        "  --nsclean : remove redundant namespace declarations",
        "  --testIO : test user I/O support",
        "  --catalogs : use SGML catalogs from $SGML_CATALOG_FILES",
        "               otherwise XML Catalogs starting from",
        "           file:///etc/xml/catalog are activated by default",
        "  --nocatalogs: deactivate all catalogs",
        "  --auto : generate a small doc on the fly",
        "  --xinclude : do XInclude processing",
        "  --noxincludenode : same but do not generate XInclude nodes",
        "  --nofixup-base-uris : do not fixup xml:base uris",
        "  --loaddtd : fetch external DTD",
        "  --dtdattr : loaddtd + populate the tree with inherited attributes",
        "  --stream : use the streaming interface to process very large files",
        "  --walker : create a reader and walk though the resulting doc",
        "  --pattern pattern_value : test the pattern support",
        "  --chkregister : verify the node registration code",
        "  --relaxng schema : do RelaxNG validation against the schema",
        "  --schema schema : do validation against the WXS schema",
        "  --schematron schema : do validation against a schematron",
        "  --sax1: use the old SAX1 interfaces for processing",
        "  --sax: do not build a tree but work just at the SAX level",
        "  --oldxml10: use XML-1.0 parsing rules before the 5th edition",
        "  --xpath expr: evaluate the XPath expression, imply --noout",
        "",
        "Libxml project home page: https://gitlab.gnome.org/GNOME/libxml2"
    ],
    "yamllint": [
        "usage: yamllint [-h] [-] [-c CONFIG_FILE | -d CONFIG_DATA]",
        "                [-f {parsable,standard,colored,github,auto}] [-s]",
        "                [--no-warnings] [-v]",
        "                [FILE_OR_DIR ...]",
        "",
        "A linter for YAML files. yamllint does not only check for syntax validity, but",
        "for weirdnesses like key repetition and cosmetic problems such as lines",
        "length, trailing spaces, indentation, etc.",
        "",
        "positional arguments:",
        "  FILE_OR_DIR           files to check",
        "",
        "options:",
        "  -h, --help            show this help message and exit",
        "  -                     read from standard input",
        "  -c CONFIG_FILE, --config-file CONFIG_FILE",
        "                        path to a custom configuration",
        "  -d CONFIG_DATA, --config-data CONFIG_DATA",
        "                        custom configuration (as YAML source)",
        "  -f {parsable,standard,colored,github,auto}, --format {parsable,standard,colored,github,auto}",
        "                        format for parsing output",
        "  -s, --strict          return non-zero exit code on warnings as well as",
        "                        errors",
        "  --no-warnings         output only error level problems",
        "  -v, --version         show program's version number and exit"
    ]
}